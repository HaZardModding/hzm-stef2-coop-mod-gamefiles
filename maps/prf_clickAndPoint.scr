//Chrissstrahl - 23.05.2023 - Proof of Concept - Click and Point

//------------------------------------------------------------------------------
// DECLARATIONS
//------------------------------------------------------------------------------
void main();
//void setupLevel();
//void setupActors();
void coop_endLevel();

//pacSelector_player0
//movementmode -> actor/player?


//------------------------------------------------------------------------------
// INCLUDES
// - this requires the inclusion of the hzm coop mod main script first
//------------------------------------------------------------------------------
#include "coop_mod/matrix/main.scr"
#include "coop_mod/matrix/pointAndClick.scr"

void main()
//------------------------------------------------------------------------------
// inizial function, started by the game
//------------------------------------------------------------------------------
{
	waitForPlayer();
	
	//eWalkto = spawn("script_model","model","models/enviro/enterprise_clothing_evo_boots.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/enviro/enterprise_clothing_boots-straight.tik","notsolid","1");	
	//eWalkto = spawn("script_model","model","models/fx/fx-sphere.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-redplasma.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-plasmaring.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","sysimg/icons/items/rune_armorpiercing.spr","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-sphere-quadraped2.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-sphere-idryllphoton.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-sphere-idryllmortar.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-sphere-fieldgenerator.tik","notsolid","1");
	//eWalkto = spawn("script_model","model","models/fx/fx-smoke-gray-directional.tik","notsolid","1");
	

	//------------------------------------------------------------------------------
	// SETUP INTERACTIVE ENTITIES - player can select them to obtein more info - actors can walk to them
	//------------------------------------------------------------------------------
	coop_pcaInteractive($patternEnhancher);
	coop_pcaInteractive($bridge);
	coop_pcaInteractive($fountain);
	coop_pcaInteractive($plant1);
	coop_pcaInteractive($plant2);
	coop_pcaInteractive($plant3);
	coop_pcaInteractive($controls);
	coop_pcaInteractive($burstRiffle);
	coop_pcaInteractive($klingonBox);
	//setvalidtarget( Boolean valid_target )Sets whether or not actor is valid target in actor to actor confrontations 
	
	//------------------------------------------------------------------------------
	// SETUP SELECTABLE ENTITIES
	//------------------------------------------------------------------------------
	coop_pcaSelectable($tuvok);
	coop_pcaSelectable($picard);
	coop_pcaSelectable($munro);
	coop_pcaSelectable($lurker1);
	coop_pcaSelectable($lurker2);
	coop_pcaSelectable($lurker3);
	coop_pcaSelectable($lurker4);
	coop_pcaSelectable($lurker5);
	coop_pcaSelectable($lurker6);
	globalCoop_main_waitAFrame();
	
	//------------------------------------------------------------------------------
	// make fish swim
	//------------------------------------------------------------------------------
	$fish.notsolid();
	$fish.anim( "idle" );
	$fish.followpath( $t13 , "loop" , "normalangles" );
}

void coop_justBecameSpectator()
//------------------------------------------------------------------------------
//executed by coop if player enters spectator
//------------------------------------------------------------------------------
{
	coop_pcaJustLeft(getCurrentEntity());
}

void coop_justDied()
//------------------------------------------------------------------------------
//executed by coop if player just died
//------------------------------------------------------------------------------
{
	coop_pcaJustLeft(getCurrentEntity());
}

void coop_justLeft()
//------------------------------------------------------------------------------
//executed by coop if player just left
//------------------------------------------------------------------------------
{
return;
	coop_pcaJustLeft(getCurrentEntity());
}

void coop_justSpawned()
//------------------------------------------------------------------------------
//executed by coop if player enters map/server
//------------------------------------------------------------------------------
{
	coop_pcaJustEntered(getCurrentEntity());
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
//credits, and history of map
//mark this map as completed to the scripts (can not fail anymore)
	globalCoop_mission_accomplished();
	globalCoop_main_globalCommand("nodamage");
	
	wait(3);

	//end server if in singleplayer
	if(getCvarInt("g_gametype") == 0){
		stuffcmd("disconnect\n");
		return;
	}
	
//load next map
	thread globalCoop_mission_completed("prf_clickAndPoint");
}