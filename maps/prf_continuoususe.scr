void main();
entity getPlayerFromTrigger(entity eTrigger);
void puzzleUsed();
void puzzleCanceled();
void puzzleFailed();
void puzzleSolved();
void electricBeamDisable();


void main()
{

}

entity getPlayerFromTrigger(entity eTrigger)
{
	entity ePlayer;
	ePlayer = eTrigger.getLastActivatingEntity();
	return ePlayer;
}

void puzzleUsed()
{
	entity ePlayer;
	
	ePlayer = getPlayerFromTrigger(getCurrentEntity());
	ePlayer.hudprint("Puzzle used\n");
	
	$beam0.deactivate();
	$beam1.deactivate();
	$beamHurttrigger0.nottriggerable();
	$beamHurttrigger1.nottriggerable();
}

void puzzleCanceled()
{
	entity ePlayer;
	ePlayer = getPlayerFromTrigger(getCurrentEntity());
	ePlayer.hudprint("Puzzle Canceled\n");
	$beam0.activate();
	$beam1.activate();
	$beamHurttrigger0.triggerable();
	$beamHurttrigger1.triggerable();
}

void puzzleFailed()
{
	entity ePlayer;
	ePlayer = getPlayerFromTrigger(getCurrentEntity());
	ePlayer.hudprint("Puzzle Failed\n");
	$beam0.activate();
	$beam1.activate();
	$beamHurttrigger0.triggerable();
	$beamHurttrigger1.triggerable();
}

void puzzleSolved()
{
	entity ePlayer;
	ePlayer = getPlayerFromTrigger(getCurrentEntity());
	ePlayer.hudprint("Puzzle Solved\n");
}

void electricBeamDisable()
{
	$beam0.deactivate();
	$beam1.deactivate();
	$beamHurttrigger0.nottriggerable();
	$beamHurttrigger1.nottriggerable();
	
	$puzzle.puzzleobject_deactivate();
}