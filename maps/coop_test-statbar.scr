//------------------------------------------------------------------------------
//Chrissstrahl - 2022.08.12 - Testmap created to test and show new features
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//Include HZM Coop Mod, as we need it for this
//
//The game dll starts the coop mod, so scripters don't need to worry
//------------------------------------------------------------------------------
#include "coop_mod/matrix/main.scr" 


//------------------------------------------------------------------------------
//Global variables to be used across the script
//------------------------------------------------------------------------------
vector vPositionStartFriendly;
vector vPositionStartEnemy;


//------------------------------------------------------------------------------
//Declare Functions for ease of use - not need if thread is called from a trigger
//------------------------------------------------------------------------------
void main();
void setInventory();
void setupLevel();
void setupPlayers();
void friendlyKilled();
void enemyKilled();
void timeIsUp();
//HELPER FUNCTIONS---------------------------------------------------------------
void	waitForPlayerToBeReady();
entity	grabActivator(entity eTrigger);
//REQUIRED FOR HZM COOP MOD------------------------------------------------------
void	coop_endLevel();


void main()
//------------------------------------------------------------------------------
//STARTED BY THE GAME ONCE THE BSP HAS BEEN LOADED and the level is ready to go
//------------------------------------------------------------------------------
{
	thread setInventory();
	thread setupLevel();
	thread setupPlayers();
}

void waitForPlayerToBeReady()
//------------------------------------------------------------------------------
//---------------------------------------------------------------HELPER FUNCTION
//waits for the player to be ready sp/mp
//------------------------------------------------------------------------------
{
	//wait for any player to join game sp/mp
	waitForPlayer();
	
	//if not singleplayer, wait for the the warmup time to be over
	if(getCvarInt("g_gametype") != 0){
		wait(getCvarInt("mp_warmupTime") - getLevelTime());
	}
	
	//have always a moment of waittime extra for the player to spawn and have a frame in the level before continuing
	wait(0.1);
}

entity grabActivator(entity eTrigger)
//------------------------------------------------------------------------------
//---------------------------------------------------------------HELPER FUNCTION
//get last activator from this given trigger - have it in a func so we can keep the code cleaner
//------------------------------------------------------------------------------
{
	if(doesEntityExist(eTrigger)){
		entity ePlayer;
		ePlayer = eTrigger.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			return ePlayer;
		}
	}
	return $NULL; //return a entity that does not exist - so we can detect if something did go worng
}

void setInventory()
//------------------------------------------------------------------------------
//sets weapons for players
//------------------------------------------------------------------------------
{
	//CASE SENSITIVE ("phaser" IS NOT EQUAL TO "Phaser")!
	// models/weapons/worldmodel-Phaser.tik
	// models/weapons/worldmodel-Phaser-stx.tik
	// models/weapons/worldmodel-BurstRifle.tik
	// models/weapons/worldmodel-CompressionRifle.tik
	// models/weapons/worldmodel-FieldAssaultRifle.tik
	// models/weapons/worldmodel-GrenadeLauncher.tik
	// models/weapons/worldmodel-Knife.tik
	// models/weapons/worldmodel-Tricorder-stx.tik
	// models/weapons/worldmodel-Tricorder.tik
	// models/weapons/worldmodel-Batleth.tik
	// models/weapons/worldmodel-sniperrifle.tik
	// models/weapons/worldmodel-imod.tik
	// models/weapons/worldmodel-rom-radgun.tik
	// models/weapons/worldmodel-rom-datapad.tik
	// models/weapons/worldmodel-rom-disruptor.tik
	// models/weapons/worldmodel-rom-radgun-romhands.tik
	// models/weapons/worldmodel-rom-disruptor-romhands.tik
	// models/weapons/worldmodel-tetryon.tik
	// models/weapons/worldmodel-attrex-rifle.tik
	// models/weapons/worldmodel-drull-staff.tik
	// models/weapons/worldmodel-photon.tik
	// models/weapons/worldmodel-enterprise.tik
	
	//hzm coop mod chrissstrahl - give weapons to players
	coop_string_weapon1 = "models/weapons/worldmodel-CompressionRifle.tik";
	coop_string_weapon2 = "models/weapons/worldmodel-Phaser-stx.tik";
	coop_string_weapon3 = "models/weapons/worldmodel-Tricorder-stx.tik";
	coop_string_weapon4 = "models/weapons/worldmodel-tetryon.tik";
	coop_string_weapon5 = "models/weapons/worldmodel-rom-disruptor.tik";
}


void setupPlayers()
//------------------------------------------------------------------------------
//does setup player invetory if needed/wanted
//------------------------------------------------------------------------------
{
	//wait for players to be ready
	waitForPlayerToBeReady();
	
	//setup players - if needed
}

void setupLevel()
//------------------------------------------------------------------------------
//does setup what ever need to be done on the level
//------------------------------------------------------------------------------
{
	//don't allow to die
	$friendly.immortal(1);
	$friendly.mass(99999);
	$friendly.pushable(0);
	$enemy.immortal(1);
	$enemy.mass(9999);
	$enemy.pushable(0);
	//more parameters are set with the level editor
	
	//remember location, so if a animation or anything else moves this entity, we can reset it
	vPositionStartFriendly	= $friendly.getOrigin();
	vPositionStartEnemy		= $enemy.getOrigin();
}

void statBar1()
//------------------------------------------------------------------------------
//if trigger $statBar1 in level is used
//------------------------------------------------------------------------------
{
	//if trigger or activator does not exist, abort (cuz bitchy player tries to cheat via console)
	//entity ePlayer;
	//ePlayer = grabActivator(getCurrentEntity());
	//if(!doesEntityExist(ePlayer)){ return; }
	//We are not using it, but leave it in as example
	
	//make sure to stop previouse
	globalCoop_statbar_timerStop();
	wait(0.2);
	
	//reposition entity every time
	$friendly.warp(vPositionStartFriendly);
	$enemy.warp(vPositionStartEnemy);
	
	//make solid as soon as no player is inside them - stops players from getting stuck
	//globalCoop_player_makeSolidASAP($friendly);
	//globalCoop_player_makeSolidASAP($enemy);

	//give health
	$friendly.health(1000);
	$enemy.health(300);
	
	//make solid, cuz coop makes em nonsolid on death to prevent physics issues
	$friendly.solid();
	$enemy.solid();
	
	//set starting animation
	$friendly.anim("idle");
	$enemy.anim("idle");
	
	//start statbar - entity,  color red=0 blue=1, custom name, stop-health (default 0), thread to start if dead or stop-health is hit
	thread globalCoop_statbar_health($friendly,"blue","$$FriendDesc1$$",2,"friendlyKilled");
	thread globalCoop_statbar_health($enemy,"red","$$HostileDesc1$$",2,"enemyKilled");
}

void statBar2()
//------------------------------------------------------------------------------
//if trigger $statBar2 in level is used
//------------------------------------------------------------------------------
{
	globalCoop_statbar_healthStop($friendly);
	globalCoop_statbar_healthStop($enemy);
}

void statBar3()
//------------------------------------------------------------------------------
//if trigger $statBar2 in level is used
//------------------------------------------------------------------------------
{
	//make sure to stop previouse - we have only two huds dude
	globalCoop_statbar_healthStop($friendly);
	globalCoop_statbar_healthStop($enemy);
	
	//make sure to stop previouse
	globalCoop_statbar_timerStop();
	wait(0.2);
	
	//start statbar - color red=0 blue=1, up/down, custom name, time in sec, thread to start if time runs out
	globalCoop_statbar_timer("red","down","Timer Baby yay!",10,"timeIsUp");
}

void statBar4()
//------------------------------------------------------------------------------
//if trigger $statBar4 in level is used
//------------------------------------------------------------------------------
{
	//make sure to stop previouse
	globalCoop_statbar_timerStop();
}

void statBar5()
//------------------------------------------------------------------------------
//if trigger $statBar2 in level is used
//------------------------------------------------------------------------------
{
	//make sure to stop previouse - we have only two huds dude
	globalCoop_statbar_healthStop($friendly);
	globalCoop_statbar_healthStop($enemy);
	
	//make sure to stop previouse
	globalCoop_statbar_timerStop();
	wait(0.2);
	
	//start statbar - color red=0 blue=1, up/down, custom name, time in sec, thread to start if time runs out
	globalCoop_statbar_timer("blue","up","Time goes Up",20,"timeGoneUP");
}

void statBar6()
//------------------------------------------------------------------------------
//if trigger $statBar6 in level is used
//------------------------------------------------------------------------------
{
	//make sure to stop previouse
	globalCoop_statbar_timerStop();
}

void friendlyKilled()
//------------------------------------------------------------------------------
//Friendly was killed - or at least had very little health left
//we made inigor immortal so he can be reused, so technicaly he does not die
//------------------------------------------------------------------------------
{
	//if the actor would be killed for real it would do this on its own
	//but we have set them to immortal, so it always has 1 health left
	//and does not die - This is why we play the death animation manually
	$friendly.animateOnce("death");
}

void enemyKilled()
//------------------------------------------------------------------------------
//Enemy was killed - or at least had very little health left
//we made lurker immortal so he can be reused, so technicaly he does not die
//------------------------------------------------------------------------------
{
	//if the actor would be killed for real it would do this on its own
	//but we have set them to immortal, so it always has 1 health left
	//and does not die - This is why we play the death animation manually
		//$enemy.animateOnce("death01"); //use specific anim, to prevent exploding and removal
	$enemy.animateOnce("takeoff"); //use this animation to scare player - because I feel like it
	
	//wait for the animation to end
	waitForAnimation($enemy,"takeoff",-0.05);
	
	//play fly animation
	$enemy.animateOnce("land");
	
	//wait for the animation to end
	waitForAnimation($enemy,"land",-0.05);
	
	//play fly animation
	$enemy.animateOnce("death02");//use specific anim, to prevent exploding and removal
}

void timeIsUp()
//------------------------------------------------------------------------------
//started if timer is up
//------------------------------------------------------------------------------
{
	entity ePlayer;
	float fPlayerIdInUse=0;
	//[b60025] Chrissstrahl - now using Entity numbers instead of targetnames
	while(fPlayerIdInUse<coop_integer_maxPlayers){
		ePlayer = getentity("*"+fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			ePlayer.hudPrint("No more time left...\n");
		}	
		fPlayerIdInUse++;
	}
}

void timeGoneUP()
//------------------------------------------------------------------------------
//started if timer is up
//------------------------------------------------------------------------------
{
	//execute command fotr all players
	//droptofloor,kill,notsolid,solid,hide,show,nodamage,takedamage,putaway,health,ammo,amor
	//globalCoop_main_globalCommand("amor");
	
	entity ePlayer;
	float fPlayerIdInUse=0;
	//[b60025] Chrissstrahl - now using Entity numbers instead of targetnames
	while(fPlayerIdInUse<coop_integer_maxPlayers){
		ePlayer = getentity("*"+fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			ePlayer.hudPrint("You have all the time...\nIn the Universe\n");
		}	
		fPlayerIdInUse++;
	}
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	thread globalCoop_mission_completed("coop_test-statbar");
}

