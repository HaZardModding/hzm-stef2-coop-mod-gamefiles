//This script contains the code for the codepannel, use as you please
//This script contains the code for the codepannel, use as you please
//This script contains the code for the codepannel, use as you please


//Global Variables, can be accessed by all Functions/scriptfiles
//if definied outside a function, just like this
////////////////////////////////////////////////////////////////////////////////
float 	float_codepanelCurrentNumber,
		float_codepanelLastUsed;

//declaration
////////////////////////////////////////////////////////////////////////////////
void	codepanel_noMenu();
void	codepanel();
void	codepanel_One();
void	codepanel_Two();
void	codepanel_Three();
void	codepanel_Four();
void	codepanel_Five();
void	codepanel_Six();
void	codepanel_Seven();
void	codepanel_Eight();
void	codepanel_Nine();
void	codepanel_Zero();

void codepanel_noMenu()
{
	entity ePlayer;
	ePlayer = mom_returnPlayerForTrigger(getCurrentEntity());
	mom_showMessagePlayer(ePlayer,"It seams you don't have the Menu for this Code pannel...");
}


void codepanel()
//this function is started once the trigger is used
{
//create internal variables, used only inside this function
	float	fcodepanelLastUsed,
			fCombinationIndex,
			fCurrentCorrectNumber,
			fError;
			
	entity	eTrigger,ePlayer;
	eTrigger = getCurrentEntity();
	if(doesEntityExist(eTrigger))
	{
		ePlayer = eTrigger.getLastActivatingEntity();
	}
	
//set equal here, below it will respond to change
	fcodepanelLastUsed		= float_codepanelLastUsed;
	
//repeat this procedure the whole time
	while(1)
	{
	//check if a function has been called since the last time
		if(float_codepanelLastUsed != fcodepanelLastUsed)
		{
		//set next index number
			fCombinationIndex++;
			
		//remember the last time a function has been used
			fcodepanelLastUsed = float_codepanelLastUsed;
			
		//see where we are at the current Index
		//and grab the numnber that would be correct
		//to input in order to crack the code combination
			if(fCombinationIndex==1)
			{
				fCurrentCorrectNumber 		= 2;
			}
			else if(fCombinationIndex==2)
			{
				fCurrentCorrectNumber 		= 4;
			}
			else if(fCombinationIndex==3)
			{
				fCurrentCorrectNumber 		= 6;
			}
			else
			{
				fCurrentCorrectNumber 		= 8;
			}		
		//compare the nuber from the user input to the correct number
		//if the number is wrong, mark the error
			if(float_codepanelCurrentNumber != fCurrentCorrectNumber)
			{
				fError=1;
			}
			
		//once all numbers have been entred,
		//check if the combination is correct
			if(fCombinationIndex == 4)
			{
			//remove the Menu from the player again
				thread mom_exitMenuPlayer(ePlayer);
				
			//code incorrect
				if(fError == 1)
				{
				//let the player know whats happening
					mom_showMessagePlayer(ePlayer,"Code INCORRECT!");
					
				//exit this fnction now				
					return;
				}
			//code correct
				else
				{
				//let the player know whats happening
					mom_showMessagePlayer(ePlayer,"Code Accepted...");
					
				//unlock the door
					$door1.unlock();
					
				//remove the symbol
					$codepanel_symbol.remove();
					
				//clear thread, so the trigger does no longer start the code menu
					$codepanel_trigger.thread("");
					
				//exit this fnction now
					return;	
				}
			
			//reset variables, allow restart
			//not used so far
				//fcodepanelLastUsed		= float_codepanelLastUsed;
				//fCombinationIndex	= 0;
				//fError				= 0;
			}
		}
	//pause a moment or you will get a run away loop error
		wait(0.02);
	}
}

void codepanel_One()
//this function is called when option 1 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=1;
	//centerprint("used one\n");
}
void codepanel_Two()
//this function is called when option 2 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=2;
	//centerprint("used two\n");
}
void codepanel_Three()
//this function is called when option 3 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=3;
	//centerprint("used three\n");
}
void codepanel_Four()
//this function is called when option 4 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=4;
	//centerprint("used four\n");
}
void codepanel_Five()
//this function is called when option 5 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=5;
	//centerprint("used five\n");
}
void codepanel_Six()
//this function is called when option 6 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=6;
	//centerprint("used six\n");
}
void codepanel_Seven()
//this function is called when option 7 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=7;
	//centerprint("used seven\n");
}
void codepanel_Eight()
//this function is called when option 8 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=8;
	//centerprint("used eight\n");
}
void codepanel_Nine()
//this function is called when option 9 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=9;
	//centerprint("used nine\n");
}
//this function is called when option 10 is used
void codepanel_Zero()
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=0;
	//centerprint("used zero\n");
}


