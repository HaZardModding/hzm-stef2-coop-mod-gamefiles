//This script contains the code for the replicator, use as you please
//This script contains the code for the replicator, use as you please
//This script contains the code for the replicator, use as you please


//Global Variables, can be accessed by all Functions/scriptfiles
//if definied outside a function, just like this
////////////////////////////////////////////////////////////////////////////////
float	float_replicating,
		float_pickup,
		float_scale_item,
		float_offset_item;
string	string_class_item,
		string_model_item;

//declaration
////////////////////////////////////////////////////////////////////////////////
void	replicator_noMenu();
void	replicator();
void	replicator_One();
void	replicator_Two();
void	replicator_Three();
void	replicator_Four();
void	replicator_Five();
void	replicator_Six();
void	replicator_Seven();
void	replicator_Eight();
void	replicator_Nine();
void	replicator_Zero();
void	replicator_Ten();
void	replicator_Eleven();
void	replicator_Twelve();
void	replicator_Thirteen();
void	replicator_Fourteen();
void	replicator_Fifteen();
void	replicator_pickupPlayer(entity ePlayer);

void replicator_noMenu()
{
	entity ePlayer;
	ePlayer = mom_returnPlayerForTrigger(getCurrentEntity());
	mom_showMessagePlayer(ePlayer,"It seams you don't have the Menu for this Replicator...");
}

void replicator_pickupPlayer(entity ePlayer)
{
//exit when replica is not ready
	if(!float_pickup)
	{
	//exit this function now
		return;	
	}
//mark replica as unready
	float_pickup=0;
	
//do not give an item to the player if the replica is gone
	if(!doesEntityExist($FakeReplicate))
	{
	//exit this function now
		return;
	}

//make sure the entity number is not negative
	if(mom_checkExistingLivingEntity(ePlayer))
	{
	//if the object exist
		if(doesEntityExist($FakeReplicate))
		{
		//remove the fake replicate
			$FakeReplicate.remove();
		}
	//spawn the entity, at the players location, so he picks it automatically up
		spawn(string_class_item,"model",string_model_item,"targetname","RealReplicate","origin",""+ePlayer.getOrigin(),"scale","0.01");
	//wait a moment
		wait(.1);
	//if it exists
		if(doesEntityExist($RealReplicate))
		{
		//remove the object again
			$RealReplicate.remove();
		}
	}
}

void replicator()
//this function is started once the trigger is used
{
//set default, so it spawns at last something
	string_class_item = "";
	string_model_item = "";
}

void replicator_One()
//this function is called when option 1 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = .35;
//change the z axis, so it is alinged correctly
	float_offset_item = 0;
//set class name
	string_class_item = "health";
//set the model
	string_model_item = "item/health_large-hypospray.tik";
}

void replicator_Two()
//this function is called when option 2 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = .35;
//change the z axis, so it is alinged correctly
	float_offset_item = -8;
//set class name
	string_class_item = "BasicArmor";
//set the model
	string_model_item = "item/armor_large_shield.tik";
}

void replicator_Three()
//this function is called when option 3 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = 1;
//change the z axis, so it is alinged correctly
	float_offset_item = 0;
//set class name
	string_class_item = "script_model";
//set the model
	string_model_item = "enviro/academy_desk_cup1.tik";
}

void replicator_Four()
//this function is called when option 4 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = .5;
//change the z axis, so it is alinged correctly
	float_offset_item = 0;
//set class name
	string_class_item = "AmmoEntity";
//set the model
	string_model_item = "item/ammo_fed_large.tik";
}

void replicator_Five()
//this function is called when option 5 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = 1;
//change the z axis, so it is alinged correctly
	float_offset_item = 6;
//set class name
	string_class_item = "weapon";
//set the model
	string_model_item = "weapons/worldmodel-tricorder-STX.tik";
}

void replicator_Six()
//this function is called when option 6 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = 1;
//change the z axis, so it is alinged correctly
	float_offset_item = 0;
//set class name
	string_class_item = "script_model";
//set the model
	string_model_item = "models/enviro/klingon_food2.tik";
}

void replicator_Seven()
//this function is called when option 7 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = .6;
//change the z axis, so it is alinged correctly
	float_offset_item = -8;
//set class name
	string_class_item = "Powerup";
//set the model
	string_model_item = "item/powerup_regen.tik";
}

void replicator_Eight()
//this function is called when option 8 is used
{
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//exit function
		return;
	}
//scale, the model down, so it fits inside the replicator
	float_scale_item = .4;
//change the z axis, so it is alinged correctly
	float_offset_item = 10;
//set class name
	string_class_item = "Rune";
//set the model
	string_model_item = "item/rune_deathquad.tik";
}

void replicator_Nine()
//this function is called when option 9 is used
{
}

//this function is called when option 10 is used
void replicator_Zero()
{
}

void replicator_Ten()
{
}

void replicator_Eleven()
{
}

void replicator_Twelve()
{
}

void replicator_Thirteen()
{
}

void replicator_Fourteen()
//when player uses: "replicate"
{
	entity	eTrigger,ePlayer;
	eTrigger = getCurrentEntity();
	if(doesEntityExist(eTrigger))
	{
		ePlayer = eTrigger.getLastActivatingEntity();
	}	

//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//tell the player what is going on
		mom_showMessagePlayer(ePlayer,"Alreday replicating...");
	//exit function
		return;
	}
//mark replicator as in use
	float_replicating=1;
	
//mark replica as unready
	float_pickup=0;
	
//if the object exist
	if(doesEntityExist($FakeReplicate))
	{
	//play replicating sound
		$FakeReplicate.playsound("sound/ships/enterprise/ent_replicator.wav",3,2,64);
	//wait a moment
		wait(.5);
	//display replication effect
		$FakeReplicate.displayEffect("TransportOut","FederationWeapons");
	//remove the fake replicate, before we spawn a new one
		$FakeReplicate.fade(1,0);
	//wait a moment
		wait(1.5);
	//if the object exist
		if(doesEntityExist($FakeReplicate))
		{
		//remove entity
			$FakeReplicate.remove();		
		}
	}
//check if the player has selected a item
	else if(string_class_item == "")
	{
	//tell the player what is going on
		mom_showMessagePlayer(ePlayer,"You need to select an Item to replicate...");
	//UNmark replicator as in use
		float_replicating=0;
	//exit the function now
		return;
	}

//create function internal variables
	entity	eFakeReplicate;
	vector	vOrigin;
	
//get replicator spawn location
	vOrigin = $replicator_origin.getOrigin();
	
//change Z offset, so the item is loacted properly
	vOrigin_z += float_offset_item;
	
//spawn the entity, at the players location, so he picks it automatically up
	eFakeReplicate = spawn("script_model","model",string_model_item,"origin",vectorToString(vOrigin),"scale","0","targetname","FakeReplicate");
	
//wait for the item to spwan, and become available
	wait(0.02);
	
//make invisible, so it can be faded in
	eFakeReplicate.forceAlpha(1);
	eFakeReplicate.alpha(0);
	
//no targeting info
	eFakeReplicate.contents( "nottargetable" );

//check if the replicated object still exists
	if(doesEntityExist(eFakeReplicate))
	{
	//play replicating sound
		eFakeReplicate.playsound("sound/ships/enterprise/ent_replicator.wav",3,2,64);
	//wait a moment
		wait(.5);
	//scale object to wanted size
		eFakeReplicate.scale(float_scale_item);
	//fade object in
		eFakeReplicate.fadein(2.5,1);
	//display replication effect
		eFakeReplicate.displayEffect("TransportIn","FederationWeapons");
	//wait a moment
		wait(2.5);	
	//mark replica as ready
		float_pickup=1;
	}
//UNmark replicator as in use
	float_replicating=0;
}

void replicator_Fifteen()
//when player clicks on "pickup/use"
{
	entity	ePlayer;
	ePlayer = mom_returnPlayerForTrigger(getCurrentEntity());
//chek if the replicator is allready replicating
	if(float_replicating)
	{
	//tell the player what is going on
		thread mom_showMessagePlayer(ePlayer,"Please wait...");
	//exit function
		return;
	}
//chek if the replicator has not yet replicated something
	if(!doesEntityExist($FakeReplicate))
	{
	//tell the player what is going on
		thread mom_showMessagePlayer(ePlayer,"First you need to replicate something...");
	//exit function
		return;
	}
//check for these models, they can not be picked up
	if(	$FakeReplicate.getModelName() == "models/enviro/academy_desk_cup1.tik" ||
		$FakeReplicate.getModelName() == "models/enviro/klingon_food2.tik" )
	{
	//remove the object, don't bother with putting it into the players hands
		if(doesEntityExist($FakeReplicate))
		{
			$FakeReplicate.remove();
		}
	//exit function
		return;
	}
//give the item to the player
	replicator_pickupPlayer(ePlayer);
}


