//codename: coop_defenseAlpha
void main();
entity returnMeARandomPlayer();
void superseedspawnlocations(vector vOrgigin);
void setupLevel();
void leavingTunnel();
void fedOutpostSpawner0();
void setOnUseThread(entity e,string sThread);
void setOnDamageThread(entity e,string sThread);
void setOnTouchThread(entity e,string sThread);
void setOnBlockThread(entity e,string sThread);
void spawnFallschirmspringer();
void dispenserSetup();
void dispenserOverwrite(entity e);
void lockedDoor();
void coop_endLevel();

//locations and angle we can use to move player out of the way of the shuttle
//brush we can use to check if a player is inside the landing area of the shuttle
//SHUTTLE MOVE AWAY POSITIONS
vector vec_platformMovePos1 = '7508 -777 65';
float f_platformFloatAngle1 = 90;

vector vec_platformMovePos2 = '7554 -777 65';
float f_platformFloatAngle2 = 90;

vector vec_platformMovePos3 = '7600 -777 65';
float f_platformFloatAngle3 = 90;

vector vec_platformMovePos4 = '7646 -777 65';
float f_platformFloatAngle4 = 90;

vector vec_platformMovePos5 = '7662 216 65';
float f_platformFloatAngle5 = 270;

vector vec_platformMovePos6 = '7616 216 65';
float f_platformFloatAngle6 = 270;

vector vec_platformMovePos7 = '7570 216 65';
float f_platformFloatAngle7 = 270;

vector vec_platformMovePos8 = '7524 216 65';
float f_platformFloatAngle8 = 270;

//$landingplatformColisionCheck

//Co-op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/matrix/main.scr"

#include "maps/global_scripts/global_debugutils.scr"
#include "maps/global_scripts/global_common.scr"
#include "maps/global_scripts/global_flyin.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/maps/coop_hatoriaOutpost/legacy.script"//4.3 downwards compatibility
#include "coop_mod/maps/coop_hatoriaOutpost/declarations.script"
#include "coop_mod/maps/coop_hatoriaOutpost/aquarium.script"
#include "coop_mod/maps/coop_hatoriaOutpost/holodeck.script"
#include "coop_mod/maps/coop_hatoriaOutpost/blitz.script"
#include "coop_mod/maps/coop_hatoriaOutpost/fallschirmspringer.script"
#include "coop_mod/maps/coop_hatoriaOutpost/objectives.script"
#include "coop_mod/maps/coop_hatoriaOutpost/replicator.script"
#include "coop_mod/maps/coop_hatoriaOutpost/landingplatform.script"
#include "coop_mod/maps/coop_hatoriaOutpost/headmaster.script"
#include "coop_mod/maps/coop_hatoriaOutpost/warehouse.script"
#include "coop_mod/maps/coop_hatoriaOutpost/hallway.script"
#include "coop_mod/maps/coop_hatoriaOutpost/dynlight.script"
#include "coop_mod/maps/coop_hatoriaOutpost/inflight.script"
#include "coop_mod/maps/coop_hatoriaOutpost/shuttle.script"
#include "coop_mod/maps/coop_hatoriaOutpost/badezimmer.script"
#include "coop_mod/maps/coop_hatoriaOutpost/basement.script"
#include "coop_mod/maps/coop_hatoriaOutpost/dinner.script"
#include "coop_mod/maps/coop_hatoriaOutpost/singleplayer.script"
#include "coop_mod/maps/coop_hatoriaOutpost/mom_replicator.script"

void main()
{
//fade in slowley
	cam_fadeOut( 0.01 , 0, 0,0, 1 );	
//INVENTORY
cache ("models/weapons/worldmodel-batleth.tik");
cache ("models/weapons/worldmodel-phaser-STX.tik");
cache ("models/weapons/worldmodel-tricorder-STX.tik");
cache ("models/weapons/worldmodel-sniperrifle.tik");
cache ("models/weapons/worldmodel-compressionrifle.tik");
cache ("models/weapons/worldmodel-photon.tik");
cache ("models/weapons/worldmodel-rom-datapad.tik");
cache ("models/weapons/worldmodel-rom-disruptor.tik");

//ITEMS
cache ("models/item/health_large-hypospray.tik");

//MISSION OBJECTIVE
cache ("models/weapons/staticmodel-batleth.tik");

//SHUTTLE
cache ("models/vehicle/e-shuttle-ext.tik");
cache ("models/vehicle/e-shuttle-int.tik");
cache ("models/vehicle/e-shuttle-door.tik");
cache ("models/vehicle/e-shuttle-seat1.tik");
cache ("models/vehicle/e-shuttle-seat2.tik");
cache ("models/vehicle/e-shuttle-seat3.tik");
cache ("models/vehicle/e-shuttle-seat4.tik");
cache ("models/fx/fx-steam-directional-faint.tik");
cache ("models/fx/fx-flamethrow-caustic-directional.tik");

cache ("localization/sound/dialog/m11l2/munro_toent2.mp3");
cache ("localization/sound/dialog/m9l1/klingon_gagh2.mp3");
cache ("localization/sound/dialog/m9l2/klingcomm_workprop.mp3");

//CHARS
cache ("models/char/romulan-m11-rebel-sniper-f.tik");
cache ("models/char/alien-type1b-chewer.tik");
cache ("models/char/alien-type1c-basher.tik");
cache ("models/char/klingon-m9-merc-disruptor-m2-neutral.tik");
cache ("models/char/romulan-m11-rebel-pistol-m.tik");
cache ("models/char/klingon-m9-merc-batleth-m1.tik");

//ENVIRO
cache ("models/item/mp_diffusion_bomber.tik");
cache ("models/enviro/klingon_food2.tik");
cache ("models/enviro/klingon_health_console.tik");
cache ("models/enviro/klingon_chair.tik");
cache ("models/enviro/academy_desk_lamp1.tik");
cache ("models/enviro/academy_fish2.tik");
cache ("models/enviro/academy_holo-deck.tik");
cache ("models/enviro/enterprise_energy_console.tik");
cache ("models/enviro/enterprise_seats_officechair.tik");
cache ("models/enviro/enterprise_electronic_laptop.tik");
cache ("models/enviro/enterprise_seats_bench.tik");
cache ("models/enviro/drull2_plant_water1.tik");
cache ("models/enviro/drull2_plant_water2.tik");
cache ("models/enviro/drull2_tree2.tik");
cache ("models/plant/sfa_yucca_plant.tik");
cache ("models/plant/sfa_fotinia_bush.tik");
cache ("models/plant/sfa_juniper_tall.tik");
cache ("models/plant/sfa_diff_plant.tik");
cache ("models/hatoria/w1.tik");

//CACHE, IMPORTANT!
	$world.farplane ( 4200 );
	$world.entity_fade_dist( 6500 );
	$world.farplane_color( '0.1 0.1 0.2' );
	$world.weather( "rain", 100 );
//set water color to lil green instad of blue (red green blue -> 1-0)
	$world.watercolor('0 .1 .05');
//Co-Op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
//grab spawn locations
	
	
////////////////////////////////////////////////////////////////////////////////////////////
//encounter1='14144 -190 -774'
//blub blub='2396 -623 -3'
//holo=2462 -1129 -3
//tower=3205 -261 1109
//badezimmer=2999 -1695 -3
//waschbecken=2602 -1595 -80
//batleth=12933 -3291 -774
	//thread superseedspawnlocations('2462 -1129 -3');
////////////////////////////////////////////////////////////////////////////////////////////
//OVERWRITE CO-OP SETTINGS
	coop_bool_showMissionSucessHud	= 1;//show sucess hud instead of just loading
	coop_string_levelAuthor			= "Chrissstrahl";//level creator, team and involved, keep it short(10 chars)!!!
//WEAPONS
	coop_string_weapon1			= "models/weapons/worldmodel-tricorder-stx.tik";
//OBJECTIVES
	coop_string_objectiveItem1	= "Flee to the near by Federation Outpost";
	coop_string_objectiveItem2	= "Find a Weapon to defend your self";
	coop_string_objectiveItem3	= "Find a way to bypass the locked Door";
	coop_string_objectiveItem4	= "Update your Security-clearance and replicate Weapons";
	coop_string_objectiveItem5	= "Activate the Landingpad Lights";
	coop_string_objectiveItem6	= "Open the Power Pannel from inside the Tower";
	coop_string_objectiveItem7	= "Route Power for the Landingpad Lights";
	coop_string_objectiveItem8	= "Complete the Evacuation, Shuttle arrives soon";
	coop_string_objectiveTacticalInfo1 = "Klingons always have a Weapon hidden at some place";
	coop_string_objectiveTacticalInfo2 = "The Headmaster Office has all the access keys";
	coop_string_objectiveTacticalInfo3 = "Make use of the Replicators to restore your health";
	coop_string_story = "You are participating at a Officer exchange Program. Your secondary Objective is to check on the old Federation Outpost, since this Outpost is still used, from time to time by Diplomats";

	coop_string_objectiveItem1_deu	= "Fliehen Sie zum nahegelegenen Föderations Aussenposten";
	coop_string_objectiveItem2_deu	= "Finden Sie eine Waffe zur Selbstverteidigung";
	coop_string_objectiveItem3_deu	= "Finden Sie einen Weg um die verschloßene Türe zu umgehen";
	coop_string_objectiveItem4_deu	= "Aktuallisiern Sie Ihre Zugriffsrechte um Waffen zu replizieren";
	coop_string_objectiveItem5_deu	= "Aktivieren Sie die Lichter der Landeplattform";
	coop_string_objectiveItem6_deu	= "Öffen Sie das Energie Terminal vom Turm aus";
	coop_string_objectiveItem7_deu	= "Leiten Sie die Energie zur Landeplatform um";
	coop_string_objectiveItem8_deu	= "Vervollsändigen Sie die Evakuation, das Shuttle erscheint bald";
	coop_string_objectiveTacticalInfo1_deu = "Klingonen haben immer irgendwo eine Waffe versteckt";
	coop_string_objectiveTacticalInfo2_deu = "Das Headmaster Büro verfügt über alle Zugriffscodes";
	coop_string_objectiveTacticalInfo3_deu = "Replizieren Sie ein Hypospray um Ihre Gesundheit aufzufrischen";	
	coop_string_story_deu = "Sie nehmen an einem Offiziersaustausch Programm teil. Ihr Nebenziel ist es den alten föderations Aussensposten zu überprüfen, da er ab und zu von Diplomaten genutzt wird.";	
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
	thread setupLevel();
//WAIT FOR PLAYA (SP-MP)
	waitForPlayer();
//start sequence

	thread dinnerPlayerBeamedIn();	
}

entity returnMeARandomPlayer()
//returns a random player - used for the blitz to impact upon the player
{
	entity ePlayer, eRandomPlayer;
	float fExistingPlayers=-1;//want it to start at 0 later in script, see bellow
	float fRandom;
	float fPlayerIdInUse;
	float fTries;
	
	//grab each player and put it in a kind of array	
	for(fPlayerIdInUse=0;fPlayerIdInUse<coop_integer_maxPlayers;fPlayerIdInUse++){
		ePlayer = getentity("player"+ fPlayerIdInUse);
		if(globalCoop_check_existingLivingEntity(ePlayer)){
			if(!globalCoop_check_playerSpectator(ePlayer)){
				fExistingPlayers++;
				$world.setFloatVar("hatoria_activeplayer"+fExistingPlayers,fPlayerIdInUse);
			}
		}	
	}
	
	//grab a random player id from this kinda array, try 6 times
	if(fExistingPlayers > 0){
		for(fTries=6;fTries>0;fTries--){
			fRandom = randomint(fExistingPlayers);
			fPlayerIdInUse = $world.getFloatVar("hatoria_activeplayer"+fRandom);
			ePlayer = getentity("player"+ fPlayerIdInUse);
			if(globalCoop_check_existingLivingEntity(ePlayer)){
				if(!globalCoop_check_playerSpectator(ePlayer)){
					fTries = 0;
					eRandomPlayer = ePlayer;
				}
			}
		}
	}
	
	//return the world if no player could be found
	if(!doesEntityExist(eRandomPlayer)){
		eRandomPlayer = $world;
	}
	return eRandomPlayer;
}

/*
void coopMod430CompatibilitySpawnLocationHack()
//Hacks the BSP Spawn Locations to work with co-op mod 4.3
{
	if(getCvarInt("coop_integer_build") < 44){//if below co-op mod 4.4 -> 4.3
		coop_vector_spawnOrigin1 = $ipd1.getorigin();
		coop_vector_spawnOrigin2 = $ipd2.getorigin();
		coop_vector_spawnOrigin3 = $ipd3.getorigin();
		coop_vector_spawnOrigin4 = $ipd4.getorigin();
		coop_vector_spawnOrigin5 = $ipd5.getorigin();
		coop_vector_spawnOrigin6 = $ipd6.getorigin();
		coop_vector_spawnOrigin7 = $ipd7.getorigin();
		coop_vector_spawnOrigin8 = $ipd8.getorigin();
		coop_float_spawnAngle1 	= vectorGetY($ipd1.getAngles());
		coop_float_spawnAngle2 	= vectorGetY($ipd2.getAngles());
		coop_float_spawnAngle3 	= vectorGetY($ipd3.getAngles());
		coop_float_spawnAngle4 	= vectorGetY($ipd4.getAngles());
		coop_float_spawnAngle5 	= vectorGetY($ipd5.getAngles());
		coop_float_spawnAngle6 	= vectorGetY($ipd6.getAngles());
		coop_float_spawnAngle7 	= vectorGetY($ipd7.getAngles());
		coop_float_spawnAngle8 	= vectorGetY($ipd8.getAngles());
	}
}
*/

void superseedspawnlocations(vector vOrgigin)
{
//encounter1='14144 -190 -774'
//blub blub='2396 -623 -3'
	coop_vector_respawnOrigin1 = '0 0 0';
	coop_vector_respawnOrigin2 = '0 0 0';
	coop_vector_respawnOrigin3 = '0 0 0';
	coop_vector_respawnOrigin4 = '0 0 0';
	coop_vector_respawnOrigin5 = '0 0 0';
	coop_vector_respawnOrigin6 = '0 0 0';
	coop_vector_respawnOrigin7 = '0 0 0';
	coop_vector_respawnOrigin8 = '0 0 0';
	$ipd1.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd2.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd3.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd4.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd5.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd6.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd7.origin(vOrgigin);////////////////////////////////////////////////////////////
	$ipd8.origin(vOrgigin);////////////////////////////////////////////////////////////
	coop_vector_spawnOrigin1	= vOrgigin;
	coop_vector_spawnOrigin2	= vOrgigin;
	coop_vector_spawnOrigin3	= vOrgigin;
	coop_vector_spawnOrigin4	= vOrgigin;
	coop_vector_spawnOrigin5	= vOrgigin;
	coop_vector_spawnOrigin6	= vOrgigin;
	coop_vector_spawnOrigin7	= vOrgigin;
	coop_vector_spawnOrigin8	= vOrgigin;
}

void setupHolodeck()
{
//HOLODECK - Remove the DOOR From the Model (Hide the  skin of the material)
	$holodeck.surface("material16","+nodraw");//door is material->16
	$holodeckPortal.rotateZdown(180);
	$holodeckPortal.hide();
}


void setupLevel()
{
	//[b609] chrissstrahl - deactivate the puzzle until it is suppose to be used
	$landingPlatformPowerPuzzle.puzzleobject_deactivate();

//badezimmer
	$badezimmerWaschbeckenWater.bind($badezimmerWaschbeckenWaterOrigin);
	$badezimmerWasserStrahl.origin('2601.50 -1555.00 -25.00');//fix offset
	$badezimmerWasserStrahl.forceAlpha(1);//hide water
	$badezimmerWasserStrahl.fade(.2,0);//hide water
	$badezimmerWasserTropfen.origin('2601.50 -1555.00 -26.00');//fix offset
	$badezimmerWasserTropfen.forceAlpha(1);//hide water drops
	$badezimmerWasserTropfen.fade(.2,0);//hide water drops
	$world.light_intensity("fedOutpostBadezimmer",0);//turn off lights
	$badezimmerToliletCap.bind($badezimmerToliletCapOrigin);//make tolilet work
//[b607] shower and bathtub added
	$badezimmerWasserStrahlBrauseBad.forceAlpha(1);
	$badezimmerWasserStrahlBrauseBad.fade(.2,0);
	$badezimmerWasserTropfenBrauseBad.forceAlpha(1);
	$badezimmerWasserTropfenBrauseBad.fade(.2,0);
	
	$badezimmerWasserStrahl1.forceAlpha(1);
	$badezimmerWasserStrahl1.fade(.2,0);
	$badezimmerWasserStrahl2.forceAlpha(1);
	$badezimmerWasserStrahl2.fade(.2,0);
	
	$badezimmerWasserTropfen1.forceAlpha(1);
	$badezimmerWasserTropfen1.fade(.2,0);
	$badezimmerWasserTropfen2.forceAlpha(1);
	$badezimmerWasserTropfen2.fade(.2,0);
	
	$badezimmerWasserWanne_origin.time(1);
	$badezimmerWasserWanne_origin.movetopos('2276 -1702 -90');
	$badezimmerWasserWanne.bind($badezimmerWasserWanne_origin);
	$badezimmerWasserWanne_origin_check.bind($badezimmerWasserWanne_origin);
	
	$showerDoorLeft.bind($showerDoorLeft_origin);
	$showerDoorRight.bind($showerDoorRight_origin);
//make dinner ready
	$dinnerChair1Clip.solid();
	$klingon2.anim("bar_sitting_relaxed");
	$klingon1.immortal(0);
	$klingon2.immortal(0);
	$klingon2.pushable(0);
	thread legacy_forcefield_makeInteractive($dinnerTransporterClip);//autch on touch, zap on fire
//setup the thunder
	blitzSetup();
//warehouse
	$warehouseExitDoor.lock();
	$world.light_intensity("warehouseExitDoor",0);
	//$warehouseDispenser.archeType("");
//remove it, players shall make use of classes
	if(cvar_bool_multiplayer){//MULTIPLAYER
		$warehouseDispenser.remove();
	}
	$warehouseBigBox.solid();//make solid was notsolid for the path nodes to be connected propper
	$warehouseBigBox.bind($warehouseBigBoxOrigin);
	thread setOnUseThread($warehouseBigBox,"warehouseBigBoxPush");
	thread setupHolodeck();
//Encounter1 - Hide destroyed/damaged objects
	hallwayEncounter1CeilingExplosionSetup();
//activate ff
	thread hallwayFFOn();
//headmaster office - Turn off all lights
	headmasterLightsToogle();
	headmasterDeskLightToggle();
//HIDE LANDING PAD LIGHT BEAMS + Dynamic Light
	landingplatformLights(0);//0=off,1=on
//HOLODECK-PATH Lights TURN OFF NOW
	$world.light_intensity("fedOutpostHolodeckPath",0);
//pool lights
	$world.light_intensity("fedOutpostPool",0);
//replicator Room - turn lights off

	$world.light_intensity("fedOutpostReplicatorRoom",0);
	$world.light_intensity("fedOutpostWayToReplicatorRoom",0);
//SPAWN REPLICATORS
	spawn("trigger_relay","targetname","coop_momMenuAccessTrigger1","origin","3058.00 1321.00 -30.00","thread","mom_basic");
	spawn("trigger_relay","targetname","coop_momMenuAccessTrigger2","origin","3157.00 1321.00 -30.00","thread","mom_basic");

	replicator_Spawn('3058.00 1321.00 -89.00',"replicator",270);
	replicator_Spawn('3157.00 1321.00 -89.00',"replicator",270);
	wait(1);//give the server some rest
	replicator_AddItemAll("replicator","health","item/health_large-hypospray.tik",.45,47,'0 0 0','0 0 0',"","Hypospray");
	replicator_AddItemAll("replicator","BasicArmor","models/item/armor_large_shield.tik",.4,40,'0 0 0','0 0 0',"","Item-Armor");
	thread aquariumFishStart();
	
	$coop_momMenuAccessTrigger1.setStringVar("uservar1","coop_hatoriaOutpost_replicator");
	$coop_momMenuAccessTrigger1.setStringVar("uservar2","replicator1");
	$coop_momMenuAccessTrigger2.setStringVar("uservar1","coop_hatoriaOutpost_replicator");
	$coop_momMenuAccessTrigger2.setStringVar("uservar2","replicator2");
	
//overwrite dispenser settings
	dispenserSetup();
//setup shuttle
	shuttleSetup();
	
//ready klingons in the warehouse, behind the boxes
	$klingon3.anim("crouch_idle");
	$klingon4.anim("crouch_idle");
	
	
	spawn("script_model","model","use.tik","origin","12864 -3304 -808","targetname","batlethSymbol");
	spawn("script_model","model","use.tik","origin","13178 -2769 -797","targetname","boxSymbol");
	spawn("script_model","model","use.tik","origin","2460 -88 -23","targetname","laptopSymbol");
	spawn("script_model","model","use.tik","origin","1553.47 -1152.00 -18.30","targetname","copymachineSymbol");
	spawn("script_model","model","use.tik","origin","1217 -149 -21","targetname","romffSymbol");
	spawn("script_model","model","use.tik","origin","1019 -345 190","targetname","romtableUSymbol");
	spawn("script_model","model","modulate.tik","origin","1019 -345 190","targetname","romtableMSymbol");
	spawn("script_model","model","modulate.tik","origin","715 -529 209","targetname","romdoorSymbol");
	spawn("script_model","model","modulate.tik","origin","6242 -1224 20","targetname","padMSymbol","scale","2");
	spawn("script_model","model","use.tik","origin","2857 -1201 -15","targetname","holodeckSymbol");
	wait(.2);
	$boxSymbol.bind($warehouseBigBoxOrigin);
	
//setup the creates, and their arcetype
	//$dinnerCrate0.arcetype("");
	//$dinnerCrate1.arcetype("");
	
	float i;
	entity eCrate;
	
	//set size and arcetype for the scaled down crates
	for(i=0;i<8;i++){
		eCrate=getEntity("outpostExploCrate"+i);
		if(doesEntityExist(eCrate)){
			//eCrate.archetype("");
			eCrate.setSize('-21 -24 0','21 24 36');//42 48 36
		}
	}
	
	//set arcetype for the barels
	/*
	for(i=0;i<5;i++){
		eCrate=getEntity("outpostExploBarrel"+i);
		if(doesEntityExist(eCrate)){
			eCrate.archetype("");
		}
	}
	*/
}

void fedOutpostSpawner0()
{
//SPAN A ENEMY, will be pushed down and triggers the explosion
	$spawner0.modelName("char/alien-type1c-basher.tik");
	$spawner0.setspawngroupID(03);
	$spawner0.setspawngroupdeaththread("fedOutpostSpawner0");
	$spawner0.spawntargetname("basher");
	$spawner0.spawnnow();
}

void leavingTunnel()
{
//SPAWN INSIDE THE TOWER - MOVE THE info_player_deathmatch NATIVE BSP SPAWN-LOCATIONS
	$ipd1.angles('0 90 0');
	$ipd2.angles('0 90 0');
	$ipd3.angles('0 90 0');
	$ipd4.angles('0 90 0');
	$ipd5.angles('0 90 0');
	$ipd6.angles('0 90 0');
	$ipd7.angles('0 90 0');
	$ipd8.angles('0 90 0');
	$ipd1.origin('3134 -368 265');
	$ipd2.origin('3134 -368 389');
	$ipd3.origin('3134 -368 265');
	$ipd4.origin('3134 -368 389');
	$ipd5.origin('3134 -368 265');
	$ipd6.origin('3134 -368 389');
	$ipd7.origin('3134 -368 265');
	$ipd8.origin('3134 -368 389');
	coop_vector_respawnOrigin1 = '0 0 0';
	coop_vector_respawnOrigin2 = '0 0 0';
	coop_vector_respawnOrigin3 = '0 0 0';
	coop_vector_respawnOrigin4 = '0 0 0';
	coop_vector_respawnOrigin5 = '0 0 0';
	coop_vector_respawnOrigin6 = '0 0 0';
	coop_vector_respawnOrigin7 = '0 0 0';
	coop_vector_respawnOrigin8 = '0 0 0';
//spawn basher
	thread fedOutpostSpawner0();
//spawn snipers
	thread fallschirmspringersStartAttack();
//spawn chewer
	thread inflightStart();
//start Blitz
	thread blitzStart();
}

void setOnUseThread(entity e,string sThread)
{
	if(doesEntityExist(e)){
		e.noUse();
		e.onUse(sThread);
		pause();
	}
}

void setOnDamageThread(entity e,string sThread)
{
	if(doesEntityExist(e)){
		e.noDamage();
		e.onDamage(sThread);
		pause();
	}
}

void setOnTouchThread(entity e,string sThread)
{
	if(doesEntityExist(e)){
		e.noTouch();
		e.onTouch(sThread);
		pause();
	}
}
void setOnBlockThread(entity e,string sThread)
{
	if(doesEntityExist(e)){
		e.noBlock();
		e.onBlock(sThread);
		pause();
	}
}


void spawnFallschirmspringer()
{
	fFallschiermspringer++;
	vector vLand = '3156 1037 341';
	vector vStart = '7022 -1129 4371';
	string sModel;
	sModel	= "char/romulan-m11-rebel-sniper-f.tik";
	if(randomint(50) <= 25){
		vLand = '3154 61 341';
	}
	if(randomint(50) <= 25){
		vStart = '6025 1084 4738';
	}
	if(fFallschiermspringer <= 12){
		thread startFallschirmspringer(fFallschiermspringer,vStart,vLand,sModel);
	}
}


void dispenserSetup()
{
	dispenserOverwrite($towerDispenserPlasma);
	dispenserOverwrite($towerDispenserFed);
	dispenserOverwrite($landingPlatformDispenserPlasma);
	dispenserOverwrite($landingPlatformDispenserFed);
	dispenserOverwrite($outdoorDispenserPlasma);
	dispenserOverwrite($outdoorDispenserFed);
//overwrite ammo type
	$towerDispenserFed.dispenser_subtype("Fed");
	$outdoorDispenserFed.dispenser_subtype("Fed");
	$landingPlatformDispenserFed.dispenser_subtype("Fed");
}

void dispenserOverwrite(entity e)
{
	if(doesEntityExist(e)){
		//e.archeType("");
		e.dispenser_openDistance(0);
		e.dispenser_regenrate(200);
		e.dispenser_maxamount(10000);
		e.dispenser_rate(80);
		e.notsolid();
	}
}

void lockedDoor()
{
	entity e;
	e=getCurrentEntity();
	if(doesEntityExist(e)){
		e.playsound("sound/doors/door_locked.wav",0,1,128);
	}
}


void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
//mark this map as completed to the scripts (can not fail anymore)
	globalCoop_mission_accomplished();
	globalCoop_main_globalCommand("nodamage");
	
//credits, and history of map
	thread globalCoop_player_transmittToAll("exec cfg/maps/coop_hatoriaOutpost/cCredits.cfg\n");
	globalCoop_huds_AddAll("coop_cCredits");
	wait(15);
	
	//end server if in singleplayer
	if(getCvarInt("g_gametype") == 0){
		stuffcmd("disconnect\n");
		return;
	}
	
	thread globalCoop_mission_completed("coop_iceStation");
}







