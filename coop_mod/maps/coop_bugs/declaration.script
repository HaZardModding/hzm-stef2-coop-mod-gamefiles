//GLOBAL VARIABLES
float enterprise_sickbayResurecting;
float enterprise_sickbaySitting=1;
float enterprise_ArmoryOpen;
float enterprise_transporterActive;
float enterprise_transporterAiAnim;
float enterprise_transporterAiAnimDone;
float staudamm_playerFiguredTheWayOut;
float objective_liftRestorePowerDone;
float cinematic_bugPlantsSpawned;
float pyramid_codeEntredDialog;
float pyramid_codeEntredIndex;
float pyramid_codeEntredBadCode;
float lights_waitingForUpdate;
float pyramid_tilesPuzzleCrusherActive;
float float_objective_buildPeFieldComplete;
//SETUP
void setupMap();
void setupEnterprise();
void setupPyramid();
void setupContainer();
void setupWeb();
void setupBugplants();
void setupBombs();
void setupDispensers();
void setupElectric();
void setupBlowAbleObjects();
void setupPatternEnhancers();
void setupDatapads();
//OBJECTIVE
void objective_gearUpComplete();
void objective_findBombs();
void objective_findBombsComplete();
void objective_liftRestorePower();
void objective_liftRestoreComplete();
void objective_buildPeField();
void objective_buildPeFieldComplete();
void objective_liftDudeSurvive();
void objective_liftDudeSurviveComplete();
void objective_liftDudeSurviveFailed();
//SINGLEPLAYER
void singleplayer_quickSave();
void singleplayer_Save();
//ENTERPRISE
void enterprise_amory();
void enterprise_amoryToggle();
void enterprise_amoryActorAlternate();
void enterprise_amoryActorTalk();
void enterprise_sickbayMediKitUse();
void enterprise_sickbaySteam();
void enterprise_transporterDisable(entity ePlayer,entity eTrigger);
void enterprise_transporterEntred();
void enterprise_beamPlayer(entity ePlayer);
vector enterprise_beamPlayerReturnVector(entity ePlayer);
void enterprise_transporterActor();
void enterprise_transporterActorTalk();
void enterprise_transporterActorAnimRandom();
void enterprise_sickbayResurectPlayer(entity ePlayer,float fSickbed);
entity enterprise_sickbayReturnPlayer(float fSickbed);
void enterprise_sickbayResurectPlayerReturnToSeat();
void enterprise_sickbayResurectPlayerReturnToSeatSitdown();
void enterprise_sickbayActorTalk();
float enterprise_sickbedReturnFreeBed();
float enterprise_sickbedCheckPlayerOnBed(entity ePlayer,entity eModel,vector vOrigin);
void enterprise_sickbedAnimateFakePlayerSetModel(entity ePlayer,entity eModel);
void enterprise_sickbedAnimateFakePlayer(entity ePlayer, float fSickbed);
void enterprise_gearUp(entity ePlayer,float fSickbed);
//enhancer
void enhancer_Area();
void enhancer_AreaManagePlayer(entity ePlayer, entity eTrigger);
void enhancer_AreaPlayerUsed();
void enhancer_pickup();
void enhancer_attach(entity ePlayer);
void enhancer_position();
void enhancer_restore();
//BUGPLANTS
void bugplants_eat();
//STAUDAMM
void staudamm_hintBug();
void staudamm_playerFiguredTheWay();
//PYRAMID
void pyramid_arrivedAtPunisherTrap();
void pyramid_secretDoor1Open();
void pyramid_removeSymbol();
void pyramid_stairsBugs();
void pyramid_stairsBugsSpawn();
void pyramid_codeEntred();
void pyramid_tilesPuzzleCrusher();
void pyramid_brikUsed();
//LIGHTS
void lights_activate();
void lights_newPlayer();
void lights_killed();
//LIFT
void lift_moan();
void lift_come();
void lift_toogle();
void lift_doToggle();
void lift_dude_onUse();
void lift_dude_triggerFollow();
//CINEMATIC
void cinematic_bugplants();
void cinematic_bugplantsSkip();
void cinematic_lift();
//BOMB
void bomb_pickup();
void bomb_plant();
void bomb_hubBlowUp();
void bomb_hubDisable();
void bomb_found();


