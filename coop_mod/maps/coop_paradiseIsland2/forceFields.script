void forceFields_deactivate(entity e)
{
	if(doesEntityExist(e)){
		e.noTouch();
		e.noDamage();
		e.noBlock();
		e.noUse();
		e.playsound("sound/player/shielddown.wav",0,1,64);
		float f1;		
		for(f1=1;f1<8;f1++){
			e.hide();
			wait(.1);
			e.show();
			wait(.1);		
		}
		e.remove();
	}
}

void forceFields_activate(entity e)
{
	if(doesEntityExist(e)){
		thread setOnDamageThread(e,"forceFields_damaged");
		thread setOnTouchThread(e,"forceFields_touched");
		e.solid();
		e.loopSound("sound/ships/drull/drull_forcefield1.wav",1,128);
	}
}

void forceFields_touched()
{
	entity e;
	e = getCurrentEntity();
	if(doesEntityExist(e)){
		e.noTouch();
		
		entity ePlayer;
		ePlayer = e.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			//[b610] chrissstrahl - update, this makes the forcefield kill the player on low health and show a correct message
			float fDamage,fHealth;
			fDamage = 10;
			fHealth = ePlayer.getHealth();
			
			if(fHealth > 0){
				e.noDamage(); //[b610]
				if((fHealth - fDamage) <= 0){
					ePlayer.killed( e, fDamage, e, 12 ); //12=electric means of death, taken vom ef2 game source code
				}else{
					ePlayer.hurt(fDamage);
				}
				e.hide();
				e.playSound("sound/ships/drull/drull_forcetrapstop.wav",0,1,128);
				wait(.05);
				e.show();
				thread setOnDamageThread(e,"forceFields_damaged");
			}
		}
		
		wait(.2);
		thread setOnTouchThread(e,"forceFields_touched");
	}
}

void forceFields_damaged()
{
	entity e;
	e = getCurrentEntity();
	if(doesEntityExist(e)){
		e.noDamage();
		e.noTouch(); //[b610]
		e.hide();
		e.playSound("sound/ships/drull/drull_forcetrapstop.wav",0,1,128);
		wait(.05);
		e.show();
		thread setOnTouchThread(e,"forceFields_touched"); //[b610]
		thread setOnDamageThread(e,"forceFields_damaged");
	}
}

