//-----------------------------------------------------------------
//
//  EF2 Level Script File
//
//  Level:        m6l0-sfa	  
//  Script By:    Benson R
//  Geometry By:  Benson R, Kenny T
//  Created on:   2/6/2003
//
//  Last Edited By:  Benson R
//
//-----------------------------------------------------------------

//==========================================================================================
//==========================================================================================
//  DEFINE SCRIPT
//==========================================================================================
//==========================================================================================

void main();

//--- setup routines
void setupWorld();
void setupShips();
void setupAI();
void setupArmatures();

//--- cinematic sequence functions
void cinematicMain();
void cinematicMain_Skipthread();

//--- cinematic action functions
//stuff blowing up
void cinematicMain_BlowEngineeringMassive();
void cinematicMain_BlowEngineeringBalcony();
void cinematicMain_BlowEngineeringCubby();
void cinematicMain_BlowBridge();

//AI
void cinematicMain_WalkKorban();
void cinematicMain_WalkChang();
void cinematicMain_WalkJurot();
void cinematicMain_WalkMunro();
void cinematicMain_RunBarclay();

//Ship
void cinematicMain_EnterpriseDrift();

//Torpedo firing
void cinematicMain_FireTorpedo1();
void cinematicMain_FireTorpedo2();
void cinematicMain_FireTorpedo3();

//Torpedo travel
void cinematicMain_Torpedo2Path1();
void cinematicMain_Torpedo3Path1();
void cinematicMain_Torpedo1Path2();
void cinematicMain_Torpedo2Path2();
void cinematicMain_Torpedo3Path2();

//Torpedo impact
void cinematicMain_ImpactTorpedo1();
void cinematicMain_ImpactTorpedo2();
void cinematicMain_ImpactTorpedo3();
void cinematicMain_ImpactTorpedo4();
void cinematicMain_ImpactTorpedo5();

//-----------------------------------------------------------
//-----------------------------------------------------------
//--- PARAMETER CONSTANTS


//-----------------------------------------------------------
//-----------------------------------------------------------
//--- variables

entity cinematicArm_TransporterRoomShake;
entity cinematicArm_BridgeShake;
entity cinematicArm_BridgeDrift;
entity cinematicArm_Engineering;


//==========================================================================================
//==========================================================================================
//  INCLUDES
//==========================================================================================
//==========================================================================================

//hzm coop mod - chrissstrahl - include the required coop level-scripts
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void	coop_endLevel();
entity	entityPlayerGlobal;

#include "coop_mod/matrix/main.scr"
#include "maps/global_scripts/global_common.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

#include "maps/global_scripts/global_math.scr"
#include "maps/global_scripts/global_cinematicFX.scr"




//==========================================================================================
//==========================================================================================
//  MAIN FUNCTION
//==========================================================================================
//==========================================================================================

void main()
{
	//hzm coop mod chrissstrahl, make sure this is reset
	setfloatvar ( "game.statusM5L2CUnlocked", 0 );
	
	//--- fade the world out
	cam_fadeout( .1, 0, 0, 0, 1, 0 );
	letterbox( .1 );
	cinematic();

	//--- set the soundtrack
	soundtrack( "music/m6l0.mus" );

	//--- allow camera shakes
	$world.canShakeCamera( 1 );

	//--- run setup functions
	setupWorld();
	setupShips();
	setupAI();
	setupArmatures();
	
	//--- wait for player to spawn
	waitForPlayer();
	freezeplayer();
	wait( 1.5 );
	
	//--- start the cinematic
	thread cinematicMain();
}




//==========================================================================================
//==========================================================================================
//  SETUP FUNCTIONS
//==========================================================================================
//==========================================================================================

//---------------------
// setupWorld
// setup world objects
//---------------------
void setupWorld()
{
	//spawn cameras
	spawn( "Camera", "targetname", "cam1");
	spawn( "Camera", "targetname", "cam2");

	//--- load camera paths
	cam.load( "m6l0_Attack_Shot1" );
	cam.load( "m6l0_Attack_Shot2" );
	cam.load( "m6l0_Attack_Shot3" );
	cam.load( "m6l0_Attack_Shot4" );
	cam.load( "m6l0_Attack_Shot5" );
	cam.load( "m6l0_Attack_Shot6" );
	cam.load( "m6l0_Attack_Shot7" );
	cam.load( "m6l0_Attack_Shot8" );
	cam.load( "m6l0_Attack_Shot9" );
	cam.load( "m6l0_Attack_Shot10" );
	cam.load( "m6l0_Attack_Shot11" );
	cam.load( "m6l0_Attack_Shot12" );
	cam.load( "m6l0_Attack_Shot13" );
	cam.load( "m6l0_Attack_Shot14" );
	cam.load( "m6l0_Attack_Shot15" );
	cam.load( "m6l0_Attack_Shot16" );
	cam.load( "m6l0_Attack_Shot17" );
	cam.load( "m6l0_Attack_Shot18" );
	cam.load( "m6l0_Attack_Shot19" );
	cam.load( "m6l0_Attack_Shot20" );
	cam.load( "m6l0_Attack_Shot21" );
	cam.load( "m6l0_Attack_Shot22" );
	cam.load( "m6l0_Attack_Shot23" );
	cam.load( "m6l0_Attack_Shot24" );
	cam.load( "m6l0_Attack_Shot25" );
	cam.load( "m6l0_Attack_Shot26" );
	cam.load( "m6l0_Attack_Shot27" );
	cam.load( "m6l0_Attack_Shot28" );
	cam.load( "m6l0_Attack_Shot29" );
	cam.load( "m6l0_Attack_Shot30" );
	cam.load( "m6l0_Attack_Shot31" );
	cam.load( "m6l0_Attack_Shot32" );
	cam.load( "m6l0_Attack_Shot33" );
	cam.load( "m6l0_Attack_Shot34" );
	cam.load( "m6l0_Attack_Shot35" );
	
	//--- hide the idryll torpedos
	$torpedoIdryll1.hide();
	$torpedoIdryll2.hide();
	$torpedoIdryll3.hide();
	
	$torpedoIdryll2_TravelPath1.hide();
	$torpedoIdryll3_TravelPath1.hide();
	$torpedoIdryll1_TravelPath2.hide();
	$torpedoIdryll2_TravelPath2.hide();
	$torpedoIdryll3_TravelPath2.hide();
	
	$torpedoIdryllImpact1.hide();
	$torpedoIdryllImpact2.hide();
	$torpedoIdryllImpact3.hide();
	$torpedoIdryllImpact4.hide();
	$torpedoIdryllImpact5.hide();
	
	//--- hide the viewscreen portal
	//$viewscreenPortal.hide();
	$viewscreenImage_Starfield_WhiteNebula.hide();
	
	$portalViewscreen.target( "portalCam_Ships" );
	$portalViewscreen.locatecamera();
	
	//--- hide the hallway shot stuff
	$hallwayPostRedAlert.hide();
	
	//--- setup the torpedo spawners
	$spawnIdryllCapital_Launcher1Muzzle.modelname( "fx/fx-explosion-photonflash-idryll.tik" );
	$spawnIdryllCapital_Launcher2Muzzle.modelname( "fx/fx-explosion-photonflash-idryll.tik" );
	$spawnIdryllCapital_Launcher3Muzzle.modelname( "fx/fx-explosion-photonflash-idryll.tik" );
	
	//--- setup the impact spawners
	$spawnEnterpriseImpact1.modelname( "fx/fx-explosion-impact-enterprise.tik" );
	$spawnEnterpriseImpact1.scale( .5 );
	$spawnEnterpriseImpact2.modelname( "fx/fx-explosion-impact-enterprise.tik" );
	$spawnEnterpriseImpact2.scale( .5 );
	$spawnEnterpriseImpact3.modelname( "fx/fx-explosion-impact-enterprise.tik" );
	$spawnEnterpriseImpact3.scale( .5 );
	$spawnEnterpriseImpact4.modelname( "fx/fx-explosion-impact-enterprise.tik" );
	$spawnEnterpriseImpact4.scale( .5 );
	$spawnEnterpriseImpact5.modelname( "fx/fx-explosion-impact-enterprise.tik" );
	$spawnEnterpriseImpact5.scale( .5 );
	
	//--- setup the hallway shot explosions
	$spawnHallwayExplosion1.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnHallwayExplosion2.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnHallwayExplosion3.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnHallwayExplosion4.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnHallwayExplosion5.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	
	//--- setup the bridge shot explosions
	$spawnBridgeExplosion1.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnBridgeExplosion2.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion3.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion4.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion5.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion6.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion7.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnBridgeExplosion8.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnBridgeExplosion9.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	
	//--- engineering fx spawners
	$spawnEngineering_RightCubby1.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_RightCubby2.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_RightCubby3.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_RightCubby4.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_RightCubby5.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_RightCubby6.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_RightCubby7.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_LeftBalcony1.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_LeftBalcony2.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_LeftBalcony3.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_LeftBalcony4.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_LeftBalcony5.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_LeftBalcony6.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	
	$spawnEngineering_MassiveEnd1.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd2.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd3.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_MassiveEnd4.modelname( "fx/fx-explosion-sparkshower-intense.tik" );
	$spawnEngineering_MassiveEnd5.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_MassiveEnd6.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd7.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd8.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_MassiveEnd9.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_MassiveEnd10.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd11.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd12.modelname( "fx/fx-explosion-console-blue-directional.tik" );
	$spawnEngineering_MassiveEnd13.modelname( "fx/fx-explosion-sparkshower-intense.tik" );
	$spawnEngineering_MassiveEnd14.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd15.modelname( "fx/fx-explosion-sparkshower-intense.tik" );
	$spawnEngineering_MassiveEnd16.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd17.modelname( "fx/fx-explosion-photonball-idryl.tik" );
	$spawnEngineering_MassiveEnd18.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd19.modelname( "fx/fx-explosion-sparkshower-intense.tik" );
	$spawnEngineering_MassiveEnd20.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd21.modelname( "fx/fx-explosion-sparkshower-enterprise.tik" );
	$spawnEngineering_MassiveEnd22.modelname( "fx/fx-explosion-sparkshower-intense.tik" );
}


//---------------------
// setupShips
// setup the ships
//---------------------
void setupShips()
{
	//--- enterprise
	$fedShip_Enterprise_Saucer.bind( $fedShip_Enterprise_Origin );
	$fedShip_Enterprise_Body.bind( $fedShip_Enterprise_Origin );
   	$fedShip_Enterprise_Nacelle.bind( $fedShip_Enterprise_Origin );
   	$fedShip_Enterprise_Damage.bind( $fedShip_Enterprise_Origin );
	$spawnEnterpriseImpact1.bind( $fedShip_Enterprise_Origin );
	$spawnEnterpriseImpact2.bind( $fedShip_Enterprise_Origin );
	$spawnEnterpriseImpact3.bind( $fedShip_Enterprise_Origin );
	$spawnEnterpriseImpact4.bind( $fedShip_Enterprise_Origin );
	$spawnEnterpriseImpact5.bind( $fedShip_Enterprise_Origin );

	//--- turn off the damage to start with
	$fedShip_Enterprise_Damage.surface( "material1", "+nodraw" );
	$fedShip_Enterprise_Damage.surface( "material2", "+nodraw" );
	$fedShip_Enterprise_Damage.surface( "material3", "+nodraw" );
	$fedShip_Enterprise_Damage.surface( "material4", "+nodraw" );
	$fedShip_Enterprise_Damage.surface( "material5", "+nodraw" );

	//--- idryll ships
	$idryllShip_Fighter1.bind( $idryllShip_Fighter1_Origin );
	$idryllShip_Fighter2.bind( $idryllShip_Fighter2_Origin );
	$idryllShip_Capital.bind( $idryllShip_Capital_Origin );
	//$torpedoIdryll1.bind( $idryllShip_Capital_Origin );
	$spawnIdryllCapital_Launcher1Muzzle.bind( $idryllShip_Capital_Origin );
	//$torpedoIdryll2.bind( $idryllShip_Capital_Origin );
	$spawnIdryllCapital_Launcher2Muzzle.bind( $idryllShip_Capital_Origin );
	//$torpedoIdryll3.bind( $idryllShip_Capital_Origin );
	$spawnIdryllCapital_Launcher3Muzzle.bind( $idryllShip_Capital_Origin );
	wait( .1 );

	//--- rotate the idryll ships
	$idryllShip_Fighter1_Origin.angles( '0 180 0' );
	$idryllShip_Fighter2_Origin.angles( '0 180 0' );
	$idryllShip_Capital_Origin.angles( '0 180 0' );
}


//---------------------
// setupAI
// setup the AI
//---------------------
void setupAI()
{
	//--- hazardteam
	globalCommon_AiDummy( $munro, "idle" );
	globalCommon_AiDummy( $chang, "idle" );
	globalCommon_AiDummy( $jurot, "idle" );
	globalCommon_AiDummy( $korban, "idle" );
	
	$munro.useActorWeapon( "none" );
	$chang.useActorWeapon( "none" );
	$jurot.useActorWeapon( "none" );
	$korban.useActorWeapon( "none" );
	
	//--- bridge
	globalCommon_AiDummy( $picard, "ent-mainchair-idle" );
	$picard.notsolid();
	$picard.hide();
	
	globalCommon_AiDummy( $tuvok, "ent-curvedconsole-idle" );
	$tuvok.notsolid();
	$tuvok.hide();

	globalCommon_AiDummy( $johnson, "ent-frontchair-idle" );
	$johnson.notsolid();
	$johnson.hide();
	
	globalCommon_AiDummy( $ops, "ent-frontchair-idle" );
	$ops.notsolid();
	$ops.hide();

	globalCommon_AiDummy( $jacobs, "ent-vchair-idle" );
	$jacobs.notsolid();
	$jacobs.hide();

	globalCommon_AiDummy( $manaan, "ent-vchair-sm-idle" );
	$manaan.notsolid();
	$manaan.hide();

	globalCommon_AiDummy( $ops2, "ent-vchair-idle" );
	$ops2.notsolid();
	$ops2.hide();
	
	globalCommon_AiDummy( $krindo, "" );
	
	//--- transporter room		
	globalCommon_AiDummy( $dorchev, "idle" );
	$dorchev.notsolid();

	globalCommon_AiDummy( $transporterDudeThatDoesntNeedToBeHereButTheresAStupidBugThatHeCantBeSeenForThe1SecondTheCameraCouldShowHim, "ent-curvedconsole-idle" );	
	
	//--- engine room crew
	globalCommon_AiDummyHide( $barclay );
}


//---------------------
// setupArmatures
// setup the armatures
//---------------------
void setupArmatures()
{
	cinematicArm_TransporterRoomShake = createCinematic( "m6l0-transporter" );
	cinematicArm_BridgeShake = createCinematic( "m6l0-bridge-A" );
	cinematicArm_BridgeDrift = createCinematic( "m6l0-bridge-B" );
	cinematicArm_Engineering = createCinematic( "m6l0-engineering" );
}




//==========================================================================================
//==========================================================================================
//  CINEMATIC SEQUENCE FUNCTIONS
//==========================================================================================
//==========================================================================================

//---------------------
// cinematicMain
// the level cinematic
//---------------------
void cinematicMain()
{
	//hzm coop mod chrissstrahl - Wait until the Game Starts in Multiplayer
	globalCoop_main_waitForWarmupTime();
	
	//--- start cinematic commands
	letterbox( .1 );
	wait( .2 );
        allowMusicDucking( 0 );
	music ("aux1");

	//--------------------------------------------------------
	//shot1 - pull out on door of the transporter room
	
	//--- set the camera
	$cam1.fov( 60 );
	$cam1.follow( $m6l0_Attack_Shot1 );
	$cam1.cut();
	cuecamera( $cam1 );
	wait( .1 );
	
	//--- set the skipthread
	skipthread( "cinematicMain_Skipthread" );
	
	cam_fadein( .5, 0, 0, 0, 1, 0 );
	wait( .5 );
	
	//--- make the tech look at the group
	$dorchev.headWatchTarget( "munro", 7 );
	
	//--- walk korban and chang towards the door
	thread cinematicMain_WalkKorban();
	wait( .5 );
	
	$doorTransporterRoom.open( $world );
	thread cinematicMain_WalkChang();
	wait( 1.5 );
	
	//--------------------------------------------------------
	//shot2 - dolly left towards pad further back in the room
	
	//--- set the camera
	$cam2.fov( 75 );
	$cam2.follow( $m6l0_Attack_Shot2 );
	$cam2.cut();
	wait( .2 );
	
	cuecamera( $cam2 );
	wait( .5 );

	//--- walk jurot and munro in
	thread cinematicMain_WalkJurot();
	wait( .5 );
	
	thread cinematicMain_WalkMunro();
	wait( 3 );
	
	//--------------------------------------------------------
	//shot3 - dolly left towards pad behind console
	
	//--- set the camera
	$cam1.fov( 60 );
	$cam1.follow( $m6l0_Attack_Shot3 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	wait( 2 );
	
	//--- close the door
	$doorTransporterRoom.close();
	wait( 1.5 );

	//--------------------------------------------------------
	//shot4 - push in on munro on the pad
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot4 );
	$cam2.cut();
	wait( .2 );
	
	cuecamera( $cam2 );
	wait( .5 );
	
	//--- zoom the camera in
	thread globalCineFX_CameraFOVLerp( $cam2, 50, 40, 2.5, "rampupdown" );
	wait( 2.5 );
	
	//--- munro says his line
    $munro.playdialog( "localization/sound/dialog/m6l1/munro_ready2.mp3", 1, 20000, 0 ); //We are ready to transport
    waitForDialog( $munro );
    wait( .2 );

	//--------------------------------------------------------
	//shot5 - transporter tech answering and lowering shields
	
	//--- set the camera
	$cam1.fov( 60 );
	$cam1.follow( $m6l0_Attack_Shot5 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- dorchev says his line
    $dorchev.playdialog( "localization/sound/dialog/m6l1/tech_lowering.mp3", 1, 20000, 0 ); //Lowering shields for transport
    waitForDialog( $dorchev );
    wait( .2 );
    
    $dorchev.anim( "ent-transporter-front-gesture1" );
    wait( .5 );
    
    //$dorchev.headWatchTarget( "nodeTransporterTech_LookAt2", 7 );
    wait( 1 );
    
    //$dorchev.headWatchTarget( "nodeTransporterTech_LookAt1", 7 );
    wait( 2.75 );
    
   	//--------------------------------------------------------
	//shot6 - establishing shot of idryll ship closing in
	
	//--- set the camera
	$cam2.fov( 70 );
	$cam2.follow( $m6l0_Attack_Shot6 );
	$cam2.cut();
	wait( .2 );
	
	cuecamera( $cam2 );
	wait( 7.6 );
	
	//--------------------------------------------------------
	//shot7 - shot of first idryll torpedo firing
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot7 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	wait( .3 );
	
	//--- fire torpedo 2
	thread cinematicMain_FireTorpedo2();
	wait( .5 );
	
   	//--------------------------------------------------------
	//shot8 - shot of second idryll torpedo firing
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot8 );
	$cam2.cut();
	wait( .2 );
	
	cuecamera( $cam2 );
	wait( .25 );
	
	//--- fire torpedo 3
	thread cinematicMain_FireTorpedo3();
	wait( .75 );

	//--- hide the firing torpedo's
	$torpedoIdryll1.hide();
	$torpedoIdryll2.hide();
	$torpedoIdryll3.hide();
	
	//--- show the torp2 & torp3 path 1 torpedo's
	$torpedoIdryll2_TravelPath1.show();
	$torpedoIdryll3_TravelPath1.show();

	//--------------------------------------------------------
	//shot9 - spiraling overhead shot of enterprise as torpedo's approach
	
	//--- set the camera
	$cam1.fov( 70 );
	$cam1.follow( $m6l0_Attack_Shot9 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- put torpedo 2 on it's first path
	thread cinematicMain_Torpedo2Path1();
	wait( .25 );
	
	thread cinematicMain_Torpedo3Path1();
	wait( 2.25 );

   	//--------------------------------------------------------
	//shot10 - torpedo 2 first impact
	
	//--- set the camera
	$cam2.fov( 60 );
	$cam2.follow( $m6l0_Attack_Shot10 );
	$cam2.cut();
	wait( .15 );

	$torpedoIdryll2_TravelPath1.hide();
	$torpedoIdryll3_TravelPath1.hide();
	wait( .05 );
	
	cuecamera( $cam2 );

	//--- hide the hazard team for the next shot
	globalCommon_AiDummyHide( $munro );
	globalCommon_AiDummyHide( $chang );
	globalCommon_AiDummyHide( $jurot );
	globalCommon_AiDummyHide( $korban );
	
	//--- torpedo 2 impact
	thread cinematicMain_ImpactTorpedo1();
	wait( 1.5 );

	//--------------------------------------------------------
	//shot11 - internal explosion shaky cam in the transporter room
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot11 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- play the transporter armature
	cinematicArm_TransporterRoomShake.beginCinematic( "m6l0-transporter" );

	//--- viewshake
	$munro.earthquake( 1.5, 1.5 );
	wait( 1.5 );
	
   	//--------------------------------------------------------
	//shot12 - torpedo 3 first impact
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot12 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );

	//--- show the hazard team for the remaining later shots
	globalCommon_AiDummy( $munro, "idle" );
	globalCommon_AiDummy( $chang, "idle" );
	globalCommon_AiDummy( $jurot, "idle" );
	globalCommon_AiDummy( $korban, "idle" );

	//--- torpedo 3 impact
	thread cinematicMain_ImpactTorpedo2();
	wait( 2.5 );
	
	//--------------------------------------------------------
	//shot13 - bridge wide shaky cam
	
	//--- set the camera
	$cam1.fov( 70 );
	$cam1.follow( $m6l0_Attack_Shot13 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- play the bridge shaky cam armature
	cinematicArm_BridgeShake.beginCinematic( "m6l0-bridge-A" );
	
	//--- blow the bridge
	thread cinematicMain_BlowBridge();
	
	//--- viewshake
	$munro.earthquake( 1.25, 1.5 );
	wait( 1.5 );
	
   	//--------------------------------------------------------
	//shot14 - bridge left side closeup shakey cam
	
	//--- set the camera
	//$cam2.fov( 50 );
	//$cam2.follow( $m6l0_Attack_Shot14 );
	//$cam2.cut();
	//wait( .2 );

	//cuecamera( $cam2 );	
	//wait( 2 );

	//--------------------------------------------------------
	//shot15 - enterprise starts to drift exterior shot
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot15 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- drift the enterprise
	thread cinematicMain_EnterpriseDrift();
	wait( 2 );
	
   	//--------------------------------------------------------
	//shot16 - bridge as ship starts to drift
	
	//--- set the camera
	$cam2.fov( 70 );
	$cam2.follow( $m6l0_Attack_Shot16 );
	$cam2.cut();
	wait( .2 );

	//--- play the bridge drift armature
	cinematicArm_BridgeDrift.beginCinematic( "m6l0-bridge-B" );
	
	cuecamera( $cam2 );
	
	//--- viewshake
	$munro.earthquake( .25, 1.75 );
	wait( 1.75 );
	
	//--------------------------------------------------------
	//shot17 - back to exterior enterprise drifts
	
	//--- set the camera
	$cam1.cut();
	cuecamera( $cam1 );
	wait( 2 );
	
	//--------------------------------------------------------
	//shot18 - back to interior bridge as ship starts to drift
	
	//--- set the camera
	$cam2.cut();
	cuecamera( $cam2 );
	
	//--- viewshake
	$munro.earthquake( .25, 3.75 );
	wait( 1.5 );

	//--------------------------------------------------------
	//shot19 - dolly in on picards face for reaction
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot17 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	$picard.morph( "exp_Disdain" );
	
	thread globalCineFX_CameraFOVLerp( $cam1, 50, 35, 2, "rampupdown" );
	wait( 2.25 );
	
   	//--------------------------------------------------------
	//shot20 - slow spiral dolly in on idryll ship as it fires the next volley
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot18 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	wait( .25 );
	
	$picard.unmorph( "exp_Disdain" );
	
	thread cinematicMain_FireTorpedo2();
	wait( .6 );
	
	thread cinematicMain_FireTorpedo3();
	wait( .6 );
	
	thread cinematicMain_FireTorpedo1();
	wait( 1.25 );
	
	//--- hide the firing torpedoes
	$torpedoIdryll1.hide();
	$torpedoIdryll2.hide();
	$torpedoIdryll3.hide();
	wait( .05 );

	//--- show the bridge crew again
	$picard.show();
	$tuvok.show();
	$johnson.show();
	$ops.show();
	$jacobs.show();
	$manaan.show();
	$ops2.show();
	
	//--------------------------------------------------------
	//shot21 - star trek 6 tribute shot watching the torpedo wizz by the camera towards the enterprise
	
	//--- set the camera
	$cam1.fov( 100 );
	$cam1.follow( $m6l0_Attack_Shot19 );
	$cam1.cut();
	wait( .1 );
	
	//--- show the torp1 2 and 3 path 2 torpedo's
	$torpedoIdryll1_TravelPath2.show();
	$torpedoIdryll2_TravelPath2.show();
	$torpedoIdryll3_TravelPath2.show();
	wait( .1 );
	
	$cam1.watch( "$nodeIdryllTorpedo2_Path2_WatchTarget" );
	cuecamera( $cam1 );
	
	//--- start the torpedo's on their path
	thread cinematicMain_Torpedo2Path2();
	wait( 1 );
	
	thread cinematicMain_Torpedo3Path2();
	wait( 1 );
	
	thread cinematicMain_Torpedo1Path2();
	wait( 3.5 );
	
   	//--------------------------------------------------------
	//shot22 - dual impact
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot20 );
	$cam2.cut();
	wait( .2 );

	//--- hide the travel torpedos
	$torpedoIdryll1_TravelPath2.hide();
	$torpedoIdryll2_TravelPath2.hide();
	$torpedoIdryll3_TravelPath2.hide();

	cuecamera( $cam2 );
	
	//--- swap the hallway stuff for the next shot
	$hallwayPostRedAlert.show();
	$hallwayPreRedAlert.hide();
	
	//--- launch the impact torpedo's
	thread cinematicMain_ImpactTorpedo5();
	wait( .75 );
	
	thread cinematicMain_ImpactTorpedo4();
	wait( 1.5 );

	//--------------------------------------------------------
	//shot23 - shaky cam of explosion in hallway
	
	//--- set the camera
	$cam1.fov( 80 );
	$cam1.follow( $m6l0_Attack_Shot21 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );

	//--- viewshake
	$munro.earthquake( 2, 2 );

	triggerEntity( $spawnHallwayExplosion1 );
	wait( .25 );
	
	triggerEntity( $spawnHallwayExplosion2 );
	wait( .5 );
	
	triggerEntity( $spawnHallwayExplosion3 );
	wait( .5 );
	
	triggerEntity( $spawnHallwayExplosion4 );
	wait( .25 );
	
	triggerEntity( $spawnHallwayExplosion5 );
	wait( .5 );
	
   	//--------------------------------------------------------
	//shot24 - shaky hand cam following barclay to panel
	
	//--- set the camera
	$cam2.fov( 70 );
	$cam2.follow( $m6l0_Attack_Shot22 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	
	cinematicArm_Engineering.beginCinematic( "m6l0-engineering" );
	
	//--- slowly zoom in the camera
	thread globalCineFX_CameraFOVLerp( $cam2, 70, 55, 3, "rampupdown" );
	wait( 2 );
	
	//--- earthquake when barclay catches the guy
	$munro.earthquake( 1, 1.5 );
	
	//--- run barclay
	//thread cinematicMain_RunBarclay();

	//--- viewshake
	$munro.earthquake( .3, 7.5 );
	wait( 7 );
	
	//--------------------------------------------------------
	//shot25 - exterior shot of the final torpedo impact near engineering
	
	//--- set the camera
	$cam1.fov( 80 );
	$cam1.follow( $m6l0_Attack_Shot23 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	wait( .45 );
	
	//--- final impact torpedo
	thread cinematicMain_ImpactTorpedo3();
	wait( 1.7 );

	//--------------------------------------------------------
	//shot26 - right inner station blows up
	
	//--- set the camera
	$cam1.fov( 60 );
	$cam1.follow( $m6l0_Attack_Shot25 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );

	thread cinematicMain_BlowEngineeringCubby();
	
	//--- viewshake
	//$munro.earthquake( .5, 2 );

	wait( 2 );
	
   	//--------------------------------------------------------
	//shot27 - balcony shot w/ people flying off
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot24 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );

	thread cinematicMain_BlowEngineeringBalcony();
	
	//--- viewshake
	//$munro.earthquake( .5, 2 );

	wait( 2 );
	
   	//--------------------------------------------------------
	//shot28 - pan around barclay with engineering going up in explosions behind him
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot26 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );

	//--- blow up engineering
	thread cinematicMain_BlowEngineeringMassive();
	wait( 4.25 );

	//--------------------------------------------------------
	//shot29 - picard says report
	
	//--- set the camera
	$cam1.fov( 30 );
	$cam1.follow( $m6l0_Attack_Shot27 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	wait( .1 );
	
	$picard.anim( "ent-report" );
	$picard.playdialog( "localization/sound/dialog/m6l1/picard_report5.mp3", 1.3, 20000, 0 ); //REPORT
	waitForDialog( $picard );
	wait( .5 );
	
	$picard.anim( "ent-mainchair-idle" );
	wait( .5 );

   	//--------------------------------------------------------
	//shot30 - dolly around ops while he explains
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot28 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	
	$picard.headWatchTarget( "ops", 5 );
	$ops.anim( "ent-front-buttonpush" );
	wait( 1.5 );
	
	$ops.playdialog( "localization/sound/dialog/m6l1/broff_offline.mp3", 1, 20000, 0 ); //Engines offline! Weapons systems offline.
	waitForDialog( $ops );
	wait( .2 );
	
	$ops.anim( "ent-frontchair-idle" );
	
	$tuvok.playdialog( "localization/sound/dialog/m6l1/tuvok_lowered.mp3", 1, 20000, 0 ); //The three Idryll ships hit us when we lowered shields.
	wait( .3 );
	
	$picard.headWatchTarget( "tuvok", 5 );
	
	//--------------------------------------------------------
	//shot31 - dolly in on tuvok as he says his line
	
	//--- set the camera
	//$cam1.fov( 50 );
	//$cam1.follow( $m6l0_Attack_Shot29 );
	//$cam1.cut();
	//wait( .2 );
	
	//cuecamera( $cam1 );	
	
	//--- wait for tuvok to finish speaking
	waitForDialog( $tuvok );
	wait( .2 );
	
   	//--------------------------------------------------------
	//shot32 - dolly right to reveal picard
	
	//--- set the camera
	$cam2.fov( 40 );
	$cam2.follow( $m6l0_Attack_Shot30 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	wait( 1 );
	
	$ops.anim( "ent-frontchair-idle" );
	
	$tuvok.playdialog( "localization/sound/dialog/m6l1/tuvok_lowered2.mp3", 1, 20000, 0 ); //We are being hailed.
	waitForDialog( $tuvok );
	
	$picard.headWatchTarget( "none", 5 );
	wait( .75 );
	
	$picard.playdialog( "localization/sound/dialog/m6l1/picard_onscreen2.mp3", 1, 20000, 0 ); //On screen.
	waitForDialog( $picard );
	wait( .2 );
	
	//--------------------------------------------------------
	//shot33 - center on the viewscreen
	
	//--- set the camera
	$cam1.fov( 40 );
	$cam1.follow( $m6l0_Attack_Shot31 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	wait( .2 );
	
	$viewscreenPortal.hide();
	wait( .05 );
	
	$portalViewscreen.target( "portalCam_Krindo" );
	$portalViewscreen.locatecamera();
	wait( .05 );
	
	$viewscreenPortal.show();
	wait( 1 );
	
   	//--------------------------------------------------------
	//shot34 - dolly in on picard as he stands up
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot32 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	
	$picard.anim( "ent-seta_sit-up" );
	waitForAnimation( $picard, "ent-seta_sit-up" );

	$picard.anim( "idle" );

	$picard.playdialog( "localization/sound/dialog/m6l1/picard_krindo.mp3", 1, 20000, 0 ); //Krindo.
	waitForDialog( $picard );
	wait( .2 );

	//--------------------------------------------------------
	//shot35 - over the shoulder as krindo rants
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot33 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );
	
	//--- krindo has his rant
	$krindo.playdialog( "localization/sound/dialog/m6l1/krindo_takeaway.mp3", 1, 20000, 0 ); //When we last met, you took away my most precious possession. Now I take away yours. Prepare to be boarded.
	wait( 4 );
	
   	//--------------------------------------------------------
	//shot36 - center on viewscreen with krindo
	
	//--- set the camera
	$cam2.fov( 40 );
	$cam2.follow( $m6l0_Attack_Shot31 );
	$cam2.cut();
	wait( .2 );

	cuecamera( $cam2 );
	wait( 2.5 );

	//--- krindo shakes his fist of righteous anger
	$krindo.anim( "ent-krindo" );
	
	//--- wait for krindo to finish speaking
	waitForDialog( $krindo );
	wait( .2 );
	
	$viewscreenPortal.hide();
	wait( .05 );
	
	$portalViewscreen.target( "portalCam_Ships" );
	$portalViewscreen.locatecamera();
	wait( .05 );
	
	$viewscreenPortal.show();
	wait( .5 );

	//--------------------------------------------------------
	//shot37 - dolly in on picard as he comms munro
	
	//--- set the camera
	$cam1.fov( 50 );
	$cam1.follow( $m6l0_Attack_Shot34 );
	$cam1.cut();
	wait( .2 );
	
	cuecamera( $cam1 );

	$picard.playdialog( "localization/sound/dialog/m6l1/picard_munro2.mp3", 1, 20000, 0 ); //Lieutenant Munro?
	waitForDialog( $picard );
	wait( .2 );

	//--------------------------------------------------------
	//shot38 - dolly around munro in the transporter room
	
	//--- set the camera
	$cam2.fov( 50 );
	$cam2.follow( $m6l0_Attack_Shot35 );
	$cam2.cut();
	wait( .2 );
	
	cuecamera( $cam2 );
	$cam1.pause();
	
	$munro.playdialog( "localization/sound/dialog/m6l1/munro_yessir3.mp3", 1, 20000, 0 ); //Yes, sir?
	waitForDialog( $munro );
	wait( .2 );

	$picard.playdialog( "localization/sound/dialog/m6l1/picard_stopby.mp3", 1, 20000, 0 ); //Report to the bridge.
	waitForDialog( $picard );
	wait( 1 );

	//--------------------------------------------------------
	//shot39 - close on picard
	
	$cam1.cut();
	$cam1.continue();
	cuecamera( $cam1 );

	//--- zoom the camera in	
	thread globalCineFX_CameraFOVLerp( $cam1, 50, 40, 2, "rampupdown" );
	
	$picard.playdialog( "localization/sound/dialog/m6l1/picard_assrifle.mp3", 1, 20000, 0 ); //And bring me a Field Assault Rifle.
	waitForDialog( $picard );
	wait( 1 );
	
	//--- end the level and cinematic
	thread cinematicMain_Skipthread();
}

void testEarthquake()
{
	$munro.earthquake( 2, 2 );
}

void testEnterpriseDrift()
{
	$fedShip_Enterprise_Origin.time( .1 );
	$fedShip_Enterprise_Origin.rotateXdown( 35 );
	$fedShip_Enterprise_Origin.moveWest( 100 );
	waitFor( $fedShip_Enterprise_Origin );
}

//---------------------
// cinematicMain_Skipthread
// skipthread for the cinematic
//---------------------
void cinematicMain_Skipthread()
{
	skipthread( "null" );
	killthread( "cinematicMain" );
	
	cam_fadeout( .5, 0, 0, 0, 1 );
	wait( .6 );

	noIntermission();

	thread coop_endLevel();
	
	/*
	spawn ( "trigger_changelevel", "targetname", "trigger_endlevel", "map", "m6-deck8_redalert" );
	wait ( .1 );		
	triggerentity ( $trigger_endlevel );
	*/
}


//==========================================================================================
//==========================================================================================
//  CINEMATIC ACTION FUNCTIONS
//==========================================================================================
//==========================================================================================

//-------------------------------------------------------------------------
//	INTERNAL BLOW STUFF UP STUFF
//-------------------------------------------------------------------------

//---------------------
// shot of the bridge blowing out
void cinematicMain_BlowBridge()
{
	triggerEntity( $spawnBridgeExplosion1 );
	wait( .3 );
	
	triggerEntity( $spawnBridgeExplosion5 );
	wait( .2 );
	
	triggerEntity( $spawnBridgeExplosion2 );
	wait( .1 );
	
	triggerEntity( $spawnBridgeExplosion8 );
	wait( .2 );
	
	triggerEntity( $spawnBridgeExplosion3 );
	wait( 1 );
	
	triggerEntity( $spawnBridgeExplosion4 );
	wait( .2 );
	
	triggerEntity( $spawnBridgeExplosion7 );
	wait( .1 );
	
	triggerEntity( $spawnBridgeExplosion9 );
	wait( .3 );
	
	triggerEntity( $spawnBridgeExplosion6 );
}

//---------------------
// shot of the lower right cubby area blowing up
void cinematicMain_BlowEngineeringCubby()
{
	triggerEntity( $spawnEngineering_RightCubby1 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_RightCubby3 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_RightCubby6 );
	wait( .1 );
	
	triggerEntity( $spawnEngineering_RightCubby2 );
	wait( .4 );
	
	triggerEntity( $spawnEngineering_RightCubby4 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_RightCubby5 );
	wait( .4 );
	
	triggerEntity( $spawnEngineering_RightCubby7 );
}

//---------------------
// shot of the upper left balcony area blowing up
void cinematicMain_BlowEngineeringBalcony()
{
	triggerEntity( $spawnEngineering_LeftBalcony1 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_LeftBalcony3 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_LeftBalcony6 );
	wait( .1 );
	
	triggerEntity( $spawnEngineering_LeftBalcony2 );
	wait( .5 );
	
	triggerEntity( $spawnEngineering_LeftBalcony4 );
	wait( .3 );
	
	triggerEntity( $spawnEngineering_LeftBalcony5 );
}

//---------------------
// massive pan around shot of everything going up
void cinematicMain_BlowEngineeringMassive()
{
	triggerEntity( $spawnEngineering_MassiveEnd1 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_MassiveEnd2 );
	wait( .1 );
	
	triggerEntity( $spawnEngineering_MassiveEnd3 );
	wait( .2 );
	
	triggerEntity( $spawnEngineering_MassiveEnd4 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd5 );
	wait( .1 );

	triggerEntity( $spawnEngineering_MassiveEnd6 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd7 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd8 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd9 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd10 );
	triggerEntity( $spawnEngineering_RightCubby7 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd12 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd13 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd14 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd15 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd16 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd17 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd18 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd19 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd20 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd21 );
	wait( .2 );

	triggerEntity( $spawnEngineering_MassiveEnd22 );
	wait( .2 );
}

//-------------------------------------------------------------------------
//	AI STUFF
//-------------------------------------------------------------------------

//---------------------
// walk korban to the transporter pad
void cinematicMain_WalkKorban()
{
	$korban.walkTo( "$nodeTransporterRoom_Enter", "walk" );
	waitFor( $korban );
	
	$korban.walkTo( "$nodeTransporterRoom_ClearDoor", "walk" );
	waitFor( $korban );
	
	$korban.walkTo( "$nodeKorban_Transporter", "walk" );
}

//---------------------
// walk chang to the transporter pad
void cinematicMain_WalkChang()
{
	$chang.walkTo( "$nodeTransporterRoom_Enter", "walk" );
	waitFor( $chang );
	
	$chang.walkTo( "$nodeTransporterRoom_ClearDoor", "walk" );
	waitFor( $chang );
	
	$chang.walkTo( "$nodeChang_Transporter", "walk" );
}

//---------------------
// walk jurot to the transporter pad
void cinematicMain_WalkJurot()
{
	$jurot.walkTo( "$nodeTransporterRoom_Enter", "walk" );
	waitFor( $jurot );
	
	$jurot.walkTo( "$nodeTransporterRoom_ClearDoor", "walk" );
	waitFor( $jurot );
	
	$jurot.walkTo( "$nodeJurot_Transporter", "walk" );
}

//---------------------
// walk munro to the transporter pad
void cinematicMain_WalkMunro()
{
	$munro.walkTo( "$nodeTransporterRoom_Enter", "walk" );
	waitFor( $munro );
	
	$munro.walkTo( "$nodeTransporterRoom_ClearDoor", "walk" );
	waitFor( $munro );
	
	$munro.walkTo( "$nodeMunro_Transporter", "walk" );
}

//---------------------
// barclay run sequence in engineering
void cinematicMain_RunBarclay()
{
	$barclay.origin( $nodeBarclayStart.getOrigin() );
	wait( .1 );
	
	$barclay.walkTo( "$nodeBarclay_RunTo1", "run" );
	waitFor( $barclay );
	wait( 2 );
	
	$barclay.walkTo( "$nodeBarclay_RunTo2", "run" );
	waitFor( $barclay );
}


//-------------------------------------------------------------------------
//	SHIP MOVEMENT STUFF
//-------------------------------------------------------------------------

//---------------------
// the enterprise drifts to the side a bit
void cinematicMain_EnterpriseDrift()
{
	$fedShip_Enterprise_Origin.time( 10 );
	$fedShip_Enterprise_Origin.rotateXdown( 30 );
	$fedShip_Enterprise_Origin.moveWest( 100 );
	waitFor( $fedShip_Enterprise_Origin );
}


//-------------------------------------------------------------------------
//	TORPEDO FIRING STUFF
//-------------------------------------------------------------------------

//---------------------
// fire torpedo 1 from the idryll capital ship
void cinematicMain_FireTorpedo1()
{
	$torpedoIdryll1.hide();
	$torpedoIdryll1.scale( .1 );
	$torpedoIdryll1.origin( $spawnIdryllCapital_Launcher1Muzzle.getOrigin() );
	wait( .05 );

	triggerentity( $spawnIdryllCapital_Launcher1Muzzle );
	
	$torpedoIdryll1.show();
	$torpedoIdryll1.time( 3 );
	$torpedoIdryll1.moveWest( 2000 );
	waitFor( $torpedoIdryll1 );
}

//---------------------
// fire torpedo 2 from the idryll capital ship
void cinematicMain_FireTorpedo2()
{
	$torpedoIdryll2.hide();
	$torpedoIdryll2.scale( .1 );
	$torpedoIdryll2.origin( $spawnIdryllCapital_Launcher2Muzzle.getOrigin() );
	wait( .05 );

	triggerentity( $spawnIdryllCapital_Launcher2Muzzle );
	
	$torpedoIdryll2.show();
	$torpedoIdryll2.time( 3 );
	$torpedoIdryll2.moveWest( 2000 );
	waitFor( $torpedoIdryll2 );
}

//---------------------
// fire torpedo 3 from the idryll capital ship
void cinematicMain_FireTorpedo3()
{
	$torpedoIdryll3.hide();
	$torpedoIdryll3.scale( .1 );
	$torpedoIdryll3.origin( $spawnIdryllCapital_Launcher3Muzzle.getOrigin() );
	wait( .05 );
	
	triggerentity( $spawnIdryllCapital_Launcher3Muzzle );
	
	$torpedoIdryll3.show();
	$torpedoIdryll3.time( 3 );
	$torpedoIdryll3.moveWest( 2000 );
	waitFor( $torpedoIdryll3 );
}

//-------------------------------------------------------------------------
//	TORPEDO TRAVEL STUFF
//-------------------------------------------------------------------------

//---------------------
// torpedo2 - first path
void cinematicMain_Torpedo2Path1()
{
	$torpedoIdryll2_TravelPath1.time( 4.75 );
	$torpedoIdryll2_TravelPath1.moveWest( 4000 );
	waitFor( $torpedoIdryll2_TravelPath1 );
}

//---------------------
// torpedo3 - first path
void cinematicMain_Torpedo3Path1()
{
	$torpedoIdryll3_TravelPath1.time( 4.75 );
	$torpedoIdryll3_TravelPath1.moveWest( 4000 );
	waitFor( $torpedoIdryll3_TravelPath1 );
}

//---------------------
// torpedo1 - second path
void cinematicMain_Torpedo1Path2()
{
	$torpedoIdryll1_TravelPath2.time( 6 );
	$torpedoIdryll1_TravelPath2.moveWest( 4500 );
	$torpedoIdryll1_TravelPath2.moveSouth( 130 );
	$torpedoIdryll1_TravelPath2.moveDown( 850 );
	waitFor( $torpedoIdryll1_TravelPath2 );
}

//---------------------
// torpedo2 - second path
void cinematicMain_Torpedo2Path2()
{
	//$torpedoIdryll2.origin( $nodeIdryllTorpedo2_Path2.getOrigin() );
	//wait( .05 );

	//$torpedoIdryll2.show();

	$torpedoIdryll2_TravelPath2.time( 6 );
	$nodeIdryllTorpedo2_Path2_WatchTarget.time( 6 );
	$torpedoIdryll2_TravelPath2.moveWest( 4500 );
	$nodeIdryllTorpedo2_Path2_WatchTarget.moveWest( 4500 );
	$torpedoIdryll2_TravelPath2.moveSouth( 130 );
	$nodeIdryllTorpedo2_Path2_WatchTarget.moveSouth( 130 );
	$torpedoIdryll2_TravelPath2.moveDown( 850 );
	$nodeIdryllTorpedo2_Path2_WatchTarget.moveDown( 850 );
	waitFor( $torpedoIdryll2_TravelPath2 );
}

//---------------------
// torpedo3 - second path
void cinematicMain_Torpedo3Path2()
{
	$torpedoIdryll3_TravelPath2.time( 6 );
	$torpedoIdryll3_TravelPath2.moveWest( 4500 );
	$torpedoIdryll3_TravelPath2.moveSouth( 130 );
	$torpedoIdryll3_TravelPath2.moveDown( 850 );
	waitFor( $torpedoIdryll3_TravelPath2 );
}

//-------------------------------------------------------------------------
//	TORPEDO IMPACT STUFF
//-------------------------------------------------------------------------

//---------------------
// impact torpedo 1
void cinematicMain_ImpactTorpedo1()
{
	$torpedoIdryllImpact1.scale( .1 );
	$torpedoIdryllImpact1.show();
	$torpedoIdryllImpact1.time( .75 );
	$torpedoIdryllImpact1.moveWest( 650 );
	waitFor( $torpedoIdryllImpact1 );
	
	$torpedoIdryllImpact1.hide();
	
	//--- spawn the explosion on the hull
	triggerEntity( $spawnEnterpriseImpact1 );
	
	//--- show the damage
	$fedShip_Enterprise_Damage.surface( "material1", "-nodraw" );
	
	//--- viewshake
	$munro.earthquake( .75, 1 );

}

//---------------------
// impact torpedo 2
void cinematicMain_ImpactTorpedo2()
{
	$torpedoIdryllImpact2.scale( .1 );
	$torpedoIdryllImpact2.show();
	$torpedoIdryllImpact2.time( 1 );
	$torpedoIdryllImpact2.moveWest( 650 );
	waitFor( $torpedoIdryllImpact2 );
	
	$torpedoIdryllImpact2.hide();
	
	//--- spawn the explosion on the hull
	triggerEntity( $spawnEnterpriseImpact2 );

	//--- show the damage
	$fedShip_Enterprise_Damage.surface( "material2", "-nodraw" );
		
	//--- viewshake
	$munro.earthquake( .75, .75 );
}

//---------------------
// impact torpedo 3
void cinematicMain_ImpactTorpedo3()
{
	$torpedoIdryllImpact3.scale( .1 );
	$torpedoIdryllImpact3.origin( $nodeTorpedoIdryllImpact3.getOrigin() );
	wait( .1 );

	$torpedoIdryllImpact3.show();
	$torpedoIdryllImpact3.time( .8 );
	$torpedoIdryllImpact3.moveWest( 750 );
	waitFor( $torpedoIdryllImpact3 );
	
	$torpedoIdryllImpact3.hide();
	
	//--- spawn the explosion on the hull
	triggerEntity( $spawnEnterpriseImpact3 );

	//--- show the damage
	$fedShip_Enterprise_Damage.surface( "material5", "-nodraw" );
	
	//--- viewshake
	$munro.earthquake( 1, .75 );
}

//---------------------
// impact torpedo 4
void cinematicMain_ImpactTorpedo4()
{
	$torpedoIdryllImpact4.scale( .1 );
	$torpedoIdryllImpact4.origin( $nodeTorpedoIdryllImpact4.getOrigin() );
	wait( .1 );
	
	$torpedoIdryllImpact4.show();
	$torpedoIdryllImpact4.time( .8 );
	$torpedoIdryllImpact4.moveWest( 750 );
	waitFor( $torpedoIdryllImpact4 );
	
	$torpedoIdryllImpact4.hide();
	
	//--- spawn the explosion on the hull
	triggerEntity( $spawnEnterpriseImpact4 );

	//--- show the damage
	$fedShip_Enterprise_Damage.surface( "material4", "-nodraw" );
	
	//--- viewshake
	$munro.earthquake( .3, .25 );
}

//---------------------
// impact torpedo 5
void cinematicMain_ImpactTorpedo5()
{
	$torpedoIdryllImpact5.scale( .1 );
	$torpedoIdryllImpact5.origin( $nodeTorpedoIdryllImpact5.getOrigin() );
	wait( .1 );

	$torpedoIdryllImpact5.show();
	$torpedoIdryllImpact5.time( .8 );
	$torpedoIdryllImpact5.moveWest( 750 );
	waitFor( $torpedoIdryllImpact5 );
	
	$torpedoIdryllImpact5.hide();
	
	//--- spawn the explosion on the hull
	triggerEntity( $spawnEnterpriseImpact5 );

	//--- show the damage
	$fedShip_Enterprise_Damage.surface( "material3", "-nodraw" );
	
	//--- viewshake
	$munro.earthquake( .3, .25 );
}


//------------------------------------------------------------------------------
//HZM Coop Mod - levelend default coop function, loads next map on completion
//------------------------------------------------------------------------------
void coop_endLevel()
{
	thread globalCoop_mission_completed("m6-deck8_redalert");
}


