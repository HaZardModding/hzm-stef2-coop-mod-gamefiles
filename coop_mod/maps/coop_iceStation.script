void main();
void coop_endLevel();
void puzzleUsed();
void puzzleFailed();
void puzzleCancel();
void puzzleSolved();
float fTreesFound;
float fForceFieldIsActive;
float fForceFieldKeepUp;
string sssss;
string ssss;
string sss;
vector vPos0;
vector vPos1;
vector vPos2;
vector vPos3;
vector vPos4;
vector vPos5;
vector vPos6;
vector vPos7;
vector vPos8;
vector vPos9;
vector vPos10;
vector vPos11;
vector vPos12;
vector vPos13;
vector vPos14;
vector vPos15;
vector vPos16;

//Co-op
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/matrix/optional_modules/noscript.scr" //load no scripting module, makes this whole thing work
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void main()
{
//this is used to start other functions on level start
//and to avoid a chrash if the scripts bellow are removed, this is 
	globalCoop_level_callReliably("coop_iceStation_setup");
	
	ssss="fx/fx-snake-lavashooter.tik";
	sssss="fx/fx-shieldimpact-idryll-default.tik";
}
	
void coop_endLevel()
//------------------------------------------------------------------------------
//Level end - End the current level, SUCESSFULLY
//And load the map specified on the mission complete trigger with->uservar1
//------------------------------------------------------------------------------
{
	if(doesEntityExist($player)){
		$player.removehud("coop_christmasEvent");
	}
	
	entity ePlayer;
	float fPlayerId;
	for(fPlayerId=1;fPlayerId<coop_integer_maxPlayers;fPlayerId++){
		ePlayer = getentity("player"+fPlayerId);
		fPlayerId++;
		if(doesEntityExist(ePlayer)){
			ePlayer.removehud("coop_christmasEvent");
		}
	}
	
	//hzm coop mod chrissstrahl - added for coop diagnose mode
	if(getCvarInt("coop_dev") == 1){
		if(getCvarInt("coop_diag") == 1){
			coop_string_nextMapToCheck = "coop_rescueChell";
		}
	}
	//eof hzm

	thread globalCoop_mission_completed(coop_string_nextMapToCheck);
}

entity spawnspawn(vector v)
{
	return spawn("Explosion","model","fx/fx-explosion-footstomp-quad.tik","origin",""+v,"scale","0.5");
}

void puzzleUsed()
//can be used to do some stuff in script when puzzle is used by a player
{}

void puzzleFailed()
//can be used to do some stuff in script when player failed to solve the puzzle
{
}

void puzzleCancel()
//can be used to do some stuff in script when player aborted the puzzle
{
}

void puzzleSolved()
//can be used to do some stuff in script when puzzle is solved by player
{
//activate trigger that does the rest in the map, try to relay on noscript as much as possible
	if(doesEntityExist($romInstallHeavyDoorObjective))
	{
		triggerEntity($romInstallHeavyDoorObjective);
	}
}

void solidEnable(entity e,vector v)
{
	wait(8);
	if(doesEntityExist(e)){
		entity ee;
		ee=e.getTargetEntity();
		ee.movetopos(v);
		ee.time(4);
		
		wait(5);
		if(doesEntityExist(e)){
			e.triggerable();
			e.solid();
			if(doesEntityExist(ee)){
				ee.solid();
			}
		}
	}
}

void coop_iceStation_setup()
{
//hide forcefiled (purley visual effect) for ai to walk over
	$pitForceField.hide();
	$pitForceField.notsolid();
//hide snow effect of picard
	$makeItSnowEffect.hide();
//bind stuff
	$wormhole.notsolid();
	$wormhole.bind($wormhole_origin);
	$wormhole_origin.rotateZ(10);
	
	float i;
	sss="coop_iceStation100p";
	entity eRing,eOrigin,eModel;
	for(i=0;i<10;i++){
		eRing = getEntity("ringClip"+i);
		eOrigin = getEntity("ringtransporter_origin"+i);
		eRing.bind(eOrigin);
		
		eModel = getEntity("ringModel"+i);
		while(doesEntityExist(eModel)){
			eModel.bind(eOrigin);
			eModel = getNextEntity(eModel);
		}
	}
	
	
	waitForPlayer();
	globalCoop_main_waitForWarmupTime();
	wait(2);
	
	vPos16 = '-3370 7538 70';
	vPos1 = '-6079 7719 -69';
	vPos15 = '-4113 7441 -129';
	vPos2 = '-5091 8947 -129';
	vPos14 = '-4997 8269 360';
	vPos3 = '-4903 8269 688';
	vPos13 = '-3004 8713 -960';
	vPos4 = '-3849 9538 -448';
	vPos12 = '-3844 7757 -448';
	vPos5 = '-2146 9873 -62';
	vPos11 = '-1726 8645 448';
	vPos6 = '-2107 9187 -128';
	vPos10 = '-1697 9140 8';
	vPos7 = '-2671 9758 -319';
	vPos9 = '-1553 9697 192';
	vPos0 = '-1656 8715 137';
	vPos8 = '-4189 8854 -430';	
	
	float fPos;
	float fId;
	entity eObj;
	entity eAttach;
	entity effect;
	entity effect2;
	vector vTravel;
	float fOffset;
	float fOffset2;
	float fOffsetSet;
	vector v;
	v = '-4400 3859 100';
	fOffset = v_x;
	fOffset2 = v_y;
	fOffsetSet=30;
	
	fId = 38;
	for(fPos=0;fPos<17;fPos++){//t12054
		if(doesEntityExist(effect)){effect.remove();}
		if(doesEntityExist(effect2)){effect2.remove();}
		
		eObj = getEntity("t120"+fId);
		if(doesEntityExist(eObj)){
			eAttach = eObj.getTargetEntity();
			vTravel = getVectorScriptVariable("vPos"+fPos);
			vTravel_z +=14;
			if(doesEntityExist(eAttach)){
				eObj.bind(eAttach);
				eObj.notsolid();
				eObj.thread("damagedObj");
				eAttach.notsolid();
				eAttach.movetopos(v);
				if(fPos==4){fOffsetSet=-30;}
				if(fPos==8){fOffsetSet=30;}
				if(fPos==12){fOffsetSet=-30;}
				
				fOffset+=30;
				v_x=fOffset;
				fOffset2+=fOffsetSet;
				v_y=fOffset2;
				eAttach.time(0.01);
				effect = spawn("script_model","model",ssss,"origin",""+v,"scale","1");
				effect2 = spawn("script_model","model",sssss,"origin",""+v,"scale","1");
				wait(0.01);
				thread solidEnable(eObj,vTravel);
			}
			wait(0.2);
		}
		fId++;
	}
	if(doesEntityExist(effect)){effect.remove();}
	if(doesEntityExist(effect2)){effect2.remove();}
}

void damagedObj()
//handle objective damage event entities
{
	vector v;
	entity e;entity ee;entity eee;entity eeee;
	e=getCurrentEntity();
	ee=e.getTargetEntity();eee=e.getLastActivatingEntity();
	if(!doesEntityExist(eee)){return;}$trif.doactivate(eee);
	e.remove();ee.remove();
	v=e.getOrigin();v_z+=-12;eeee=spawnspawn(v);
	eee.addhud(sss);
	wait(3);eeee.remove();
	eee.removehud(sss);
}

void coop_activateForceField()
{
//this is for the ai forcefield
	entity eTrigger,eActor;
	eTrigger = getCurrentEntity();
	if(!doesEntityExist(eTrigger)){
		return;
	}
	fForceFieldKeepUp = 3;
	eActor = eTrigger.getLastActivatingEntity();
	
	
	if(fForceFieldIsActive){
		return;
	}
	
	fForceFieldIsActive = 1;
	$pitForceField.show();
	$pitForceField.solid();	
	
	while(fForceFieldKeepUp > 0){
		wait(0.1);
		fForceFieldKeepUp--;
	}
	
	$pitForceField.hide();
	$pitForceField.notsolid();
	fForceFieldIsActive = 0;
}

void coop_ringtransporter()
{
//this manages the ringtransporter
	entity eTrigger,ePlayer;
	eTrigger = getCurrentEntity();
	if(!doesEntityExist(eTrigger)){
		return;
	}
	ePlayer = eTrigger.getLastActivatingEntity();
	
	ePlayer.playsound("sound/coop_icestation/sg_ring.wav",3,1,256);
	wait(0.25);
	$ringtransporter_origin7.playsound("sound/coop_icestation/sg_ring.wav",3,1,256);
	
	float i;
	entity eRing,eOrigin;
	for(i=0;i<10;i++){
		eOrigin = getEntity("ringtransporter_origin"+i);
		eOrigin.moveup(254);
		eOrigin.time(1.5);
	}
	wait( 2.35 );
	
	vector v;
	v = $ringtransporter_origin2.getOrigin();
	spawn("sfx","model","models/fx/fx-warpflash-federation.tik","origin",vectorToString(v));
	wait(0.25);

	if(getCvarInt("g_gametype") == 0){
		$player.warp('-10934 9174 -626');
		$player.playerviewangles('0 0 0');
	}else{
		float fPlayerId;
		for(fPlayerId=0;fPlayerId<coop_integer_maxPlayers;fPlayerId++){
			ePlayer = getentity("player"+fPlayerId);
			if(globalCoop_check_isEntityTouchingOther($ringtransporter1Trigger,ePlayer,0)){
				ePlayer.notsolid();
				ePlayer.warp('-10934 9174 -626');
				ePlayer.playerviewangles('0 0 0');
				thread globalCoop_player_makeSolidASAP(ePlayer);
			}
		}
	}
	
	v = $ringtransporter_origin6.getOrigin();
	spawn("sfx","model","models/fx/fx-warpflash-federation.tik","origin",vectorToString(v));	
	wait(0.5);
	
	for(i=0;i<10;i++){
		eOrigin = getEntity("ringtransporter_origin"+i);
		eOrigin.movedown(254);
		eOrigin.time(1.5);
	}
}


void coop_spawnborg()
{
//this manages the respawning of the borg
	while(doesEntityExist($borg) && $borg.getHealth() > 0)
	{
		wait(0.5);
	}
	
	//do not allow classical music to be played
	$finemusic.nottriggerable();

	float fSpawned;
	float fSpawn = 0;
	while(fSpawned <= 5){
		if(!doesEntityExist($borg)){
			fSpawn = 1;
		}else if($borg.getHealth() < 1){
			fSpawn = 1;
		}
		
		if(fSpawn){
			fSpawn = 0;
			if(doesEntityExist($t12081)){
				triggerEntity($t12081);
				wait(0.05);
			}
			fSpawned++;		
		}
		if(doesEntityExist($borg)){
			$borg.aggressive(1);
		}
		wait(0.5);
	}
	
	//turn on teh music trigger again
	$finemusic.triggerable();
	
	if(doesEntityExist($t12081)){
		$t12081.remove();
	}
}
void coop_makeitsnow()
{
//picard make it snow dialog and effect
	$makeItSnowEffect.show();
	$makeItSnowEffect.simpleplaydialog("localization/sound/dialog/m11l3/picard_makeitso.mp3", 1, 512);
	wait(5);
	$makeItSnowEffect.hide();
}
void fnd()
{
	entity e;entity ee;
	e=getCurrentEntity();
	ee=e.getLastActivatingEntity();
	ee.addScore(100);
	string sName;
	sName = ee.getName();
	float fPlayerIdInUse;
	for(fPlayerIdInUse=0;fPlayerIdInUse<coop_integer_maxPlayers;fPlayerIdInUse++){
		ee = getentity("player"+fPlayerIdInUse);
		if(doesEntityExist(ee)){
			if(globalCoop_player_getLanguage(ee) == "Deu")
				ee.hudprint(sName+"^8 hat ein ^5Nadelbaum^8 gefunden! Belohnung:^5 100^8 Punkte\n");
			else
				ee.hudprint(sName+"^8 has found a ^5Conifer-Tree^8! Reward:^5 100^8 Points\n");
		}
	}	
}

void coop_eventChristmasf(float fPlayer)
{
//christmas trees message
	fTreesFound++;
	entity ePlayer;
	ePlayer = getEntity("player"+fPlayer);
	if(doesEntityExist(ePlayer)){
		ePlayer.hudprint("^8You found "+fTreesFound+" of 11 ^5H^2a^5Z^2ard^5M^2odding Christmas Trees!\n");
	}
}
void coop_eventChristmas0(){coop_eventChristmasf(0);}
void coop_eventChristmas1(){coop_eventChristmasf(1);}
void coop_eventChristmas2(){coop_eventChristmasf(2);}
void coop_eventChristmas3(){coop_eventChristmasf(3);}
void coop_eventChristmas4(){coop_eventChristmasf(4);}
void coop_eventChristmas5(){coop_eventChristmasf(5);}
void coop_eventChristmas6(){coop_eventChristmasf(6);}
void coop_eventChristmas7(){coop_eventChristmasf(7);}
void coop_eventChristmas()
{
//christmas tree handling
	entity eTrigger;
	eTrigger = getCurrentEntity();
	if(doesEntityExist(eTrigger)){
		entity ePlayer;
		ePlayer = eTrigger.getLastActivatingEntity();
		if(doesEntityExist(ePlayer)){
			ePlayer.addhud("coop_christmasEvent");
			wait(.25);
			if(doesEntityExist(ePlayer)){
				ePlayer.addhud("coop_screenshot");
			}
		}
	}
}

