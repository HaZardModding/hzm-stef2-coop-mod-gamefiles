//-----------------------------------------------------------------
//  EF2 Level Script File
//
//  Level:	  training
//  Script By:    Kenny "Gullie" Thompson
//  Geometry By:  Kenny "Gullie" Thompson
//  Created on:   05/07/2003
//
//	Last Edited:   Kenny "Gullie" Thompson
//-----------------------------------------------------------------

void initTuvok();
void fadeTuvokIn();
void fadeTuvokOut();

void killAllTalking();

void initTuvok()
{
	$tuvok.ai_off();
	$tuvok.forcealpha( 1 );
	$tuvok.alpha( 0 );
	$tuvok.pushable( 0 );
	$tuvok.immortal( 1 );
	//hzm coop mod chrissstrahl - so we can have tovok where ever we like, hovering with all his vulcan powers
	$tuvok.gravity( 0 );
	$tuvok.mass( 0 );
}

void fadeTuvokIn()
{
//hzm coop mod chrissstrahl - wait for tuvok to be spawned
	while(!doesEntityExist($tuvok))
	{
		wait( 0.1 );
	}
//print("tuvok show");
	$tuvok.solid();
	$tuvok.playsound( "sound/environment/computer/holo_changesml1.wav", 3 ,.7 ,10000 );
	$tuvok.displayeffect( "TransportIn", "FederationNoAnim" );
	wait( .5 );
	$tuvok.rendereffects( "+shadow" );
	wait( 1 );
	$tuvok.anim( "sfa_hands_back" );
	wait( .5 );
	//hzm coop mod chrissstrahl - get closest player to look at
	//we had problems with chrashes here, so leave this part as it is
	//somehow string operations do not allways handle as you would expect them to
	entity ePlayer; 
	ePlayer = globalCoop_return_playerClosestPreferActive($tuvok);
	string sTarget;
	if(doesEntityExist(ePlayer)){
		sTarget = ePlayer.getRawTargetname();
	}
	
	//hzm coop mod chrissstrahl - print some info into the game console
	//globalCoop_main_print( "targetname: " + sTarget );
	
	if(sTarget == ""){
		sTarget = "world";
	}
	
	$tuvok.headwatchtarget( sTarget , 10 );
	//hzm eof edit
	$tuvok.alpha( 1 );
}

void fadeTuvokOut()
{
	$tuvok.headwatchtarget( "none", 10 );
	$tuvok.playsound( "sound/environment/computer/holo_changesml1.wav", 3 ,.7 ,10000 );
	$tuvok.displayeffect( "TransportOut", "FederationNoAnim" );	
	wait( 1 );
	$tuvok.anim( "idle" );
	$tuvok.rendereffects( "-shadow" );
	wait( .5 );
	$tuvok.notsolid();
	$tuvok.alpha( 0 );
}

////////////////////////
// killAllTalking
// Should be used to stop all actors in the level from talking
////////////////////////
void killAllTalking()
{
	$tuvok.stopdialog();
	$tuvokDummy.stopdialog();
}