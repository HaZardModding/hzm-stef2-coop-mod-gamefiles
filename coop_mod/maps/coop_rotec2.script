//geometry started in 200? by Luke Sutton
//script by chrissstrahl 2015.11.10 ulm, germany

//tree leafs
//fx/fx-mapleleaf-yellow.tik
//fx/fx-mapleleaf-orange.tik
//fx-fallingleaves-yelloworange.tik //not working ?
//fx/fx-idryllswirl-red.tik //red circle swirl
//fx/fx-gooblob-orange.tik //scale up and it looks like raw gold
//fx/fx-drull-ship-clouds.tik //clouds effect
//fx-drull-ship-atmosphere.tik //cool effect
//fx-drull-ship-atmosphere2.tik //cool effect
//fx-blowingdust-rooftop-gray.tik //blowing dust effect
//fx-blowingdust-rooftop-brown.tik//blowing dust effect
//fx-blowingdust-large-gray.tik
//fx-blowingdust-large-brown.tik //excellent for rescue chell
//fx-lightcorona.tik //bled corona
//fx-impactglow-borgsphere.tik //corona
//fx-laserbeam-scan-red.tik //cool laser
//fx-laserbeam-scan-green.tik
//fx-laserbeam-electric.tik //cool electric beam

//fixed bug in geometry, useing caulk instead of visual texture, causing mirrow effect
//bug reported by ricardo(Admiral Abu)

void main();
void introCinematic();
void introCinematicEnd();
void attraxRiffleFound();
void towerCinematic();
void openBigDoor();
void hideBoxDestroyed();
void aiGroup1Fight();
void aiGroup2Fight();
void aiGroup3Fight();
void aiGroup4Fight();
void aiGroup5Fight();
void aiGroup2AttrexianDead();
void showDamagedWindow();
void puzzleCanceled();
void puzzleUsed();
void puzzleSolved();

float cinematicLeavesActive = 0;
float fAttrexiansOfGroup2Killed = 0;

//hzm coop mod - chrissstrahl - include the required coop level-scripts
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
void	coop_endLevel();
entity	entityPlayerGlobal;

#include "coop_mod/matrix/main.scr"
#include "coop_mod/matrix/global/global_common.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "maps/global_scripts/global_debugutils.scr"
#include "maps/global_scripts/global_tricorderBase.scr"
#include "maps/global_scripts/global_tricorderRoute.scr"


void main()
{
	$world.light_lightstyle( "lukeLights","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab", 0 );
	$world.light_lightstyle( "lukeLightsWriting","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab", 0 );
	$world.light_lightstyle( "secretLights","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab", 0 );
	cinematic();
	letterbox ( .1 );
//paint it black
	cam_fadeout( 0.05 , 0, 0, 0, 1, 0 );

//register weapon in the script inventory (players respawn with this)
	globalCoop_armory_weaponRegister("models/weapons/worldmodel-Tricorder-stx.tik");
	globalCoop_armory_weaponRegister("models/weapons/worldmodel-Phaser-stx.tik");
	globalCoop_armory_weaponRegister("models/weapons/worldmodel-BurstRifle.tik");
	globalCoop_armory_weaponRegister("models/weapons/worldmodel-CompressionRifle.tik");

	//structural view mode
	$world.addAvailableViewMode("structuralintegrity");
	
	soundtrack( "music/dm_kw.mus" );
  
	//hzm coop mod chrissstrahl - author
	coop_string_levelAuthor = "Luke^0_^8Sutton";
	
	//hzm coop mod chrissstrahl - declare objectives - english
	coop_string_objectiveItem1 = "Help the Attrexians and defeat the Romulan invaders.";
	coop_string_objectiveItem2 = "Find a Attrexian Archlauncher.";
	coop_string_objectiveItem3 = "Restore Power to door, and enter the city.";
	coop_string_objectiveItem4 = "Enter the building.";
	coop_string_objectiveTacticalInfo1 = "";//Use the distraction to your own advantage

	//hzm coop mod chrissstrahl - declare objectives - german
	coop_string_objectiveItem1_deu = "Helfen Sie den Attrexianern und besiegen Sie die romulanischen Eindringlinge.";
	coop_string_objectiveItem2_deu = "Finden Sie einen Attrexianischen Bogenwerfer.";
	coop_string_objectiveItem3_deu = "Stellen Sie die Energie der T$$u$$re wieder her, betreten Sie die Stadt.";
	coop_string_objectiveItem4_deu = "Betreten Sie das Geb$$a$$ude.";
	coop_string_objectiveTacticalInfo1_deu = "";//N$$u$$tzen Sie die Verwirrung zu Ihrem Vorteil

	coop_string_story = "Date: Jan 2388. USS Odyssey-A has been ordered to fight off an orbiting warbird, and liberate the planet. You and your teammates must battle through the streets of Attrexia and protect the population from Romulan invasion.";
	coop_string_story_deu = "Datum: Jan 2388. Die USS Odyssey-A wurde entsannt um einen Warbird zu vertreiben und den Planeten zu befreien. Sie und Ihr Team m$$u$$ssen sich durch die Stra$$S$$en von Attrexia k$$a$$mpfen und die Bev$$o$$lkerung vor den romulanischen Invsoren sch$$u$$tzen.";
	
	//Remove archetype
	/* //disabled 2018.03.22
	$t43.archetype("");
	$t6.archetype("");
	$t41.archetype("");
	$t42.archetype("");
	$t44.archetype("");
	$t44.archetype("");
	$t71.archetype("");
	$conduit0.archetype("");
	$conduit1.archetype("");
	$hazardTeam1.archetype("");
	$attraxGroup4a.archetype("");
	$attraxGroup4b.archetype("");
	$attraxGroup1a.archetype("");
	$attraxGroup1b.archetype("");
	$explo0.archetype("");
	$explo1.archetype("");
	$explo2.archetype("");
	
	$healthConsole0.archetype("");
	$healthConsole1.archetype("");
	$healthConsole2.archetype("");
	$ammoConsole0.archetype("");
	*/
	
	
	/* //disabled 2018.03.22
	float i = 0;
	entity e;
	e = getEntity("explosiveCrateModel" + i);
	do
	{
		e.archetype("");
		i++;
		e = getEntity("explosiveCrateModel" + i);
	}
	while(doesEntityExist(e));
	*/
	
	//make sure the romulan ai does not try walking trough a closed door
	disconnectPathnodes("bigDoorPath0","bigDoorPath1");
	
	//ai_connectNodes( String node1, String node2 )
	//ai_disconnectNodes( String node1, String node2 )
	
	thread introCinematic();
}

void nonCinematicBlowLeaves()
{
	cinematicLeavesActive=0;
	float leavesIndex = 6;
	float i;
	entity e;
	float fUp;
	float fForward;
	float fRoateX;
	float fRoateY;
	float fRoateZ;
	vector vVelocity;
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			fUp = randomint(150);
			fUp += 180;
			
			fForward = randomInt(400);
			fForward += 450;
		
			vVelocity_x = fForward;
			vVelocity_z = fUp;
			
			e.setVelocity(vVelocity);
			e.rotateX(fRoateX);
			e.rotatey(fRoateY);
			e.rotateZ(fRoateZ);
		}
	}
	wait(0.4);
	
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			fUp = randomint(20);
			fUp += 20;
			
			fForward = randomInt(12);
			fForward += 3;
			
			fRoateX = randomint(50);
			fRoateX += 155;
			
			fRoateY = randomInt(50);
			fRoateY += 155;
			
			fRoateZ = randomInt(400);
			fRoateZ += 100;
		
			vVelocity_x = fForward;
			vVelocity_z = fUp;
			
			e.setVelocity(vVelocity);
			e.rotateX(fRoateX);
			e.rotatey(fRoateY);
			e.rotateZ(fRoateZ);
		}
	}
	
	wait(20);
	float fScale = 1;
	while(fScale > 0.02)
	{
		fScale -= 0.02;
		for(i=leavesIndex;i>=0;i--){
			e = getEntity("shuttleBlowLeave"+i);
			if(doesEntityExist(e)){
				e.scale(fScale);
			}
		}
		wait(0.25);
	}
	
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			e.remove();
		}
	}
}

void cinematicBlowLeaves()
{
	cinematicLeavesActive=1;
	float leavesIndex = 6;
	float i;
	entity e;
	float fUp;
	float fForward;
	float fRoateX;
	float fRoateY;
	float fRoateZ;
	vector vVelocity;
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			fUp = randomint(8);
			fUp += 4;
			
			fForward = randomInt(40);
			fForward += 40;
			
			fRoateX = randomint(33);
			fRoateX += 33;
			
			fRoateY = randomInt(33);
			fRoateY += 33;
			
			fRoateZ = randomInt(300);
			fRoateZ += 200;
		
			vVelocity_x = fForward;
			vVelocity_z = fUp;
			
			e.setVelocity(vVelocity);
			e.rotateX(fRoateX);
			e.rotatey(fRoateY);
			e.rotateZ(fRoateZ);
		}
	}
	wait(3);
	
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			fUp = randomint(20);
			fUp += 20;
			
			fForward = randomInt(10);
			fForward += 10;
			
			fRoateX = randomint(50);
			fRoateX += 155;
			
			fRoateY = randomInt(50);
			fRoateY += 155;
			
			fRoateZ = randomInt(400);
			fRoateZ += 100;
		
			vVelocity_x = fForward;
			vVelocity_z = fUp;
			
			e.setVelocity(vVelocity);
			e.rotateX(fRoateX);
			e.rotatey(fRoateY);
			e.rotateZ(fRoateZ);
		}
	}
	
	wait(20);
	float fScale = 1;
	while(fScale > 0.02)
	{
		fScale -= 0.02;
		for(i=leavesIndex;i>=0;i--){
			e = getEntity("shuttleBlowLeave"+i);
			if(doesEntityExist(e)){
				e.scale(fScale);
			}
		}
		wait(0.25);
	}
	
	for(i=leavesIndex;i>=0;i--){
		e = getEntity("shuttleBlowLeave"+i);
		if(doesEntityExist(e)){
			e.remove();
		}
	}
}


void introCinematic()
{
	waitforplayer();
	
	//hzm coop mod chrissstrahl - Wait until the Game Starts in Multiplayer
	globalCoop_main_waitForWarmupTime();
	
	freezeplayer();
	
	$shuttleType8_model.origin($shuttleType8_origin.getOrigin());
	$shuttleType8_model.bind($shuttleType8_origin);
	$shuttleType8_originCamera2Watch.bind($shuttleType8_origin);
	$shuttleType8_origin.followpath( $shuttleIntroFlyPath );//"normalangles"
	
	spawn("camera","targetname","cam1");
	spawn("camera","targetname","cam2");
	wait(0.05);
	$cam1.follow($shuttleType8_origin, $shuttleType8_model);//second is optional
	$cam1.follow_distance( 190 );
	$cam1.follow_yaw( 190 );

	$cam1.cut();
	cuecamera($cam1);
	
	wait(0.1);
	
//remove black
	cam_fadeIn( 2, 0, 0, 0, 0, 0 );
	
	skipthread("introCinematicEnd");
	
	float fYaw = 160;
	float fDistance;
	
	for(fDistance=190;fDistance < 550;(fDistance += 4)){
		wait(0.05);
		$cam1.follow_distance( fDistance );
	}
	
	wait(0.5);
	
	//$cam2.movetopos('292 -1984 32');
	$cam2.follow($introCinmaticCamera2Path,$shuttleType8_originCamera2Watch);//$spStart
	$cam2.cut();
	cuecamera($cam2);
	
	wait(0.1);
	
//remove black
	cam_fadeIn( 1 , 0, 0, 0, 0, 0 );
	vector v;
	v = $t80.getOrigin();
	v_z = -20;
	v_x -= 120;
	v_y -= 50;
	//engine1
	spawn("script_model","model","fx/fx-blowingdust-large-brown.tik","targetname","shuttleBlowDust","origin",""+v,"scale","0.3");
	//engine2
	v_y += 100;
	spawn("script_model","model","fx/fx-blowingdust-large-brown.tik","targetname","shuttleBlowDust","origin",""+v,"scale","0.3");
	
	wait(2);
	//cinematic and after cinematic leaves effect
	thread cinematicBlowLeaves();
	wait(5);
	
	thread introCinematicEnd();
}

void introCinematicEnd()
{
	killthread("introCinematic");
	skipthread("");
	
	if(doesEntityExist($shuttleBlowDust)){
		$shuttleBlowDust.remove();
	}
	
//paint it black
	cam_fadeout( 1 , 0, 0, 0, 1, 0 );
	wait(1.5);
	
//if leaves not blown yet, blow them hard
	if(!cinematicLeavesActive)
	{
		thread nonCinematicBlowLeaves();
	}
	
	$shuttleType8_origin.endpath();
	$shuttleType8_origin.moveto($t80);
	$shuttleType8_origin.time(0.05);
	
	
//show actor again
	$hazardTeam1.show();	
	wait(0.5);
	
	//show mission marker on radar
	$attrexianRiffle0.missionObjective(1);
	
	noncinematic();
	clearletterbox( .1 );
	releaseplayer();	
	cueplayer();
	wait(0.1);
	
//remove black
	cam_fadeIn( 1, 0, 0, 0, 0, 0 );
	
//activate team member
	$hazardTeam1.ai_on();
	
	wait(2);
	
//update objectives - found temple, now enter it
	globalCoop_objectives_update("incomplete" , 1 , 1 );//help Attrexians
	globalCoop_objectives_update("incomplete" , 2 , 1 );//find attrax riffle
	
	//show mission marker on radar
	$triggerEndLevel.missionobjective(1);
}

void openBigDoor()
{
	//hide actors behind box
	$romGroup3e.anim("crouch_idle");
	$romGroup3d.anim("crouch_idle");

	//connect pathnodes again
	connectPathnodes("bigDoorPath0","bigDoorPath1");
	
	//activate ai
	thread aiGroup3Fight();
	
	//remove use symbol
	$bigDoorSymbol.remove();
}

void hideBoxDestroyed()
{
	//actors hidden behind box, activate prematurley if box is destroyed
	//box can be destroyed after the actors are deadand long gone, so check if they are still there
	if(doesEntityExist($romGroup3e)){
		$romGroup3e.ai_on();
	}
	if(doesEntityExist($romGroup3d)){
		$romGroup3d.ai_on();
	}
}

void attraxRiffleFound()
{
//make attrexian show gratitude
	//$AttrexianTrapped.anim("");
	//$AttrexianTrapped.playdialog("",1,1,2048);//thank you
	//$AttrexianTrapped.playdialog("",1,1,2048);//grab a weapon
	
//register weapon in the script inventory (players respawn with this)
	globalCoop_armory_weaponRegister("models/weapons/worldmodel-attrex-rifle.tik");
//make all players use that weapon imidiatley
	globalCoop_armory_useTiki("models/weapons/worldmodel-attrex-rifle.tik");
	
//update objectives - found riffle
	globalCoop_objectives_update("complete" , 2 , 1 );//find attrax riffle	
	
	$attrexianRiffle0.missionObjective(0);
}

void towerCinematic()
{
	//now we can remove this effect, players might not even notice
	$volumetricGas.remove();

	$romulanShuttleSky.bind($romulanShuttleSky_origin);
	$fedShuttleSky0.bind($fedShuttleSky0_origin);
	$fedShuttleSky1.bind($fedShuttleSky1_origin);
	
	$fedShuttleSky0.show();
	$fedShuttleSky1.show();
	$romulanShuttleSky.show();

	$romulanShuttleSky.setvelocity('-82 0 0');//'-2932.00 -540.00 -972.00'
	$fedShuttleSky0_origin.setvelocity('-80 0 3');
	$fedShuttleSky1_origin.setvelocity('-80 0 -4');
}

void aiGroup1Fight()
{	
	//activate fighting party
	$attraxGroup1a.ai_on();
	$attraxGroup1b.ai_on();
	$romGroup1b.ai_on();
	
	wait(0.1);
	$romGroup1a.ai_on();
	wait(0.1);
	$romGroup1c.ai_on();
	
//update objectives - reroute power
	globalCoop_objectives_update("incomplete" , 3 , 1 );//reroute power
	$puzzleSymbol.missionObjective(1);
}


void aiGroup2Fight()
{
	//make ai shoot at the window
	$romGroup2b.ai_on();
	$romGroup2b.attack($windowDamageTrigger);

	//activate ai
	$romGroup2a.ai_on();
	$romGroup2a.attack($attraxGroup2a);

	//test
	$romGroup2a.notarget();
	$romGroup2b.notarget();
	
	$attraxGroup2a.ai_on();
	$attraxGroup2b.ai_on();
}

void aiGroup3Fight()
{
	wait(2.5);
	//activate group 3
	$romGroup3a.ai_on();
	wait(2);
	$romGroup3b.ai_on();
	wait(2);
	$romGroup3c.ai_on();
	$romGroup3e.ai_on();
	$romGroup3d.ai_on();
	wait(2);
	$romGroup3f.ai_on();
}

void aiGroup4Fight()
{
	//activate group 4
	$romGroup4a.ai_on();
	$romGroup4b.ai_on();
	$attraxGroup4a.ai_on();
	$attraxGroup4b.ai_on();
	
	//update objectives - enter building
	globalCoop_objectives_update("incomplete" , 4 , 1 );//enter building
}

void aiGroup5Fight()
{
	//activate group 5
	$romGroup5a.ai_on();
	$romGroup5b.ai_on();
}

void aiGroup2AttrexianDead()
{
	fAttrexiansOfGroup2Killed++;
	if(fAttrexiansOfGroup2Killed < 2){
		return;
	}

	//all attrexians in that area are killed, make roms now try to destroy the glas
	$romGroup2a.ai_off();
	$romGroup2b.ai_off();
	wait(0.1);
	
	//make trigger valid target again
	$windowDamageTrigger.health(1000000);
	$windowDamageTrigger.thread("");
	
	//enable ai again so they have a fresh start
	$romGroup2a.ai_on();
	$romGroup2b.ai_on();
	
	//tell them what to attack
	$romGroup2a.attack($windowDamageTrigger);
	$romGroup2a.aggressive(1);
	$romGroup2b.attack($windowDamageTrigger);
	$romGroup2b.aggressive(1);
	
	wait(15);
	
	$romGroup2a.ai_off();
	$romGroup2b.ai_off();
	$romGroup2a.anim("idle");
	$romGroup2b.anim("idle");
	wait(0.1);
	$romGroup2a.displayEffect("TransportOut","Romulan");
	$romGroup2b.displayEffect("TransportOut","Romulan");
	
	wait(2.7);
	$romGroup2a.remove();
	$romGroup2b.remove();
}

void showDamagedWindow()
{
	//show damage to window from shot
	$windowNormal.hide();
	$windowDamage.show();
	
	//make ai now attack Attrexian
	$romGroup2b.attack($attraxGroup2b);
}


void puzzleCanceled()
{
	$puzzle.puzzleobject_reset();
}

void puzzleUsed()
{
	entity puzzle;
	puzzle = getcurrententity();

	globalTricorderRoute_Reset();
	globalTricorderRoute_SetSource1Row( 10 );
	globalTricorderRoute_SetSource2Row( 8 );
	globalTricorderRoute_SetDestination1( 3, 10 );
    globalTricorderRoute_SetDestination2( 2, 8 );
    
	//--- begin row definitions
 	globalTricorderRoute_BeginDef();
 	globalTricorderRoute_SetNextRow( 32, 32, 32, 32, 32, 32, 32, 32, 32 );
 	globalTricorderRoute_SetNextRow( 32, 32, 32, 19, 16, 20, 22, 16, 16 );
 	globalTricorderRoute_SetNextRow( 19, 16, 20, 17, 32, 17, 17, 11,  8 );
 	globalTricorderRoute_SetNextRow( 17, 32, 25, 25, 32, 18, 21, 32, 17 );
 	globalTricorderRoute_SetNextRow( 23, 19, 24, 17, 32, 11,  3, 16,  8 );
 	globalTricorderRoute_SetNextRow( 25, 17, 25, 21, 25,  7,  9, 32, 32 );
 	globalTricorderRoute_SetNextRow( 17, 18, 21,  6,  4, 32, 32, 32, 32 );
 	globalTricorderRoute_SetNextRow( 21, 32, 32,  0, 32, 32, 32, 32, 32 );
 	globalTricorderRoute_SetNextRow( 32,  2, 16,  2, 32, 32, 32, 32, 32 );
 	globalTricorderRoute_SetNextRow( 16,  7,  6, 32, 32, 32, 32, 32, 32 );
 	globalTricorderRoute_SetNextRow( 32, 32, 11, 32, 32, 32, 32, 32, 32 );

 	//--- run the puzzle
 	globalTricorderRoute_Run( puzzle, 0 );
}

void puzzleSolved()
{
	//remove mission marker on radar
	$puzzleSymbol.missionObjective(0);

//change displayed pannels
	$bigDoorPannel0.show();
	$bigDoorPannel1.hide();
	$puzzlePannel0.hide();
	$puzzlePannel1.show();
	
//remove modulate symbol
	$puzzleSymbol.remove();
	
//show use symbol
	$bigDoorSymbol.show();
	
//allow now to enter the colony
	$bigDoorTrigger.triggerable();
	
//update objectives - reroute power
	globalCoop_objectives_update("complete" , 3 , 1 );//reroute power
}

void killBoxOnDestruction()
{
	//make sure we have no floating boxes, if box bellow it killed destroy the box that would otherwise float
	entity eTrigger;
	string sKillMe;
	entity eBoxToKill;
	eTrigger = getcurrententity();
	sKillMe = eTrigger.getStringVar("uservar1");
	eBoxToKill = getEntity(sKillMe);
	
	if(doesEntityExist(eBoxToKill)){
		eBoxToKill.health(-1);
		triggerEntity(eBoxToKill);
	}
}

void secretLuke()
{
	$lukeLightsBeam.show();
	$world.light_lightstyle( "lukeLights","aabbcccdddeeeffffggghhhiiijjjkkklll", 0 );
	wait(2);
	$world.light_lightstyle( "lukeLights","lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllk", 0 );	
	while(1)
	{
		$world.light_lightstyle( "lukeLightsWriting","zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzy", 0 );
		$lukeWriting.show();
		wait(1);
		$world.light_lightstyle( "lukeLightsWriting","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab", 0 );
		$lukeWriting.hide();
		wait(1);
	}
}
void secretLadder()
{
	thread secretLuke();
	wait(2);
	$secretLightsBeam.show();
	$world.light_lightstyle( "secretLights","zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzy", 0 );
	$t84.open($world);
	wait(1);
//make trigger move down
	$secretLadder.movedown(120);
	$secretLadder.time(1);
	waitfor($secretLadder);
	$secretLadderTrigger.triggerable();
	
	
}

void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
//mark this map as completed to the scripts (can not fail anymore)
	//globalCoop_mission_accomplished();
//credits, and history of map
	//globalCoop_main_globalCommand("nodamage");
	//globalCoop_huds_AddAll("coop_rotec_credits");
	//wait(10);
//load next map
	thread globalCoop_mission_completed("coop_rotec3");
}



