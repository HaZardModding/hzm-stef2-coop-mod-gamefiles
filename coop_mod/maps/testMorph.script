//-----------------------------------------------------------------
//
//  EF2 Level Script File
//
//  Level:        testMorph
//  Script By:    Benson R., Adam B.
//  Geometry By:  Adam B.
//  Created on:   12/5/2002
//
//  Last Edited By:  Adam B.
//
//-----------------------------------------------------------------

//==========================================================================================
//==========================================================================================
//  DEFINE SCRIPT
//==========================================================================================
//==========================================================================================

void main();

//--- setup routines
void setupWorld();
void setupActors();
void end_level();

//hzm coop mod chrissstrahl - level end routine, we need this
void coop_endLevel();
//hzm coop mod eof edit

//--- common functions
void commonPlaydialog1();
void commonPlaydialog2();
void commonPlaydialog3();
void commonPlaydialog4();
void commonPlaydialog5();
void commonPlaydialog6();
void commonPlaydialog7();
void commonPlaydialog8();
void commonPlaydialog9();
void commonPlaydialog10();
void commonPlaydialog11();
void commonPlaydialog12();
void commonPlaydialog13();
void commonPlaydialog14();
void commonPlaydialog15();
void commonPlaydialog16();
void commonPlaydialog17();
void commonPlaydialog18();
void commonPlaydialog19();
void commonPlaydialog20();
void commonPlaydialog21();


//==========================================================================================
//==========================================================================================
//  INCLUDES
//==========================================================================================
//==========================================================================================

//hzm coop mod chrissstrahl - include the required coop level-scripts
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/matrix/main.scr"
#include "maps/global_scripts/global_common.scr"
#include "maps/global_scripts/global_playerLoadout.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "maps/global_scripts/global_archetype.scr"

//==========================================================================================
//==========================================================================================
//  MAIN FUNCTION
//==========================================================================================
//==========================================================================================

//---------------------
void main()
//---------------------
{
	//hzm coop mod chrissstrahl -  spawnangles for this level
	coop_float_spawnAngle1 	= 90;//player0
	coop_float_spawnAngle2 	= 90;//player1
	coop_float_spawnAngle3 	= 90;//player2
	coop_float_spawnAngle4 	= 90;//player3
	coop_float_spawnAngle5 	= 90;//player4
	coop_float_spawnAngle6 	= 90;//player5
	coop_float_spawnAngle7 	= 90;//player6
	coop_float_spawnAngle8 	= 90;//player7
	
	//hzm coop mod chrissstrahl -  Spawn Players on those locations, at map start
	coop_vector_spawnOrigin1 	= '147 -430 0';
	coop_vector_spawnOrigin2 	= '238 -430 0';
	coop_vector_spawnOrigin3 	= '238 -530 0';
	coop_vector_spawnOrigin4 	= '147 -530 0';
	coop_vector_spawnOrigin5 	= '147 -630 0';
	coop_vector_spawnOrigin6 	= '238 -630 0';
	coop_vector_spawnOrigin7 	= '238 -744 0';
	coop_vector_spawnOrigin8 	= '147 -744 0';
	
	//hzm coop mod chrissstrahl - set background story - it is a local string, so no need for seperate _deu
	coop_string_story = "$$SecretLoadingText$$";
	
	//hzm coop mod chrissstrahl - needs to be done very early or players spawn with no weapon in their hands
	thread globalLoadout_AssignWeapons( "zoo1" );
	
	//--- run setup functions
	setupWorld();
	setupActors();
	
	//--- wait for player to spawn
	waitForPlayer();
}


//==========================================================================================
//==========================================================================================
//  SETUP FUNCTIONS
//==========================================================================================
//==========================================================================================


//---------------------
// setupWorld
// setup world objects
//---------------------
void setupWorld()
{
	//--- setup distance fog
	$world.farplane( 5000 );
	$world.farplane_color( '.3 .2 0' );
	
	globalArchetype_Setup ( $panel_arch, "KlingonDoorPanel" );
}

//---------------------
// end_level
// redundent comment about this self explanatory function
//---------------------
void end_level()
{
	coop_endLevel();
	//stuffcmd( "disconnect\n" );
}

//---------------------
// setupActors
// setup the actors
//---------------------
void setupActors()
{
	$munro.useactorweapon( "none" );
	$telsia.useactorweapon( "none" );
	$jurot.useactorweapon( "none" );
	$chell.useactorweapon( "none" );
	$korban.useactorweapon( "none" );
	$gonzales.useactorweapon( "none" );
	$tuvok.useactorweapon( "none" );
	$picard.useactorweapon( "none" );
	$sydney.useactorweapon( "none" );
	$katarina.useactorweapon( "none" );
	$franklin.useactorweapon( "none" );
	$stemmons.useactorweapon( "none" );
	$drullFather.useactorweapon( "none" );
	$krindo.useactorweapon( "none" );
	$kleeya.useactorweapon( "none" );
	$romulanSTXCommander.useactorweapon( "none" );
	$romulanRebelCommander.useactorweapon( "none" );
	$romulanInformant.useactorweapon( "none" );
	$oolpax.useactorweapon( "none" );
	$chang.useactorweapon( "none" );
	$klingonMerc.useactorweapon( "none" );

	$munro.setmovetype( "none" );
	$telsia.setmovetype( "none" );
	$jurot.setmovetype( "none" );
	$chell.setmovetype( "none" );
	$korban.setmovetype( "none" );
	$gonzales.setmovetype( "none" );
	$tuvok.setmovetype( "none" );
	$picard.setmovetype( "none" );
	$sydney.setmovetype( "none" );
	$katarina.setmovetype( "none" );
	$franklin.setmovetype( "none" );
	$stemmons.setmovetype( "none" );
	$drullFather.setmovetype( "none" );
	$krindo.setmovetype( "none" );
	$kleeya.setmovetype( "none" );
	$romulanSTXCommander.setmovetype( "none" );
	$romulanRebelCommander.setmovetype( "none" );
	$romulanInformant.setmovetype( "none" );
	$oolpax.setmovetype( "none" );
	$chang.setmovetype( "none" );
	$klingonMerc.setmovetype( "none" );
	
	globalCommon_AiDummy( $munro, "" );
	globalCommon_AiDummy( $telsia, "" );
	globalCommon_AiDummy( $jurot, "" );
	globalCommon_AiDummy( $chell, "" );
	globalCommon_AiDummy( $korban, "" );
	globalCommon_AiDummy( $gonzales, "" );
	globalCommon_AiDummy( $tuvok, "" );
	globalCommon_AiDummy( $picard, "" );
	globalCommon_AiDummy( $sydney, "" );
	globalCommon_AiDummy( $katarina, "" );
	globalCommon_AiDummy( $franklin, "" );
	globalCommon_AiDummy( $stemmons, "" );
	globalCommon_AiDummy( $drullFather, "" );
	globalCommon_AiDummy( $krindo, "" );
	globalCommon_AiDummy( $kleeya, "" );
	globalCommon_AiDummy( $romulanSTXCommander, "" );
	globalCommon_AiDummy( $romulanRebelCommander, "" );
	globalCommon_AiDummy( $romulanInformant, "" );
	globalCommon_AiDummy( $oolpax, "" );
	globalCommon_AiDummy( $chang, "" );
	globalCommon_AiDummy( $klingonMerc, "" );
	
	thread globalCommon_OnUse( $munro, "commonPlaydialog1" );
	thread globalCommon_OnUse( $telsia, "commonPlaydialog2" );
	thread globalCommon_OnUse( $jurot, "commonPlaydialog3" );
	thread globalCommon_OnUse( $chell, "commonPlaydialog4" );
	thread globalCommon_OnUse( $korban, "commonPlaydialog5" );
	thread globalCommon_OnUse( $gonzales, "commonPlaydialog6" );
	thread globalCommon_OnUse( $tuvok, "commonPlaydialog7" );
	thread globalCommon_OnUse( $picard, "commonPlaydialog8" );
	thread globalCommon_OnUse( $sydney, "commonPlaydialog9" );
	thread globalCommon_OnUse( $katarina, "commonPlaydialog10" );
	thread globalCommon_OnUse( $franklin, "commonPlaydialog11" );
	thread globalCommon_OnUse( $stemmons, "commonPlaydialog12" );
	thread globalCommon_OnUse( $drullFather, "commonPlaydialog13" );
	thread globalCommon_OnUse( $krindo, "commonPlaydialog14" );
	thread globalCommon_OnUse( $kleeya, "commonPlaydialog15" );
	thread globalCommon_OnUse( $romulanSTXCommander, "commonPlaydialog16" );
	thread globalCommon_OnUse( $romulanRebelCommander, "commonPlaydialog17" );
	thread globalCommon_OnUse( $romulanInformant, "commonPlaydialog18" );
	thread globalCommon_OnUse( $oolpax, "commonPlaydialog19" );
	thread globalCommon_OnUse( $chang, "commonPlaydialog20" );
	thread globalCommon_OnUse( $klingonMerc, "commonPlaydialog21" );
}



//==========================================================================================
//==========================================================================================
//  COMMON FUNCTIONS
//==========================================================================================
//==========================================================================================

//---------------------
// commonPlaydialog
// say the dialog line
//---------------------
//munro
void commonPlaydialog1()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_munro1.mp3", 1, 20000 , 0);
}
//telsia
void commonPlaydialog2()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_telsia2.mp3", 1, 20000 , 0);
}
//jurot
void commonPlaydialog3()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_jurot1.mp3", 1, 20000 , 0);
}
//chell
void commonPlaydialog4()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_chell1.mp3", 1, 20000 , 0);
}
//korban
void commonPlaydialog5()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m7l1/korban_mighty.mp3", 1, 20000 , 0);
}
//gonzalez
void commonPlaydialog6()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m4l2/gonz_dallas.mp3", 1, 20000 , 0);
}	
//tuvok
void commonPlaydialog7()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/ent_m8/tuvok_longway.mp3", 1, 20000 , 0);
}
//picard
void commonPlaydialog8()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_picard1.mp3", 1, 20000 , 0);
}
//sydney
void commonPlaydialog9()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/ent_m8/syd_poorg.mp3", 1, 20000 , 0);
}
//katarina
void commonPlaydialog10()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dallas02/kat_engineer.mp3", 1, 20000 , 0);
}
//franklin
void commonPlaydialog11()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dallas01/frank_leader.mp3", 1, 20000 , 0);
}
//stemmons
void commonPlaydialog12()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m2l2/stem_lawless.mp3", 1, 20000 , 0);
}
//drullfather
void commonPlaydialog13()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/ent_m4/inigor_killers.mp3", 1, 20000 , 0);
}
//krindo
void commonPlaydialog14()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/ent_m4/krindo_allowstay.mp3", 1, 20000 , 0);
}
//kleeya
void commonPlaydialog15()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m11l3/kleeya_ihope.mp3", 1, 20000 , 0);
}
//romulanSTXCommander
void commonPlaydialog16()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m11l1/romgen_violated.mp3", 1, 20000 , 0);
}
//romulanRebelCommander
void commonPlaydialog17()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_rene1.mp3", 1, 20000 , 0);
}
//romulanInformant
void commonPlaydialog18()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_inform1.mp3", 1, 20000 , 0);
}
//oolpax
void commonPlaydialog19()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/ent_m7/omag_wayout.mp3", 1, 20000 , 0);
}
//chang
void commonPlaydialog20()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/m2l1/chang_toss.mp3", 1, 20000 , 0);
}
//klingonmerc
void commonPlaydialog21()
{
	entity entActor;
	
	entActor = getCurrentEntity();
	
	entActor.playdialog( "localization/sound/dialog/dm/mp_lurok2.mp3", 1, 20000 , 0);
}


void coop_endLevel()
//------------------------------------------------------------------------------
//HZM Coop Mod - levelend default coop function, loads next map on completion
//------------------------------------------------------------------------------
{
	thread globalCoop_mission_completed("m0-intro");
}

