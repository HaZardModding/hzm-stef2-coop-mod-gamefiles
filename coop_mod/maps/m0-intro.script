//-----------------------------------------------------------------
//  EF2 Level Script File
//
//  Level:        m0-intro
//  Script By:    Benson R, Adam
//  Geometry By:  Benson R, Adam
//  Created on:   10/2/2002
//
//  Last Edited By: Adam
//-----------------------------------------------------------------

void main();
void setupWorld();
void cinematicMain();
void exitRoutine();
//hzm coop mod chrissstrahl - declare our new functions
void coop_endLevel();
//hzm coop mod eof edit


//hzm coop mod - chrissstrahl - include the required coop level-scripts
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
#include "coop_mod/matrix/main.scr"
#include "maps/global_scripts/global_common.scr"
#include "maps/global_scripts/global_playerLoadout.scr"
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////


void main()
{
	cam_fadeout( .1, 0, 0, 0, 1, 0 );
	letterbox( .1 );

	//hzm coop mod chrissstrahl - moved soundtrack down for sync
	
	setupWorld();
	
	waitForPlayer();
	
	globalLoadout_ClearAllViewmode();
	wait( 1 );

	thread cinematicMain();
}

//---------------------
// setupWorld
// setup world objects
//---------------------
void setupWorld()
{
	//--- set the sky box
	$sky.rendereffects( "+skyorigin" );

	//--- spawn cameras
	spawn( "Camera", "targetname", "cam1");
	spawn( "Camera", "targetname", "cam2");

	//--- hide sky camera
	$sky.hide();
	$sky.notsolid();

	//--- rotate the sky dome
	$skydome.rotateX( 0.2 );
	$skydome.rotateY( 0.7 );
}

//---------------------
// cinematicMain
// the main cinematic of the level
//---------------------
void cinematicMain()
{
	//hzm coop mod chrissstrahl - Wait until the Game Starts in Multiplayer
	globalCoop_main_waitForWarmupTime();
	
	//hzm coop mod chrissstrahl - moved soundtrack here for sync
	//--- set the soundtrack
	allowmusicducking ( 0 );
	soundtrack( "music/m0.mus" );
	
	//--- start cinematic commands
	freezeplayer();
	cinematic();
	
	//--- setup the cameras
	$cam1.follow( $pathCinematicIntro_TempExterior );
	$cam1.cut();
	cuecamera( $cam1 );
	wait( .1 );

	entity ePlayer;
	float fPlayerIdInUse;
	
	//hzm coop mod chrissstrahl - make the menu show for all players
	globalCoop_player_transmittToAll("showmenu prologue");
	
	skipthread("exitRoutine");

	//--- fade in
	cam_fadein( 1, 0, 0, 0, 1, 0 );
	wait( 2 );

	//--- Begin Prologue voice
	//$picard.playdialog("localization/sound/dialog/m0/picard_intro1.mp3", 1, 10000, 0);
	//waitForDialog( $picard );
	//wait( .2 );

	//$picard.playdialog("localization/sound/dialog/m0/picard_intro2.mp3", 1, 10000, 0);
	//waitForDialog( $picard );
	//wait( .2 );

	//$picard.playdialog("localization/sound/dialog/m0/picard_intro3.mp3", 1, 10000, 0);
	//waitForDialog( $picard );
	//wait( .2 );

	//$picard.playdialog("localization/sound/dialog/m0/picard_intro4.mp3", 1, 10000, 0);
	//waitForDialog( $picard );
	//wait( .2 );

	//$picard.playdialog("localization/sound/dialog/m0/picard_intro5.mp3", 1, 10000, 0);
	//waitForDialog( $picard );
	//wait( .2 );

	if( doesEntityExist( $picard ) )
	{
    	$picard.playdialog("localization/sound/dialog/m0/picard_intro6.mp3", 1, 10000, 0);
    	waitForDialog( $picard );
    	wait( .2 );
    }

	if( doesEntityExist( $picard ) )
	{
    	$picard.playdialog("localization/sound/dialog/m0/picard_intro7.mp3", 1, 10000, 0);
    	waitForDialog( $picard );
    	wait( .2 );
    }

	if( doesEntityExist( $picard ) )
	{
    	$picard.playdialog("localization/sound/dialog/m0/picard_intro8.mp3", 1, 10000, 0);
    	waitForDialog( $picard );
    	wait( 2 );
    }

	thread exitRoutine();
}

void exitRoutine()
{
	//hzm coop mod chrissstrahl - make the menu show for all players
	globalCoop_player_transmittToAll("popmenu 0");
	globalCoop_player_transmittToAll("popmenu 1");
	globalCoop_player_transmittToAll("ui_hidemouse");

	killthread( "cinematicMain" );

	cam_fadeout( 1, 0, 0, 0, 1, 0 );
	wait( .5 );

	$picard.stopDialog();
	$picard.remove();
	wait( 1 );

	//--- so no intermission so it will instantly transition
	noIntermission();

	//--- change levels
	//spawn ( "trigger_changelevel", "targetname", "trigger_endlevel", "map", "m1l1a-borg_sphere" );
	//wait ( .1 );
	//triggerentity ( $trigger_endlevel );
	
	coop_endLevel();
}


void coop_endLevel()
//------------------------------------------------------------------------------
//Level end
//------------------------------------------------------------------------------
{
	thread globalCoop_mission_completed("m1l1a-borg_sphere");
}

