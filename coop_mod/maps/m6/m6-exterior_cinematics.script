//----------------------------------------------------------------------
//----------------------------------------------------------------------
//	Function Implementations
//----------------------------------------------------------------------
//----------------------------------------------------------------------

//---------------------
// cinematicIntro
// establishing shot of munro getting onto the surface of the enterprise
//---------------------
void cinematicIntro()
{
	//hzm coop mod chrissstrahl - if map (not)loaded with parameter to force stage 2
	if( coop_fForceStage2 ){
		thread cinematicIntro_Skipthread();
		return;
	}
	
	
	inCinematic = 1;

	//--- start cinematic commands

	//--- change the music
	forcemusic( "aux1" );
    allowMusicDucking( 0 );

	cam.load( "m6_Ext_Intro" );

	wait( .1 );

	//--------------------------------------------------------
	//start high and wide on the enterprise and push all the way into munro

	//--- set the camera on the first path
	$cam1.follow( $m6_Ext_Intro );
	$cam1.cut();
	$cam1.fov( 70 );
	cuecamera( $cam1 );
	wait( .3 );

    //--- fade in
    cam_fadein( 1, 0, 0, 0, 1, 0 );

	skipthread ( "cinematicIntro_Skipthread" );
    wait( 11.5 );

	thread cinematicIntro_Skipthread();
}

//---------------------
// cinematicIntro_Skipthread
// skipthread
//---------------------
void cinematicIntro_Skipthread()
{
	//kill the cinematic
	skipthread( "null" );
	killthread( "cinematicIntro" );
	
	//hzm coop mod chrissstrahl - if map (not)loaded with parameter to force stage 2
	if( coop_fForceStage2 ){
		level_ai ( 1 );
		return;
	}

	//fade to black
	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait( .6 );

	//--- hide munro
	globalCommon_AiDummyHide( $munro );

/*	//--- face the player
	$player.turnTowardsEntity( $capital_ship );
*/
	noncinematic();
	clearletterbox( .1 );
	cueplayer();
	releaseplayer();
	wait( .5 );

	level_ai ( 1 );

	$tuvok.playdialog("localization/sound/dialog/m6l2/tuvok_hullbrief.mp3", 1, 80000, 1); //Lieutenant Munro, disable the cruiser’s weapons, engines, and warp drive without destroying the vessel.

	//--- fade in
	cam_fadein( .5, 0, 0, 0, 1, 0 );
	wait( .5 );

	//--- post cinematic
	inCinematic = 0;
}

//---------------------
// blows the exterior hatch for munro to climbout of
void cinematicIntro_BlowHatch()
{
	$hatchArchetype.remove ();
	$jtube_hatch_spawn.playsound ( "sound/environment/machine/lift3stop.wav", 3, .6, 10000);

	$jtube_hatch_spawn.playsound ( "sound/impact/explosion/expl_plasmanode1.wav", 3, 2, 10000);
	$jtube_hatch_spawn.spawnTargetname( "fxJTubeHatchSpawn" );

	trigger( "$jtube_hatch_spawn" );
	wait( .1 );

	$jtube_hatch.time( 3 );
	$jtube_hatch.moveUp( 2500 );
	$jtube_hatch.moveEast( 512 );
	$jtube_hatch.rotateZ( 360 );
	$jtube_hatch.rotateX( 360 );
	waitfor( $jtube_hatch );

	//$fxJTubeHatchSpawn.remove();
	$jtube_hatch.remove();
}


//----------------------------------------------------------------------
//----------------------------------------------------------------------

//---------------------
// cinematicEndStage1
// show the auxillary gun turret being raised into position
//---------------------
void cinematicEndStage1()
{
	//hzm coop mod chrissstrahl - set checkpoint, to load this level in stage 2 if the mission if failed from now on
	globalCoop_mission_setCheckpoint("stage=2");
	
	//[b60021] chrissstrahl - change killmessage
	//hzm coop mod chrissstrahl - display this message if a player dies, rather than display killed by world
	$world.setStringvar("uservar1","killmessage  ^8$$MOD_SUICIDE$$");
	$world.setStringvar("uservar2","killmessage_de  ^8$$MOD_SUICIDE$$");
	
	inCinematic=1;

	//--- start cinematic commands
	freezeplayer();
	cinematic();

	//--- change the music
	forcemusic( "aux2" );
	
	//[b60011] chrissstrahl - 
	float fSkipCinStage2;
	fSkipCinStage2 = getintfromstring(getLevelParamaterValue("skipcin"));
	if(fSkipCinStage2){
		cinematicEndStage1_Skipthread();
		return;
	}	

	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait( .6 );

	//hzm coop mod chrissstrahl - wait for tuvok to spawn and position
	wait(2);
	
	$tuvok.playdialog("localization/sound/dialog/m6l2/tuvok_auxpulse.mp3", 1, 80000, 1);

	letterbox( .1 );

	//--- set the music
	forcemusic( "aux2" );
	allowMusicDucking( 0 );

	//--- Set up Scene
	$photon_cannon_hatch_steam.scale( 4 );
	$photon_cannon_hatch_spawn.spawntargetname( "photon_cannon_hatch_ice" );
	$photon_cannon_hatch_spawn.modelname( "fx/fx-explosion-ice-gas-medium.tik" );
	$photon_cannon_spawn.spawntargetname( "photon_cannon_ice" );
	$photon_cannon_spawn.modelname( "fx/fx-explosion-ice-gas-medium.tik" );

	//--- position the cinematic munro
	globalCommon_AiDummyShow( $munro );
	
	//[b60021] chrissstrahl - move munro to turret
	$munro.warpto( "intro_start_node" );
	$munro.show();
	wait( .1 );
	$munro.turnTowardsEntity( $photon_cannon_hatch );
	wait( .1 );


	//--------------------------------------------------------
	//establishing shots pulling up on auxiallary cannon

   	cam.load( "m6_Ext_Guncam2" );
	wait( .1 );

	//--- set the camera on the first path
	$cam1.fov( 80 );
	$cam1.follow( $m6_Ext_Guncam2 );
	$cam1.cut();
	cuecamera( $cam1 );

	wait( .2 );

    //--- fade in
    cam_fadein( 1, 0, 0, 0, 1, 0 );

   	//--- set skipthread
	skipthread( "cinematicEndStage1_Skipthread" );
	wait( 8 );

	//--- open the cannon doors
	$photon_cannon_hatch_steam.show();
	trigger( "$photon_cannon_spawn" );
	wait( .5 );

	thread cinematicEndStage1_OpenCannonHatch();

	//--- raise the cannon
	thread cinematicEndStage1_RaiseCannon();
	wait( 1.5 );

	//--- blow the control hatch
	thread cinematicEndStage1_BlowCannonControlHatch();
	wait( .5 );

	//--- remove the fx
	$photon_cannon_hatch_steam.remove();
	$photon_cannon_hatch_spawn.remove();
	wait( 5 );

	thread cinematicEndStage1_Skipthread();
}


//---------------------
// cinematicEndStage1_Skipthread
// skipthread
//---------------------
void cinematicEndStage1_Skipthread()
{
	//kill the cinematic
	skipthread( "null" );
	killthread( "cinematicEndStage1" );
	killthread( "cinematicEndStage1_OpenCannonHatch" );
	killthread( "cinematicEndStage1_RaiseCannon" );
	killthread( "cinematicEndStage1_BlowCannonControlHatch" );

	$tuvok.stopdialog ();
	//fade to black
	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait( .6 );

	//--- remove entities
	if( doesEntityExist( $photon_cannon_hatch_steam ) )
	{
		$photon_cannon_hatch_steam.remove();
	}

	if( doesEntityExist( $photon_cannon_hatch_spawn ) )
	{
		$photon_cannon_hatch_spawn.remove();
	}

	if( doesEntityExist( $photon_cannon_hatch ) )
	{
		$photon_cannon_hatch.remove();
	}

	if( doesEntityExist( $photon_cannon_hatch_ice ) )
	{
		$photon_cannon_hatch_ice.remove();
	}

	//--- hide the cinematic munro
	globalCommon_AiDummyHide( $munro );

	//--- return back to game
	noncinematic();

		//--- change the music
		forcemusic( "aux3" );

	clearletterbox( .1 );
	cueplayer();
	releaseplayer();
	
	
	//hzm coop mod chrissstrahl - make sure the turret is really up and stops playing the raise animation
	$entTurret.anim ( "idle_above" );

/*	wait( .5 );

	//--- fade in
	cam_fadein( .5, 0, 0, 0, 1, 0 );
	wait( .5 );
*/
	//--- post cinematic
	inCinematic = 0;
	beginStage2 ();
}

//---------------------
// open the hatch to the cannon
void cinematicEndStage1_OpenCannonHatch()
{
	$photon_cannon_hatch_spawn.playsound ( "sound/environment/machine/factory_pneuup2.wav", 3, 1, 10000);
	$photon_cannon_doora.time( 3 );
	$photon_cannon_doora.moveSouth( 160 );
	$photon_cannon_doorb.time( 3 );
	$photon_cannon_doorb.moveNorth( 160 );
	waitFor( $photon_cannon_doora );
}

//---------------------
// raise the cannon
void cinematicEndStage1_RaiseCannon()
{
	$entTurret.anim ( "raise" );
	waitforanimation ( $entTurret, "raise" );

	$entTurret.anim ( "idle_above" );
}

//---------------------
// blow off the control hatch for the cannon
void cinematicEndStage1_BlowCannonControlHatch()
{
	$photon_cannon_hatch_spawn.playsound ( "sound/impact/explosion/expl_plasmanode1.wav", 3, 2, 10000);
	$photon_cannon_hatch.time( 3 );
	$photon_cannon_hatch.moveUp( 2048 );
	$photon_cannon_hatch.moveEast( 512 );
	$photon_cannon_hatch.rotateZ( 360 );
	$photon_cannon_hatch.rotateX( 360 );
	trigger( "$photon_cannon_hatch_spawn" );
	waitFor( $photon_cannon_hatch );
}

//----------------------------------------------------------------------
//----------------------------------------------------------------------
void scaleTheShuttleDoods();
void transitionToM7 ();
void endStage2Cinematic()
{
	//hzm coop mod chrissstrahl - remove timmer hud
	thread globalCoop_huds_manageAll("m6CapitalShipHealth",0,0);
	thread globalCoop_huds_manageAll("m6SabotageTimer",0,0);

	cinematic ();
	//$player.setobjectivecomplete ( "DestroyIdryllFighters" , 1 );
	
	//hzm coop mod Chrissstrahl - set the objective
	globalCoop_objectives_set("$$DisableIdryllCommandShip$$","complete",2,1);
	
	//hzm coop mod Chrissstrahl - holster weapon
	entity ePlayer;
	float fPlayerIdInUse;
	//[b60025] Chrissstrahl - now using Entity numbers instead of targetnames
	for(fPlayerIdInUse=0;fPlayerIdInUse<coop_integer_maxPlayers;fPlayerIdInUse++){
		ePlayer = getEntity("*"+fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			if(globalCoop_check_playerSpectator(ePlayer) == 0){
				ePlayer.holster ( );
			}
		}
	}
	
	wait(0.1);
	
	//hzm coop mod Chrissstrahl - take weapon
	//[b60025] Chrissstrahl - now using Entity numbers instead of targetnames
	for(fPlayerIdInUse=0;fPlayerIdInUse<coop_integer_maxPlayers;fPlayerIdInUse++){
		ePlayer = getEntity("*"+fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			if(globalCoop_check_playerSpectator(ePlayer) == 0){
				ePlayer.take ( "EnterpriseCannon" );
			}
		}
	}
	
	inCinematic = 0;
	//--- Fade out
	cam_fadeout( 1, 0, 0, 0, 1, 0 );
	freezeplayer();
	//fakeplayer (); //[b60021] chrissstrahl
	//--- change the music
	forcemusic( "success" );

	$f1.remove ();
	$f2.remove ();
	$f3.remove ();
	$f4.remove ();

	removeclass ( "projectile" );

	letterbox( .01 );
	cam.load ( "m6_Ext_EndShot1" );
	cam.load ( "m6_exterior_capShipDisabled" );
	cam.load ( "m6ext_shuttle" );
	wait ( .1 );
	
	//[b60021] chrissstrahl - move munro and show
	$munro.warpto ( "endCinematicNode" );
	$munro.show();
	$munro.angle(90);
	//$munro.model ( "char/hazardteam_evosuit-munro.tik" );
		
	vector v;
	v = $capShipOrigin.getangles ();
	globalCineFX_CameraPathRotate ( $m6_exterior_capShipDisabled , v_y , '-43264 35672 4336' ,$capShipOrigin.getorigin ());

	$capShipOrigin.time ( 10 );
	$capShipOrigin.rotateYUp ( 3 );
	$capShipOrigin.rotateXDown ( 2 );

	$cam3.follow ( $m6_exterior_capShipDisabled );
	$cam3.fov( 70 );
	$capShipOrigin.endpath ();
	$capShipOrigin.loopsound ( "sound/ships/drull/drull_dead.wav" , 1 , 40384 );
	wait ( .05 );

	//--- Set up Scene
	$munro.anim( "idle" );
	$munro.turntoangle( 170 );
	$munro.headwatchtarget( "capShipOrigin", 100 );


	//after all that required stuff, allow the player to skip the cinematic
	skipthread ( "transitionToM7" );

	//--- Fade in
	cam_fadein( .5, 0, 0, 0, 1, 0 );

	$cam3.cut();
	cuecamera ( $cam3 );
	wait ( 6.0 );

	$picard.playdialog("localization/sound/dialog/m6l2/picard_nicely.mp3", 1, 80000, 1);

	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	$cam2.follow ( $m6_Ext_EndShot1 );
	$cam2.fov( 70 );
	$cam2.cut ();
	wait ( .5 );
	cuecamera ( $cam2 );
	cam_fadein( .5, 0, 0, 0, 1, 0 );

	$finalShuttle.bind ( $finalShuttleOrigin );
	$finalShuttleDoor.bind ( $finalShuttleOrigin );

	wait ( 4 );

	$munro.displayeffect ( "TransportOut" , "Federation" );

	$finalShuttleOrigin.followpath  ( $shuttlePath );	//start it moving a bit early

	wait ( .9 );
	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait ( 3 );


	$finalShuttle.show ();
	$finalShuttleDoor.show ();
	$entShuttleSurface.show ();
	$finalShuttleOrigin.playsound ( "sound/vehicles/shuttlecraft/shuttle_accelerate.wav" , 3 , 1 , 10000 );

	cam_fadein( .5, 0, 0, 0, 1, 0 );

	$cam1.follow ( $m6ext_shuttle );
	$cam1.cut ();

	//$cam1.watch ( "finalShuttleOrigin" );

	cuecamera ( $cam1 );

	wait ( 6 );
	thread scaleTheShuttleDoods ();
	wait ( 4 );

 	//stuffcmd("ui_hud 1\n");

	thread transitionToM7 ();
}

void transitionToM7 ()
{
	skipthread ( "null" );
	killthread ( "endStage2Cinematic" );

	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait ( .5 );

	clearletterbox ( .1 );
	noncinematic ();
	
	//hzm coop mod chrissstrahl - load next map
	thread coop_endLevel();
	
	/*
 	//--- level transistion
 	spawn ( "trigger_changelevel", "targetname", "trigger_endlevel", "map", "m7l1a-attrexian_colony" );
 	wait ( .1 );
 	triggerentity ( $trigger_endlevel );
	*/
}


//----------------------------------------------------------------------
//----------------------------------------------------------------------

void scaleTheShuttleDoods ()
{
	float i;
	for ( i = .05 ; i>=0.01;i-=.001 )
	{
		$finalShuttle.scale ( i );
		$finalShuttleDoor.scale ( i );
		wait ( .1 );
	}
}

void doExplodeSaucer ()
{
	float i;
	for ( i =0 ; i < 5 ; i ++ )
	{
		triggerentity ( $saucerExp1 );
		wait ( .5 );
		triggerentity ( $saucerExp2 );
		wait ( .5 );
		triggerentity ( $saucerExp3 );
		wait ( .25 );
		triggerentity ( $saucerExp1 );
		wait ( 2 );
	}
}

void doExplodeSaucer2 ()
{
	float i;
	for ( i =0 ; i < 5 ; i ++ )
	{
		triggerentity ( $saucerExp5 );
		wait ( .5 );
		triggerentity ( $saucerExp6 );
		wait ( .5 );
		triggerentity ( $saucerExp7 );
		wait ( 2 );
	}
}


void doEnterpriseExplosions ()
{
	float i;
	string s;
	entity e;
	for ( i = 1 ; i <=11 ; i++ )
	{
		s = "saucerExp" + i;
		e = getentity ( s );
		e.scale ( .01 + randomfloat ( .01 ));

	}
	$saucerExpBig.scale ( .5 );
	$saucerExpBig.modelname ( "models/fx/fx-explosion-enterprise-huge.tik" );

	$entNacelles.forcealpha ( 1 );
	$entBody.forcealpha ( 1 );
	$entSaucer.forcealpha ( 1 );

	thread doExplodeSaucer ();
	thread doExplodeSaucer2 ();

	wait ( 1 );
	$entDamage.show ();
	wait ( 3.5 );

	killthread ( "doExplodeSaucer" );
	killthread ( "doExplodeSaucer2" );

	triggerentity ( $saucerExp8 );
	wait ( .5 );
	triggerentity ( $saucerExp9 );
	wait ( .5 );
	triggerentity ( $saucerExp10 );
	wait ( .25 );
	triggerentity ( $saucerExp11 );
	wait ( .25 );

	wait ( 1 );
	triggerentity ( $saucerExpBig );

	$entNacelles.fadeout ( 0.5 );
	$entBody.fadeout ( 0.5 );
	$entSaucer.fadeout ( 0.5 );
	$entDamage.remove ();

	wait ( .25 );

	$entOrigin.earthquake( .25, 1 );
}
void missionFailedCinematicSkipthread ();
void missionFailedCinematic()
{
	if ( inCinematic == 1 )
		return;
	cam_fadeout( 1, 0, 0, 0, 1, 0 );

	inCinematic = 1;

	$entSurface.remove ();
	
	//hzm coop mod chrissstrahl - remove timmer hud
	thread globalCoop_huds_manageAll("m6CapitalShipHealth",0,0);
	thread globalCoop_huds_manageAll("m6SabotageTimer",0,0);

	$explosionRibbon.show ();
	$fighterExp.scale ( .05 );
	$fighterExp.modelname ( "models/fx/fx-explosion-enterprise-small.tik" );
	//$fighterExp.modelname ( "models/fx/fx-drull-ship-explode.tik" );

	$cinFighter1.bind ( $cinFighterOrigin1 );
	$cinFighter2.bind ( $cinFighterOrigin2 );
	$capital.bind ( $capitalOrigin );

	cam.load ( "m6Ext_FighterPath1" );
	cam.load ( "m6Ext_FighterPath2" );
	cam.load ( "m6Ext_CapitalPath" );
	cam.load ( "m6Ext_ExplosionCamera1" );
	cam.load ( "m6Ext_ExplosionCamera2" );
	cam.load ( "m6Ext_ExplosionCamera3" );
	wait ( .1 );

	$planet.hide ();

	killthread ( "runCapShip" );
	inCinematic = 1;
	//--- Fade out
	freezeplayer();
	cinematic();
	letterbox ( .1 );

	//hzm coop mod chrissstrahl - don't do this in coop
	/*
	//get rid of the hud
	$turret.unlock ();
	$player.useentity ( $turret );
	*/

	skipthread ( "missionFailedCinematicSkipthread" );
	$entDamage.hide ();
	$cam1.follow ( $m6Ext_ExplosionCamera1 );
	$cam1.fov ( 70 );
	$cam1.cut ();
	wait ( .5 );
	$cinFighterOrigin1.followpath ( $m6Ext_FighterPath1 );
	$cinFighterOrigin2.followpath ( $m6Ext_FighterPath2 );
	wait ( .5 );

	//--- change the music
	forcemusic( "aux2" );
    allowMusicDucking( 0 );

	cuecamera ( $cam1 );
 	cam_fadein( .5, 0, 0, 0, 1, 0 );
	wait  ( 1 );
	thread doEnterpriseExplosions ();
	wait ( 1.25 );
	$cinFighterOrigin2.endpath ();
	triggerentity ( $fighterExp );
	$cinFighter2.remove ();
	$cinFighter2.scale ( .01 );
	wait ( 2 );

	$capitalOrigin.followpath ( $m6Ext_CapitalPath );

	wait ( 10 );

	thread missionFailedCinematicSkipthread ();
}

void missionFailedCinematicSkipthread ()
{
	noncinematic ();
	killthread ( "missionFailedCinematic" );

	cam_fadeout( 2, 0, 0, 0, 1, 0 );
	
	//hzm coop mod chrissstrahl - fail mission with a reason
	globalCoop_mission_failWithReason("EnterpriseDestroyed");
}




//---------------------
// cinematicDeathBrig
// player fails mission, showing hazard team in the brig
//---------------------
void cinematicDeathBrig_Skipthread();
void cinematicDeathBrig()
{
	wait( 3 );

	//--- start cinematic commands
	freezeplayer();
	cinematic();
	cam_fadeout( .5, 0, 0, 0, 1, 0 );
	wait( .6 );

	letterbox( .1 );

	cam.load( "m6_DeathBrig_Shot1" );
	wait( .1 );

	//--- set the camera on the first path
	$cam1.follow( $m6_DeathBrig_Shot1 );
	$cam1.cut();
	$cam1.fov( 60 );
	wait( .2 );

	cuecamera( $cam1 );

    //--- fade in
    cam_fadein( 1, 0, 0, 0, 1, 0 );
    wait( 6 );

    //--- walk munro to the front of the cell
    $deathMunro.walkto( "$nodeDeathMunro_WalkTo1", "walk" );
    wait( 2 );

    //--- make munro and guard2 watch the guards
    $deathMunro.headWatchTarget( "deathIdryllGuard1", 4 );
    $deathIdryllGuard2.headWatchTarget( "deathIdryllGuard1", 4 );
    wait( 1 );

	//--- change munro's expression as the guard walks by
    $deathMunro.morph( "exp_Disgust" );

    //--- walk the guard across the cells
    $deathIdryllGuard1.walkto( "$nodeDeathIdryllGuard1_WalkTo1", "walk" );
    wait( 2.5 );

	//--- open the brig door
	$doorBrig.open( $world );
	wait( .5 );

	$deathIdryllGuard2.headWatchTarget( "deathMunro", 4 );
	wait( 4.5 );

    //--- close the door
    //$doorBrig.close();

	thread cinematicDeathBrig_Skipthread();
}


//---------------------
// cinematicDeathBrig_Skipthread
// skipthread
//---------------------
void cinematicDeathBrig_Skipthread()
{
	//kill the cinematic
	skipthread( "null" );
	killthread( "cinematicDeathBrig" );

	//--- fade to black
	cam_fadeout( .2, 0, 0, 0, 1, 0 );
	wait( .2 );

	//--- fail the mission
	
	//hzm coop mod chrissstrahl - fail mission
	globalCoop_mission_fail();
}


void bleh ()
{
	killthread ( "playerRangeCheck" );
	stuffcmd ( "noclip\n" );
	thread missionFailedCinematic();
}



