float TOTAL_COMPONENTS = 3;
float MAX_LIVES = 4;
float SHIP_HEALTH = 600;
float CAPITAL_SHIP_COMPONENT_HEALTH = 1000;
float CAPITAL_SHIP_HEALTH = 8000;

float shipHealth;
float coop_shipCanBeAttacked;

float warpDriveDestroyed = 0;
float enginesDestroyed = 0;
float weaponsDestroyed = 0;

//----------------------------------------------------------------------
//----------------------------------------------------------------------
//	Function Implementations
//----------------------------------------------------------------------
//----------------------------------------------------------------------

void enterpriseManuever1 ();
void enterpriseManuever2 ();
void enterpriseManuever3 ();

float TOTAL_CAP_CLIPS = 29;
void capClipsSolid ( float makeSolid )
{
	float i;
	entity e;
	for ( i=1;i<=TOTAL_CAP_CLIPS;i++)
	{
		e = getentity ( "capShipClip" + i );
		if ( makeSolid )
			e.solid();
		else
			e.notsolid ();
	}
}

void initCapClips ()
{
	float i;
	entity e;
	for ( i=1;i<=TOTAL_CAP_CLIPS;i++)
	{
		e = getentity ( "capShipClip" + i );
		e.handlesDamage ( 1 );
		e.health ( 10000 );
		e.bind ( $capShipOrigin );
		thread globalCommon_OnDamage ( e , "capShipHit" );
	}
}

void fireBattery ( entity b1, entity b2 )
{
	capClipsSolid ( 0 );
	b1.projectileattackentity ( "models/projectile/projectile-photonball-idryll-large.tik", "$entSurface" , 5 , 15 );
	wait ( 1 );
	b2.projectileattackentity ( "models/projectile/projectile-photonball-idryll-large.tik", "$entSurface" , 5 , 15 );
	wait ( 2 );
	capClipsSolid ( 1 );
}


// -----------------
//  fighter stuff
// -----------------

void doFighterFollowPath ( entity fighter , entity path );
void initFighter ( entity e , string p )
{
	entity pathEntity;
	pathEntity = getEntity ( p );

	//these assume the fighters are at a scale of .5
	//see the .tik for the scale 1.0 sizes
	e.setsize ('-384 -192 -8', '384 192 192' );

	e.handlesdamage ( 1 );
	e.health ( SHIP_HEALTH );
	e.setfloatvar ( "lives" , MAX_LIVES );
	e.setstringvar ( "path" , p );

	e.show ();

	thread globalCommon_OnDamage ( e , "fighterHit" );

	pathEntity.setfloatvar ( "inuse" , 1 );
	thread doFighterFollowPath ( e, pathEntity );
}

float fightersDestroyed = 0;
void componentDestroyed ( )
{
	entity e;
	e=getcurrententity();
	
	//[b60021] chrissstrahl - changed, based on secret2 example - because we get massive lag her
	e.nodamage();
		
	if ( e.gethealth() > 0 )
	{
		//[b60021] chrissstrahl - do not have such long pauses
		thread coop_capShipDamage("damaged");
//$player0.hudprint("componentDestroyed "+e.gettargetname()+": "+getLevelTime()+"\n");
		wait(0.1);
		
		globalCommon_OnDamage ( e , "componentDestroyed" );
		return;
	}

	componentsDestroyed++;
	e.scale ( 4.0 );

	if ( e.gettargetname () == "$idryll_weapons" )
	{
		weaponsDestroyed = 1;
	}
	else if ( e.gettargetname () == "$idryll_warpdrive" )
	{
		warpDriveDestroyed = 1;
	}
	else if ( e.gettargetname () == "$idryll_engines" )
	{
		enginesDestroyed = 1;
	}

	e.show ();
	e.model ( "models/fx/fx-drull-ship-explode.tik" );
	wait ( .5 );
	e.model ( "models/fx/fx-smoke-capitalship-damaged.tik" );
	//e.remove ();

	if ( componentsDestroyed >=TOTAL_COMPONENTS )
	{
		killthread ( "damageSurface" );
		$entSurface.handlesdamage ( 0 );

		$capShipOrigin.endpath ();
		$capShipOrigin.time ( 30 );
		$capShipOrigin.rotateZ ( 1 );
		$capShipOrigin.rotateY (.5 );

		levelComplete = 1;
		killthread ( "runCapShip" );
		removeclass ( "projectile" );

		wait ( 2 );

		endStage2Cinematic();
	}
}

//----------------------------------------------------------------------
//----------------------------------------------------------------------

void beginStage2 ( )
{
	//hzm coop mod chrissstrahl - remove timer hud
	thread globalCoop_huds_manageAll("m6SabotageTimer",0,1);
	
	//hzm coop mod chrissstrahl - lined up with everyone else (not in the hatch)
	coop_vector_spawnOrigin1 = '-19810 12920 1027';
	
	$world.physicsVar("maxspeed",0);		
	
	//hzm coop mod chrissstrahl - warp players to the spawn location
	entity ePlayer;
	float fPlayerIdInUse;
	vector vOrigin;
	for(fPlayerIdInUse=0;fPlayerIdInUse<=coop_integer_maxPlayers;fPlayerIdInUse++){
		ePlayer = getentity("player"+ fPlayerIdInUse);
		if(doesEntityExist(ePlayer)){
			thread globalCoop_player_warpToSpawn(ePlayer);
		}
	}
	
	//hzm coop mod chrissstrahl - make sure the players are at the right place
	thread coop_stage2ForceRulesOnPlayers();
	
	//hzm coop mod chrissstrahl - give enterprise only
	thread globalCoop_player_giveAll("models/weapons/worldmodel-enterprise.tik",2);	

	$tuvok.stopdialog ();
	endStage1Timer ();
	globalCommon_Autosave ();

	//hzm coop mod chrissstrahl - we want it to be visible in coop, so dissable this code
	/*
	$entTurret.hide ();
	$turret.time ( .1 );
	$turret.moveup ( 1024 );	//keep it out of reach of prying hands
	*/
	$search_beam1.remove();
	$search_fighter1.remove();
	$search_beam1_origin.remove();
	
	wait ( 1 );
	
	//hzm coop mod chrissstrahl - don't do this in coop
	/*$player.useentity ( $turret );*/
	
	$turret.lock ();	//lock the player in
	$entSurface.solid ();
	$entSurface.handlesdamage (1);

	shipHealth = CAPITAL_SHIP_HEALTH;

	thread globalCommon_OnDamage ( $idryll_weapons ,   "componentDestroyed" );
	thread globalCommon_OnDamage ( $idryll_warpdrive , "componentDestroyed" );
	thread globalCommon_OnDamage ( $idryll_engines ,   "componentDestroyed" );

	$idryll_weapons.health ( CAPITAL_SHIP_COMPONENT_HEALTH );
	$idryll_warpdrive.health ( CAPITAL_SHIP_COMPONENT_HEALTH );
	$idryll_engines.health ( CAPITAL_SHIP_COMPONENT_HEALTH );

	$idryll_weapons.handlesdamage ( 1 );
	$idryll_warpdrive.handlesdamage ( 1 );
	$idryll_engines.handlesdamage ( 1 );
	
	//[b60018] chrissstrahl - moved here, to fix issues with players not being able to hit the ship, because the clip was not bound before ship moved
	initCapClips ();

	$capital_ship.setsize ('-384 -192 -8', '384 192 192' );
	$capShipOrigin.followpath ( $capShipPeelOff );
	wait ( 1 );

	$bob.ai_on();	//bring up the enterprise health hud
	thread globalCommon_OnDamage ( $entSurface , "damageSurface" );

	cam_fadein( .5, 0, 0, 0, 1, 0 );

	waitfor ( $capShipOrigin );
	
	//[b60021] chrissstrahl - allow ship to be attacked now
	coop_shipCanBeAttacked = 0;
	$capital_ship.hide();

	thread initFighter ( $f1 , "fighterPath1" );
	thread initFighter ( $f2 , "fighterPath2" );
	thread initFighter ( $f3 , "fighterPath3" );
	thread initFighter ( $f4 , "fighterPath4" );
	wait ( 5 );

	//start the battle
	thread runCapShip ();
}
//----------------------------------------------------------------------
//----------------------------------------------------------------------

vector VectorSubtract ( vector v1, vector v2 )
{
	vector ret;

	ret_x = v1_x - v2_x;
	ret_y = v1_y - v2_y;
	ret_z = v1_z - v2_z;

	return ret;
}

//[b60011] Chrissstrahl - of capital ship
float fShipStatActive;
void coop_updateStats()
{
	if(fShipStatActive){
		return;
	}
	
	fShipStatActive=1;
	while(fShipStatActive){
		//hzm coop mod chrissstrahl - send state to 
		entity ePlayer;
		float fPlayerIdInUse;
		float fStat;
		fStat = ( 100 * (shipHealth/CAPITAL_SHIP_HEALTH) );
		for(fPlayerIdInUse=0;fPlayerIdInUse<coop_integer_maxPlayers;fPlayerIdInUse++){
			ePlayer = getentity("player"+fPlayerIdInUse);
			if(doesEntityExist(ePlayer)){
				ePlayer.setstat ( "mp_generic2" , fStat );//update the boss bar
			}
		}
		wait(1);
	}
}

void runCapShip ()
{	
	float done = 0;

	//hzm coop mod Chrissstrahl - set the objective
	globalCoop_objectives_set("$$DisableIdryllCommandShip$$","incomplete",2,1);
	
	$tuvok.playdialog("localization/sound/dialog/m6l2/tuvok_disable.mp3", 1, 80000, 1); //Lieutenant Munro, disable the cruiserï¿½s weapons, engines, and warp drive without destroying the vessel.
	
	//hzm coop mod chrissstrahl - add timmer hud
	thread globalCoop_huds_manageAll("m6CapitalShipHealth",1,1);
	
	//[b60011] Chrissstrahl - of capital ship
	thread coop_updateStats();
	
	while ( !done )
	{
		//[b60021] chrissstrahl - allow ship to be attacked now
		coop_shipCanBeAttacked = 1;
		$capital_ship.show();
		
		if ( !weaponsDestroyed )
		{
			$idryll_weapons.show ();
			$capShipOrigin.followpath ( $weaponsExposed );
			$capShipOrigin.playsound ( "sound/ships/drull/drull_flyby2.wav" , 6 , 2 , 2384 );
			wait ( 9 );
			fireBattery ( $weaponsBattery1,$weaponsBattery2 );
			waitfor ( $capShipOrigin );
			$idryll_weapons.hide ();
			
			//[b60021] chrissstrahl - allow ship to be attacked now
			coop_shipCanBeAttacked = 0;
			$capital_ship.hide();

			thread enterpriseManuever1 ( );
			wait ( 5 );
		}
		
		//[b60021] chrissstrahl - allow ship to be attacked now
		coop_shipCanBeAttacked = 1;
		$capital_ship.show();

		if ( !warpDriveDestroyed )
		{
			$idryll_warpdrive.show ();
			$capShipOrigin.followpath ( $warpDriveExposed );
			$capShipOrigin.playsound ( "sound/ships/drull/drull_flyby2.wav" , 6 , 2 , 2384 );
			wait  ( 10 );
			fireBattery ( $enginesBattery1,$enginesBattery2 );
			waitfor ( $capShipOrigin );
			$idryll_warpdrive.hide ();
			
			//[b60021] chrissstrahl - allow ship to be attacked now
			coop_shipCanBeAttacked = 0;
			$capital_ship.hide();
			
			thread enterpriseManuever3 ( );
			wait ( 5 );
		}
		
		//[b60021] chrissstrahl - allow ship to be attacked now
		coop_shipCanBeAttacked = 1;
		$capital_ship.show();

		if ( !enginesDestroyed )
		{
			$idryll_engines.show ();
			$capShipOrigin.followpath ( $enginesExposed );
			$capShipOrigin.playsound ( "sound/ships/drull/drull_flyby2.wav" , 6 , 1 , 2384 );
			wait ( 8 );
			fireBattery ( $warpDriveBattery1,$warpDriveBattery2 );
			waitfor ( $capShipOrigin );
			$idryll_engines.hide ();
			
			//[b60021] chrissstrahl - allow ship to be attacked now
			coop_shipCanBeAttacked = 0;
			$capital_ship.hide();
			
			thread enterpriseManuever2 ( );
			wait ( 5 );
		}

		if ( weaponsDestroyed && enginesDestroyed && warpDriveDestroyed ){
			done = 1;
			//[b60011] Chrissstrahl - end stat update
			fShipStatActive = 0;			
			killthread("coop_updateStats");
		}
	}
	
	//[b60021] chrissstrahl - allow ship to be attacked now
	$capital_ship.show();

	
	killthread("coop_stage2ForceRulesOnPlayers");

	//hzm coop mod chrissstrahl - remove timmer hud
	thread globalCoop_huds_manageAll("m6CapitalShipHealth",0,1);

	//hzm coop mod Chrissstrahl - set the objective
	globalCoop_objectives_set("$$DisableIdryllCommandShip$$","complete",2,1);
	
	//hzm coop mod Chrissstrahl - show munro again for end cinematic
	$munro.show();
	
/*	$capShipOrigin.time ( 60 );
	$capShipOrigin.rotateY ( 1 );
	$capShipOrigin.moveWest ( 2048 );
*/
}

//----------------------------------------------------------------------
//----------------------------------------------------------------------

entity choosePath ()
{
	float pathAlreadyChosen = 1;
	float chooseAlternate;
	chooseAlternate = randomint ( 2 );
	entity toReturn;

	float i;
	while ( !doesEntityExist ( toReturn ) && pathAlreadyChosen )
	{
		for ( i = 1 ; (i<=4) && pathAlreadyChosen ; i++ )
		{
			if ( chooseAlternate )
				toReturn = getentity ( "fighterPath" + i + "_alt" );
			else
				toReturn = getentity ( "fighterPath" + i );

			globalCommon_AssertEntity ( toReturn , "choosePath: ASSERT failed\n" );
			pathAlreadyChosen = 0;
			//[b60021] chrissstrahl - fix warning spam
			if(toReturn.doesVarExist("inuse")){
				pathAlreadyChosen = toReturn.getfloatvar ( "inuse" );
			}
		}
		wait ( .05 );
	}

	//print ( " choosing a path " + toReturn.getrawtargetname() + "\n" );
	toReturn.setfloatvar ( "inuse" , 1 );
	return toReturn;
}

void doFighterFollowPath ( entity fighter , entity path )
{
	float lastLife,attackThreadID;
	entity thePath,lastPath;
	lastLife = fighter.getfloatvar ( "lives" );
	thePath = path;

	//[b60021] chrissstrahl - added null check
	while(doesEntityExist(fighter) == 1 && lastLife == globalCoop_level_getFloatVar(fighter,"lives"))
	{
		fighter.followpath ( thePath , "normalangles" );
		fighter.playsound ( "sound/ships/drull/drull_flyby1.wav" , 2 , 1.5 , 1384 );
		wait ( 2 + randomfloat ( .5 ) );

		//do attacks for a couple of seconds
		//[b60021] chrissstrahl - added null check
		if(!doesEntityExist(fighter)){
			return;
		}
		
		fighter.projectileAttackEntity ( "models/projectile/projectile-photonball-idryll.tik" , "$entSurface" , 5 ,20 );

		waitfor ( fighter );
		wait ( randomfloat ( 3 ) + 2 );

		lastPath = thePath;
		thePath = choosePath();
		//avoid choosing the same path twice in a row
		lastPath.setfloatvar ( "inuse" , 0 );		//done with this path
	}
}

void fighterHit ( )	//ship ondamage thread
{
	entity e,explosion;
	e = getcurrententity();		//should be a ship

	if ( e.gethealth () <= 0 )
	{
		float c;
		c = e.getfloatvar ( "lives" );
		c--;

		if ( c<=0 )	//the ship is ready to _really_ be destroyed
		{
			e.scale ( 1 );
			e.model ( "fx/fx-explosion-spaceship-idryll.tik" );
			entity p;
			//we're done with the last path we chose
			p = getentity ( e.getstringvar ( "path" ));
			p.setfloatvar ( "inuse" , 0 );

			wait ( .5 );
			//componentDestroyed();
		}
		else		//just fake the explosion and reset the ship
		{
			//[b60021] chrissstrahl - changed, based on secret2 example - because we get massive lag here
			e.nodamage();
		
			e.setfloatvar ( "lives" , c );

			entity p,oldP;
			//we're done with the last path we chose
			oldP = getentity ( e.getstringvar ( "path" ));
			//get a new random path
			p = choosePath ();

			//now set the old path to be not-in-use
			//we didn't do it before since we wanted to avoid choosing the same path
			//twice in a row
			oldP.setfloatvar ( "inuse" , 0 );

			//save it off
			e.setstringvar ( "path" , p.getrawtargetname ());
			globalCommon_AssertEntity ( p , "No path for fighter" );

			e.hide ();
			e.health ( SHIP_HEALTH );
			e.endpath();

			explosion = spawn ( "Explosion" , "model" , "fx/fx-explosion-spaceship-idryll.tik" );
			explosion.origin ( e.getorigin ());
			explosion.playsound ( "sound/impact/explosion/expl_drullship.wav" , 2 , 2 , 4384 );
			e.origin ( p.getorigin () ); //try to get rid of lerping
			thread doFighterFollowPath ( e , p );

			wait ( .75 );	//try to get rid of lerping
			e.show ();
			explosion.remove ();
			thread globalCommon_OnDamage ( e , "fighterHit" );
		}
	}
	else
	{
		e.anim ( "damaged" );	//flash the shields on
		e.playsound ( "sound/ships/enterprise/ent_impact2.wav" , 4 , 3 , 4384 );
		
		//[b60021] chrissstrahl - changed, based on secret2 example - because we get massive lag here
		//waitforanimation ( e , "damaged" );
		e.nodamage();
		wait(.5);
		
		e.anim ( "idle" );
		thread globalCommon_OnDamage ( e , "fighterHit" );
	}
}

void capShipHit ()
{
	entity e;
	e= getCurrentEntity ();

	//[b60021] chrissstrahl - changed, based on secret2 example - because we get massive lag her
	e.nodamage();
	
	
	//[b60021] chrissstrahl - do not handle damage before tuvok had his dialog
	//also do not allow to be attacked while ship is "hidden"
	if(coop_shipCanBeAttacked){
		shipHealth -= ( 10000 - e.gethealth());	//hurt the capship appropriately
			
		//[b60021] chrissstrahl - do not have such long pauses
//$player0.hudprint("coop_capShipDamage "+e.gettargetname()+": "+getLevelTime()+"\n");
		thread coop_capShipDamage("shielded");
		wait(0.1);

	//$player0.hudprint("capShipHit - "+shipHealth+"\n");

		//print ( "Capship: " +shipHealth+"\n" );
		if ( shipHealth <= 0 )		//failed
		{
			//hzm coop mod chrissstrahl - remove timmer hud
			thread globalCoop_huds_manageAll("m6CapitalShipHealth",0,1);
			
			//[b60021] chrissstrahl - spawm, just changing model does not work right in coop
			spawn("models/fx/fx-drull-ship-explode.tik","origin",""+$capital_ship.getOrigin(),"scale","30");
			
			//$capital_ship.model ( "models/fx/fx-drull-ship-explode.tik" );
			//$capital_ship.scale ( 36.0 );
			$capital_ship.hide();
			$capital_ship.playsound ( "sound/ships/drull/drull_capitalshiphit.wav" , 3 , 2 , 4384 );

			$idryll_weapons.remove();
			$idryll_warpdrive.remove();
			$idryll_engines.remove();
			wait ( 5 );
			
			globalCoop_mission_failWithReason("YouDestroyedCapitalShip");
			return;
		}
	}else{
		wait(0.2);
	}
	
	e.health ( 10000 );
	thread globalCommon_OnDamage ( e , "capShipHit" );
}

void enterpriseManuever1 ()
{
	globalAccelMove_RotateZ( $sky, -10, 2.5 , "rampupdown", "" );
	globalAccelMove_RotateZ( $sky, 10, 5 , "rampupdown", "" );
}

void enterpriseManuever2 ()
{
	globalAccelMove_RotateX( $sky, -12, 2.5 , "rampupdown", "" );
	globalAccelMove_RotateX( $sky, 12, 5 , "rampupdown", "" );
}

void enterpriseManuever3 ()
{
	globalAccelMove_RotateZ( $sky, -14, 2.5 , "rampupdown", "" );
	globalAccelMove_RotateZ( $sky, 14, 5 , "rampupdown", "" );
}


void blah ()
{
	$idryll_weapons.show ();
	$idryll_weapons.model ( "models/fx/fx-drull-ship-explode.tik" );
	wait ( .5 );
	$idryll_weapons.model ( "models/fx/fx-smoke-capitalship-damaged.tik" );
}

//[b60011] chrissstrahl
float fCapShipDamage=0;
void coop_capShipDamage(string sAnimName)
{
	if(fCapShipDamage != 1){
		fCapShipDamage=1;

		//[b60021] chrissstrahl - changed to avoid lag on server
		if(sAnimName != "shielded"){
			$capital_ship.anim ( "damaged" );
			wait ( .5 ); 
			$capital_ship.anim ( "idle" );
		}
		/*else{
			$capital_ship.anim ( "shielded" );
			wait ( .5 );
			$capital_ship.anim ( "idle" );
		}*/
		fCapShipDamage=0;
	}
}

