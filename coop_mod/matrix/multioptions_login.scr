//This script contains the code for the admin login menu
//the login code has to be set via cvar coop_admin
//You might need to use: rcon set coop_admin 1234
//
//PERMISSIONS
//- coop_admins can only accsess coop developer functionality
//- coop_admins can NOT use any other commands like rcon
//- Developer commands are typed in chat or console on a coop server, starting with a leading "!"
//
//CODE
//- The code can be between 3 and 6 digits, every other length will not work

//Global Variables, can be accessed by all Functions/scriptfiles
//if definied outside a function, just like this
////////////////////////////////////////////////////////////////////////////////
float 	float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue,
		float_codepanelCurrentNumber,
		float_codepanelLastUsed;
string	string_cvarNameForCoopAdminLoginCode; //[b610] chrissstrahl - removed inizial value, does not work on strings anyway

//declaration
////////////////////////////////////////////////////////////////////////////////
void	coop_login();
void	coop_login_One();
void	coop_login_Two();
void	coop_login_Three();
void	coop_login_Four();
void	coop_login_Five();
void	coop_login_Six();
void	coop_login_Seven();
void	coop_login_Eight();
void	coop_login_Nine();
void	coop_login_Zero();


void coop_login()
//this function is started once the trigger is used
{
//create internal variables, used only inside this function
	//centerprint("coop_login was started\n");
	float	fcodepanelLastUsed,
			fCombinationIndex,
			fError,
			iDigitCurrent,
			iLength,
			iUsedAndFailed,
			iValidationStamp;
	entity	ePlayer,eTrigger;
	string	sCode;
	
	
	//this adds a extra layer of hack protection, just in case...		
	string_cvarNameForCoopAdminLoginCode = "coop_admin";	//set here the name of the cvar containing the login code
	
	//this adds a extra layer of hack protection, just in case...
	if(float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue == 0){
		float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue=(getLevelTime()+randomInt(99999));
	}
	
	eTrigger=getCurrentEntity();
	if(!doesEntityExist(eTrigger)){ return; }
	
	iValidationStamp = eTrigger.getFloatVar("mom_validationStamp"); //security validation tooken
	
	ePlayer = mom_returnPlayerForTrigger(eTrigger);
	
	sCode=getCvar(string_cvarNameForCoopAdminLoginCode);
	iLength = getIntStringLength(sCode);
	
	//check for errors in code
	if(sCode == ""){
		mom_showMessagePlayer(ePlayer,"Server has no code set in the cvar ("+string_cvarNameForCoopAdminLoginCode+") for the admin code, please set via rcon.\n");
		wait(1);
		if(doesEntityExist(ePlayer)){
			thread mom_exitMenuPlayer(ePlayer);	//[b610] chrissstrahl - remove the Menu from the player again
		}
		return;
	}
	if( getFloatFromString(sCode) < 1 || iLength < 3){ //just in case the code is 001, note that 001 will be transformed into 1
		mom_showMessagePlayer(ePlayer,"Code in the cvar ("+string_cvarNameForCoopAdminLoginCode+") is not nummeric or to short. Length is "+iLength+" should be 3 or more.\n");
		wait(1);
		if(doesEntityExist(ePlayer)){
			thread mom_exitMenuPlayer(ePlayer);	//[b610] chrissstrahl - remove the Menu from the player again
		}
		return;
	}
	
	//check for unauthorised accsess
	iUsedAndFailed = ePlayer.getFloatVar("coop_login_usedAndFailedTimes"+float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue);
	if(iUsedAndFailed > 3){
		mom_showMessagePlayer(ePlayer,"^1Trying to hack the Code is not appeciated.\n");
		wait(1.5);
		if(doesEntityExist(ePlayer)){
			thread mom_exitMenuPlayer(ePlayer);	//[b610] chrissstrahl - remove the Menu from the player again
			ePlayer.kill();
			centerprint("^5INFO: ^3Somone was killed trying to hack the Admin Code...");
		}
		return;
	}
//set equal, below it will respond to change
	fcodepanelLastUsed		= float_codepanelLastUsed;	
//repeat this procedure the whole time
	while(mom_validUser(ePlayer,iValidationStamp)){ //security validation tooken
	//check if a function has been called since the last time
		if(float_codepanelLastUsed != fcodepanelLastUsed){
			fcodepanelLastUsed = float_codepanelLastUsed;	//remember the last time a function has been used
			//once all numbers have been entred,
			//check if the combination is correct
			if(fError == 1){
				fCombinationIndex++;	//set next index number	
				//incorrect code goes until 10 to make it hard to hack this thing by guessing
				if(fCombinationIndex == 10){
					iUsedAndFailed++;
					ePlayer.setFloatVar("coop_login_usedAndFailedTimes"+float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue,iUsedAndFailed);
					mom_showMessagePlayer(ePlayer,"^5Accsess ^1Denied!\n");	//let the player know whats happening
					ePlayer.playsound( "sound/environment/computer/access_denied.wav" ,1);
					thread mom_exitMenuPlayer(ePlayer);	//remove the Menu from the player again
					return;	//exit this function now
				}
			}else{
				iDigitCurrent = getFloatFromString(getStringFromStringWithLengt(sCode,fCombinationIndex,1));
				if(iDigitCurrent != float_codepanelCurrentNumber){
					fError=1;
				}
				fCombinationIndex++;	//set next index number	
				if(fCombinationIndex == iLength){
				//code correct
					ePlayer.setFloatVar("coop_login_usedAndFailedTimes"+float_aNt1HaCkC0d3CoMb1NatIonVaRCoDeV47Ue,0);
					ePlayer.setStringVar("coop_login_authorisation",sCode);
					//mom_showMessagePlayer(ePlayer,"^5Accesess ^2Granted!");	//let the player know whats happening
					centerprint("^5INFO:^8 ^2Coop Admin^8 "+getStringPlayerName(ePlayer)+" ^2has logged in.\n");
					ePlayer.playsound( "sound/environment/computer/lcars_yes.wav" ,1);
					thread mom_exitMenuPlayer(ePlayer);	//remove the Menu from the player again
					return;	//exit this fnction now
				}
			}
		}
	//pause a moment or you will get a run away loop error
		wait(0.02);
	}
}

void coop_login_One()
//this function is called when option 1 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=1;
	//centerprint("used one\n");
}
void coop_login_Two()
//this function is called when option 2 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=2;
	//centerprint("used two\n");
}
void coop_login_Three()
//this function is called when option 3 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=3;
	//centerprint("used three\n");
}
void coop_login_Four()
//this function is called when option 4 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=4;
	//centerprint("used four\n");
}
void coop_login_Five()
//this function is called when option 5 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=5;
	//centerprint("used five\n");
}
void coop_login_Six()
//this function is called when option 6 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=6;
	//centerprint("used six\n");
}
void coop_login_Seven()
//this function is called when option 7 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=7;
	//centerprint("used seven\n");
}
void coop_login_Eight()
//this function is called when option 8 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=8;
	//centerprint("used eight\n");
}
void coop_login_Nine()
//this function is called when option 9 is used
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=9;
	//centerprint("used nine\n");
}
//this function is called when option 10 is used
void coop_login_Zero()
{
	float_codepanelLastUsed = getLevelTime();
	float_codepanelCurrentNumber=0;
	//centerprint("used zero\n");
}


